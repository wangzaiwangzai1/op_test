{"abi":[{"type":"function","name":"EIP712_DOMAIN_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PROOF_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"consumeNonce","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"currentNonce","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDigestWithEIP712Domain","inputs":[{"name":"_proof","type":"tuple","internalType":"struct AdminFaucetAuthModule.Proof","components":[{"name":"recipient","type":"address","internalType":"address"},{"name":"nonce","type":"bytes32","internalType":"bytes32"},{"name":"id","type":"bytes32","internalType":"bytes32"}]},{"name":"_name","type":"bytes","internalType":"bytes"},{"name":"_version","type":"bytes","internalType":"bytes"},{"name":"_chainid","type":"uint256","internalType":"uint256"},{"name":"_verifyingContract","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"getProofStructHash","inputs":[{"name":"_proof","type":"tuple","internalType":"struct AdminFaucetAuthModule.Proof","components":[{"name":"recipient","type":"address","internalType":"address"},{"name":"nonce","type":"bytes32","internalType":"bytes32"},{"name":"id","type":"bytes32","internalType":"bytes32"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b506105bd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063adb610a311610050578063adb610a314610142578063b163a6b81461014b578063c7977be71461015e57600080fd5b806334b1511814610077578063796dfbfa146100915780638b3e3bf61461011b575b600080fd5b61007f610185565b60405190815260200160405180910390f35b61007f61009f3660046103f3565b805160208083015160409384015184517fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e8185015273ffffffffffffffffffffffffffffffffffffffff9094168486015260608401919091526080808401919091528351808403909101815260a0909201909252805191012090565b61007f7fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e81565b61007f60005481565b61007f6101593660046104c1565b6101c5565b61007f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b60008054818061019483610551565b919050556040516020016101aa91815260200190565b60405160208183030381529060405280519060200120905090565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061032f816102d489805160208083015160409384015184517fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e8185015273ffffffffffffffffffffffffffffffffffffffff9094168486015260608401919091526080808401919091528351808403909101815260a0909201909252805191012090565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461038d57600080fd5b919050565b6000606082840312156103a457600080fd5b6040516060810181811067ffffffffffffffff821117156103c7576103c761033a565b6040529050806103d683610369565b815260208301356020820152604083013560408201525092915050565b60006060828403121561040557600080fd5b61040f8383610392565b9392505050565b600082601f83011261042757600080fd5b813567ffffffffffffffff808211156104425761044261033a565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156104885761048861033a565b816040528381528660208588010111156104a157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060e086880312156104d957600080fd5b6104e38787610392565b9450606086013567ffffffffffffffff8082111561050057600080fd5b61050c89838a01610416565b9550608088013591508082111561052257600080fd5b5061052f88828901610416565b93505060a0860135915061054560c08701610369565b90509295509295909350565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036105a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a","sourceMap":"350:2488:344:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063adb610a311610050578063adb610a314610142578063b163a6b81461014b578063c7977be71461015e57600080fd5b806334b1511814610077578063796dfbfa146100915780638b3e3bf61461011b575b600080fd5b61007f610185565b60405190815260200160405180910390f35b61007f61009f3660046103f3565b805160208083015160409384015184517fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e8185015273ffffffffffffffffffffffffffffffffffffffff9094168486015260608401919091526080808401919091528351808403909101815260a0909201909252805191012090565b61007f7fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e81565b61007f60005481565b61007f6101593660046104c1565b6101c5565b61007f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b60008054818061019483610551565b919050556040516020016101aa91815260200190565b60405160208183030381529060405280519060200120905090565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061032f816102d489805160208083015160409384015184517fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e8185015273ffffffffffffffffffffffffffffffffffffffff9094168486015260608401919091526080808401919091528351808403909101815260a0909201909252805191012090565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461038d57600080fd5b919050565b6000606082840312156103a457600080fd5b6040516060810181811067ffffffffffffffff821117156103c7576103c761033a565b6040529050806103d683610369565b815260208301356020820152604083013560408201525092915050565b60006060828403121561040557600080fd5b61040f8383610392565b9392505050565b600082601f83011261042757600080fd5b813567ffffffffffffffff808211156104425761044261033a565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156104885761048861033a565b816040528381528660208588010111156104a157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060e086880312156104d957600080fd5b6104e38787610392565b9450606086013567ffffffffffffffff8082111561050057600080fd5b61050c89838a01610416565b9550608088013591508082111561052257600080fd5b5061052f88828901610416565b93505060a0860135915061054560c08701610369565b90509295509295909350565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036105a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a","sourceMap":"350:2488:344:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1125:119;;;:::i;:::-;;;160:25:383;;;148:2;133:18;1125:119:344;;;;;;;1391:205;;;;;;:::i;:::-;1546:16;;1564:12;;;;;1578:9;;;;;1519:69;;471:62;1519:69;;;3715:25:383;3788:42;3776:55;;;3756:18;;;3749:83;3848:18;;;3841:34;;;;3891:18;;;;3884:34;;;;1519:69:344;;;;;;;;;;3687:19:383;;;;1519:69:344;;;1509:80;;;;;;1391:205;430:103;;471:62;430:103;;883:27;;;;;;2292:544;;;;;;:::i;:::-;;:::i;641:152::-;;698:95;641:152;;1125:119;1165:7;1220:14;;1165:7;;1220:14;;;:::i;:::-;;;;;1209:26;;;;;;160:25:383;;148:2;133:18;;14:177;1209:26:344;;;;;;;;;;;;;1199:37;;;;;;1184:53;;1125:119;:::o;2292:544::-;2657:16;;;;;;;;;;2675:19;;;;;;2622:103;;;698:95;2622:103;;;4188:25:383;;;;4229:18;;4222:34;;;;4272:18;;;4265:34;4315:18;;;4308:34;;;4391:42;4379:55;;4358:19;;;4351:84;2550:7:344;;;;4160:19:383;;2622:103:344;;;;;;;;;;;;2599:136;;;;;;2573:162;;2752:77;2785:15;2802:26;2821:6;1546:16;;1564:12;;;;;1578:9;;;;;1519:69;;471:62;1519:69;;;3715:25:383;3788:42;3776:55;;;3756:18;;;3749:83;3848:18;;;3841:34;;;;3891:18;;;;3884:34;;;;1519:69:344;;;;;;;;;;3687:19:383;;;;1519:69:344;;;1509:80;;;;;;1391:205;2802:26;8710:57:36;;4716:66:383;8710:57:36;;;4704:79:383;4799:11;;;4792:27;;;4835:12;;;4828:28;;;8674:7:36;;4872:12:383;;8710:57:36;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;2752:77:344;2745:84;2292:544;-1:-1:-1;;;;;;;2292:544:344:o;196:184:383:-;248:77;245:1;238:88;345:4;342:1;335:15;369:4;366:1;359:15;385:196;453:20;;513:42;502:54;;492:65;;482:93;;571:1;568;561:12;482:93;385:196;;;:::o;586:542::-;638:5;686:4;674:9;669:3;665:19;661:30;658:50;;;704:1;701;694:12;658:50;737:2;731:9;779:4;771:6;767:17;850:6;838:10;835:22;814:18;802:10;799:34;796:62;793:88;;;861:18;;:::i;:::-;897:2;890:22;930:6;-1:-1:-1;930:6:383;960:29;979:9;960:29;:::i;:::-;952:6;945:45;1051:2;1040:9;1036:18;1023:32;1018:2;1010:6;1006:15;999:57;1117:2;1106:9;1102:18;1089:32;1084:2;1076:6;1072:15;1065:57;;586:542;;;;:::o;1133:225::-;1217:6;1270:2;1258:9;1249:7;1245:23;1241:32;1238:52;;;1286:1;1283;1276:12;1238:52;1309:43;1344:7;1333:9;1309:43;:::i;:::-;1299:53;1133:225;-1:-1:-1;;;1133:225:383:o;1545:777::-;1587:5;1640:3;1633:4;1625:6;1621:17;1617:27;1607:55;;1658:1;1655;1648:12;1607:55;1694:6;1681:20;1720:18;1757:2;1753;1750:10;1747:36;;;1763:18;;:::i;:::-;1897:2;1891:9;1959:4;1951:13;;1802:66;1947:22;;;1971:2;1943:31;1939:40;1927:53;;;1995:18;;;2015:22;;;1992:46;1989:72;;;2041:18;;:::i;:::-;2081:10;2077:2;2070:22;2116:2;2108:6;2101:18;2162:3;2155:4;2150:2;2142:6;2138:15;2134:26;2131:35;2128:55;;;2179:1;2176;2169:12;2128:55;2243:2;2236:4;2228:6;2224:17;2217:4;2209:6;2205:17;2192:54;2290:1;2283:4;2278:2;2270:6;2266:15;2262:26;2255:37;2310:6;2301:15;;;;;;1545:777;;;;:::o;2327:798::-;2465:6;2473;2481;2489;2497;2550:3;2538:9;2529:7;2525:23;2521:33;2518:53;;;2567:1;2564;2557:12;2518:53;2590:43;2625:7;2614:9;2590:43;:::i;:::-;2580:53;;2684:2;2673:9;2669:18;2656:32;2707:18;2748:2;2740:6;2737:14;2734:34;;;2764:1;2761;2754:12;2734:34;2787:49;2828:7;2819:6;2808:9;2804:22;2787:49;:::i;:::-;2777:59;;2889:3;2878:9;2874:19;2861:33;2845:49;;2919:2;2909:8;2906:16;2903:36;;;2935:1;2932;2925:12;2903:36;;2958:51;3001:7;2990:8;2979:9;2975:24;2958:51;:::i;:::-;2948:61;;;3056:3;3045:9;3041:19;3028:33;3018:43;;3080:39;3114:3;3103:9;3099:19;3080:39;:::i;:::-;3070:49;;2327:798;;;;;;;;:::o;3130:349::-;3169:3;3200:66;3193:5;3190:77;3187:257;;3300:77;3297:1;3290:88;3401:4;3398:1;3391:15;3429:4;3426:1;3419:15;3187:257;-1:-1:-1;3471:1:383;3460:13;;3130:349::o","linkReferences":{}},"methodIdentifiers":{"EIP712_DOMAIN_TYPEHASH()":"c7977be7","PROOF_TYPEHASH()":"8b3e3bf6","consumeNonce()":"34b15118","currentNonce()":"adb610a3","getDigestWithEIP712Domain((address,bytes32,bytes32),bytes,bytes,uint256,address)":"b163a6b8","getProofStructHash((address,bytes32,bytes32))":"796dfbfa"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EIP712_DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROOF_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consumeNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"internalType\":\"struct AdminFaucetAuthModule.Proof\",\"name\":\"_proof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_version\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_verifyingContract\",\"type\":\"address\"}],\"name\":\"getDigestWithEIP712Domain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"internalType\":\"struct AdminFaucetAuthModule.Proof\",\"name\":\"_proof\",\"type\":\"tuple\"}],\"name\":\"getProofStructHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"consumeNonce()\":{\"returns\":{\"_0\":\"Nonce that should be used as part of drip parameters.\"}},\"getDigestWithEIP712Domain((address,bytes32,bytes32),bytes,bytes,uint256,address)\":{\"params\":{\"_chainid\":\"Chain ID to use in the EIP712 domain.\",\"_name\":\"Contract name to use in the EIP712 domain.\",\"_proof\":\"Proof struct to hash.\",\"_verifyingContract\":\"Address to use in the EIP712 domain.\",\"_version\":\"Contract version to use in the EIP712 domain.\"},\"returns\":{\"_0\":\"EIP-712 compatible digest.\"}},\"getProofStructHash((address,bytes32,bytes32))\":{\"params\":{\"_proof\":\"Proof struct to hash.\"},\"returns\":{\"_0\":\"EIP-712 typed struct hash.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"EIP712_DOMAIN_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the EIP712Domain type that is included as part of the signature.\"},\"PROOF_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the Proof type.\"},\"consumeNonce()\":{\"notice\":\"Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces.\"},\"currentNonce()\":{\"notice\":\"Keeps track of current nonce to generate new nonces for each drip.\"},\"getDigestWithEIP712Domain((address,bytes32,bytes32),bytes,bytes,uint256,address)\":{\"notice\":\"Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail.\"},\"getProofStructHash((address,bytes32,bytes32))\":{\"notice\":\"Returns the hash of the struct Proof.\"}},\"notice\":\"Simple helper contract that helps with testing the Faucet contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/FaucetHelper.sol\":\"FaucetHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/periphery/faucet/Faucet.sol\":{\"keccak256\":\"0xb5002cc0394afe46a9244b8f65a5b5601ee177be55867c52773a1bf789124cb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://673f34da6c815b00c8d9e2fb6c57e4a087d02f9aad453d626515cb21999558d9\",\"dweb:/ipfs/QmQ7hzya1TSV8iMuS64eYukSzNKebeAq7EPpnXMeV4phN9\"]},\"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol\":{\"keccak256\":\"0x61ee226cdf92f7cee746ca0742cd34998add458e1e3a61d748091e1baca1115e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebaa96860a55390e9c52f4096fda83b5a0a0c7603a43afeb9af116e14942f0c7\",\"dweb:/ipfs/QmS2iimkhDxUmpS2QSyfWPUJrhLsXvz9H2kQE7BCYLyg3r\"]},\"src/periphery/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850\",\"dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf\"]},\"test/mocks/FaucetHelper.sol\":{\"keccak256\":\"0x1924dc9b7151426028273501d6fe0e3ceb3ccd38947d01fce10a36282ebe14cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76c58e4b66c72adfbac601a55e68fb9e95642a4e02d854a00918ae4d0ac42329\",\"dweb:/ipfs/QmdD2ETTgWNMvfodQwy5a6s81XRRrPp9yPPi3QFPw2HMe7\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"EIP712_DOMAIN_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PROOF_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"consumeNonce","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"currentNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct AdminFaucetAuthModule.Proof","name":"_proof","type":"tuple","components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes32","name":"id","type":"bytes32"}]},{"internalType":"bytes","name":"_name","type":"bytes"},{"internalType":"bytes","name":"_version","type":"bytes"},{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_verifyingContract","type":"address"}],"stateMutability":"pure","type":"function","name":"getDigestWithEIP712Domain","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct AdminFaucetAuthModule.Proof","name":"_proof","type":"tuple","components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes32","name":"id","type":"bytes32"}]}],"stateMutability":"pure","type":"function","name":"getProofStructHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"consumeNonce()":{"returns":{"_0":"Nonce that should be used as part of drip parameters."}},"getDigestWithEIP712Domain((address,bytes32,bytes32),bytes,bytes,uint256,address)":{"params":{"_chainid":"Chain ID to use in the EIP712 domain.","_name":"Contract name to use in the EIP712 domain.","_proof":"Proof struct to hash.","_verifyingContract":"Address to use in the EIP712 domain.","_version":"Contract version to use in the EIP712 domain."},"returns":{"_0":"EIP-712 compatible digest."}},"getProofStructHash((address,bytes32,bytes32))":{"params":{"_proof":"Proof struct to hash."},"returns":{"_0":"EIP-712 typed struct hash."}}},"version":1},"userdoc":{"kind":"user","methods":{"EIP712_DOMAIN_TYPEHASH()":{"notice":"EIP712 typehash for the EIP712Domain type that is included as part of the signature."},"PROOF_TYPEHASH()":{"notice":"EIP712 typehash for the Proof type."},"consumeNonce()":{"notice":"Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces."},"currentNonce()":{"notice":"Keeps track of current nonce to generate new nonces for each drip."},"getDigestWithEIP712Domain((address,bytes32,bytes32),bytes,bytes,uint256,address)":{"notice":"Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail."},"getProofStructHash((address,bytes32,bytes32))":{"notice":"Returns the hash of the struct Proof."}},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"test/mocks/FaucetHelper.sol":"FaucetHelper"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol":{"keccak256":"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863","urls":["bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c","dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol":{"keccak256":"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc","urls":["bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb","dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"keccak256":"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544","urls":["bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e","dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10","urls":["bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487","dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3","urls":["bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638","dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5","urls":["bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900","dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol":{"keccak256":"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81","urls":["bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b","dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol":{"keccak256":"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7","urls":["bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba","dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"],"license":"MIT"},"src/libraries/SafeCall.sol":{"keccak256":"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f","urls":["bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a","dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"],"license":"MIT"},"src/periphery/faucet/Faucet.sol":{"keccak256":"0xb5002cc0394afe46a9244b8f65a5b5601ee177be55867c52773a1bf789124cb3","urls":["bzz-raw://673f34da6c815b00c8d9e2fb6c57e4a087d02f9aad453d626515cb21999558d9","dweb:/ipfs/QmQ7hzya1TSV8iMuS64eYukSzNKebeAq7EPpnXMeV4phN9"],"license":"MIT"},"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol":{"keccak256":"0x61ee226cdf92f7cee746ca0742cd34998add458e1e3a61d748091e1baca1115e","urls":["bzz-raw://ebaa96860a55390e9c52f4096fda83b5a0a0c7603a43afeb9af116e14942f0c7","dweb:/ipfs/QmS2iimkhDxUmpS2QSyfWPUJrhLsXvz9H2kQE7BCYLyg3r"],"license":"MIT"},"src/periphery/faucet/authmodules/IFaucetAuthModule.sol":{"keccak256":"0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d","urls":["bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850","dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf"],"license":"MIT"},"test/mocks/FaucetHelper.sol":{"keccak256":"0x1924dc9b7151426028273501d6fe0e3ceb3ccd38947d01fce10a36282ebe14cd","urls":["bzz-raw://76c58e4b66c72adfbac601a55e68fb9e95642a4e02d854a00918ae4d0ac42329","dweb:/ipfs/QmdD2ETTgWNMvfodQwy5a6s81XRRrPp9yPPi3QFPw2HMe7"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":220763,"contract":"test/mocks/FaucetHelper.sol:FaucetHelper","label":"currentNonce","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"version":1,"kind":"user","methods":{"EIP712_DOMAIN_TYPEHASH()":{"notice":"EIP712 typehash for the EIP712Domain type that is included as part of the signature."},"PROOF_TYPEHASH()":{"notice":"EIP712 typehash for the Proof type."},"consumeNonce()":{"notice":"Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces."},"currentNonce()":{"notice":"Keeps track of current nonce to generate new nonces for each drip."},"getDigestWithEIP712Domain((address,bytes32,bytes32),bytes,bytes,uint256,address)":{"notice":"Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail."},"getProofStructHash((address,bytes32,bytes32))":{"notice":"Returns the hash of the struct Proof."}},"notice":"Simple helper contract that helps with testing the Faucet contract."},"devdoc":{"version":1,"kind":"dev","methods":{"consumeNonce()":{"returns":{"_0":"Nonce that should be used as part of drip parameters."}},"getDigestWithEIP712Domain((address,bytes32,bytes32),bytes,bytes,uint256,address)":{"params":{"_chainid":"Chain ID to use in the EIP712 domain.","_name":"Contract name to use in the EIP712 domain.","_proof":"Proof struct to hash.","_verifyingContract":"Address to use in the EIP712 domain.","_version":"Contract version to use in the EIP712 domain."},"returns":{"_0":"EIP-712 compatible digest."}},"getProofStructHash((address,bytes32,bytes32))":{"params":{"_proof":"Proof struct to hash."},"returns":{"_0":"EIP-712 typed struct hash."}}}},"ast":{"absolutePath":"test/mocks/FaucetHelper.sol","id":220849,"exportedSymbols":{"AdminFaucetAuthModule":[111679],"ECDSAUpgradeable":[49259],"FaucetHelper":[220848]},"nodeType":"SourceUnit","src":"32:2807:344","nodes":[{"id":220743,"nodeType":"PragmaDirective","src":"32:23:344","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":220745,"nodeType":"ImportDirective","src":"57:111:344","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","nameLocation":"-1:-1:-1","scope":220849,"sourceUnit":49260,"symbolAliases":[{"foreign":{"id":220744,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49259,"src":"66:16:344","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":220747,"nodeType":"ImportDirective","src":"169:99:344","nodes":[],"absolutePath":"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol","file":"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol","nameLocation":"-1:-1:-1","scope":220849,"sourceUnit":111680,"symbolAliases":[{"foreign":{"id":220746,"name":"AdminFaucetAuthModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111679,"src":"178:21:344","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":220848,"nodeType":"ContractDefinition","src":"350:2488:344","nodes":[{"id":220754,"nodeType":"VariableDeclaration","src":"430:103:344","nodes":[],"constant":true,"documentation":{"id":220749,"nodeType":"StructuredDocumentation","src":"378:47:344","text":"@notice EIP712 typehash for the Proof type."},"functionSelector":"8b3e3bf6","mutability":"constant","name":"PROOF_TYPEHASH","nameLocation":"454:14:344","scope":220848,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"430:7:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"50726f6f66286164647265737320726563697069656e742c62797465733332206e6f6e63652c6279746573333220696429","id":220752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"481:51:344","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e","typeString":"literal_string \"Proof(address recipient,bytes32 nonce,bytes32 id)\""},"value":"Proof(address recipient,bytes32 nonce,bytes32 id)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e","typeString":"literal_string \"Proof(address recipient,bytes32 nonce,bytes32 id)\""}],"id":220751,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"471:9:344","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":220753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"471:62:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":220760,"nodeType":"VariableDeclaration","src":"641:152:344","nodes":[],"constant":true,"documentation":{"id":220755,"nodeType":"StructuredDocumentation","src":"540:96:344","text":"@notice EIP712 typehash for the EIP712Domain type that is included as part of the signature."},"functionSelector":"c7977be7","mutability":"constant","name":"EIP712_DOMAIN_TYPEHASH","nameLocation":"665:22:344","scope":220848,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"641:7:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":220758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"708:84:344","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":220757,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"698:9:344","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":220759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"698:95:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":220763,"nodeType":"VariableDeclaration","src":"883:27:344","nodes":[],"constant":false,"documentation":{"id":220761,"nodeType":"StructuredDocumentation","src":"800:78:344","text":"@notice Keeps track of current nonce to generate new nonces for each drip."},"functionSelector":"adb610a3","mutability":"mutable","name":"currentNonce","nameLocation":"898:12:344","scope":220848,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220762,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:344","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"id":220781,"nodeType":"FunctionDefinition","src":"1125:119:344","nodes":[],"body":{"id":220780,"nodeType":"Block","src":"1174:70:344","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":220775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1220:14:344","subExpression":{"id":220774,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220763,"src":"1220:12:344","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":220772,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1209:3:344","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":220773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1209:10:344","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":220776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1209:26:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":220771,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1199:9:344","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":220777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1199:37:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":220770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1191:7:344","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":220769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1191:7:344","typeDescriptions":{}}},"id":220778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1191:46:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":220768,"id":220779,"nodeType":"Return","src":"1184:53:344"}]},"documentation":{"id":220764,"nodeType":"StructuredDocumentation","src":"917:203:344","text":"@notice Returns a bytes32 nonce that should change everytime. In practice, people should use\n         pseudorandom nonces.\n @return Nonce that should be used as part of drip parameters."},"functionSelector":"34b15118","implemented":true,"kind":"function","modifiers":[],"name":"consumeNonce","nameLocation":"1134:12:344","parameters":{"id":220765,"nodeType":"ParameterList","parameters":[],"src":"1146:2:344"},"returnParameters":{"id":220768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220781,"src":"1165:7:344","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1165:7:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1164:9:344"},"scope":220848,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":220804,"nodeType":"FunctionDefinition","src":"1391:205:344","nodes":[],"body":{"id":220803,"nodeType":"Block","src":"1492:104:344","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":220793,"name":"PROOF_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220754,"src":"1530:14:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":220794,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220785,"src":"1546:6:344","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$111624_memory_ptr","typeString":"struct AdminFaucetAuthModule.Proof memory"}},"id":220795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":111619,"src":"1546:16:344","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":220796,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220785,"src":"1564:6:344","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$111624_memory_ptr","typeString":"struct AdminFaucetAuthModule.Proof memory"}},"id":220797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":111621,"src":"1564:12:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":220798,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220785,"src":"1578:6:344","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$111624_memory_ptr","typeString":"struct AdminFaucetAuthModule.Proof memory"}},"id":220799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":111623,"src":"1578:9:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":220791,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1519:3:344","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":220792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1519:10:344","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":220800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1519:69:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":220790,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1509:9:344","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":220801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1509:80:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":220789,"id":220802,"nodeType":"Return","src":"1502:87:344"}]},"documentation":{"id":220782,"nodeType":"StructuredDocumentation","src":"1250:136:344","text":"@notice Returns the hash of the struct Proof.\n @param _proof Proof struct to hash.\n @return EIP-712 typed struct hash."},"functionSelector":"796dfbfa","implemented":true,"kind":"function","modifiers":[],"name":"getProofStructHash","nameLocation":"1400:18:344","parameters":{"id":220786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220785,"mutability":"mutable","name":"_proof","nameLocation":"1454:6:344","nodeType":"VariableDeclaration","scope":220804,"src":"1419:41:344","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$111624_memory_ptr","typeString":"struct AdminFaucetAuthModule.Proof"},"typeName":{"id":220784,"nodeType":"UserDefinedTypeName","pathNode":{"id":220783,"name":"AdminFaucetAuthModule.Proof","nodeType":"IdentifierPath","referencedDeclaration":111624,"src":"1419:27:344"},"referencedDeclaration":111624,"src":"1419:27:344","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$111624_storage_ptr","typeString":"struct AdminFaucetAuthModule.Proof"}},"visibility":"internal"}],"src":"1418:43:344"},"returnParameters":{"id":220789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220804,"src":"1483:7:344","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1483:7:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1482:9:344"},"scope":220848,"stateMutability":"pure","virtual":false,"visibility":"public"},{"id":220847,"nodeType":"FunctionDefinition","src":"2292:544:344","nodes":[],"body":{"id":220846,"nodeType":"Block","src":"2563:273:344","nodes":[],"statements":[{"assignments":[220822],"declarations":[{"constant":false,"id":220822,"mutability":"mutable","name":"domainSeparator","nameLocation":"2581:15:344","nodeType":"VariableDeclaration","scope":220846,"src":"2573:23:344","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2573:7:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":220837,"initialValue":{"arguments":[{"arguments":[{"id":220826,"name":"EIP712_DOMAIN_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220760,"src":"2633:22:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":220828,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220810,"src":"2667:5:344","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":220827,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2657:9:344","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":220829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:16:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":220831,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220812,"src":"2685:8:344","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":220830,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2675:9:344","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":220832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2675:19:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":220833,"name":"_chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220814,"src":"2696:8:344","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":220834,"name":"_verifyingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220816,"src":"2706:18:344","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":220824,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2622:3:344","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":220825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2622:10:344","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":220835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2622:103:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":220823,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2599:9:344","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":220836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2599:136:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2573:162:344"},{"expression":{"arguments":[{"id":220840,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220822,"src":"2785:15:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":220842,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220808,"src":"2821:6:344","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$111624_memory_ptr","typeString":"struct AdminFaucetAuthModule.Proof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proof_$111624_memory_ptr","typeString":"struct AdminFaucetAuthModule.Proof memory"}],"id":220841,"name":"getProofStructHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220804,"src":"2802:18:344","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Proof_$111624_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct AdminFaucetAuthModule.Proof memory) pure returns (bytes32)"}},"id":220843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2802:26:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":220838,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49259,"src":"2752:16:344","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$49259_$","typeString":"type(library ECDSAUpgradeable)"}},"id":220839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":49258,"src":"2752:32:344","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":220844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2752:77:344","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":220820,"id":220845,"nodeType":"Return","src":"2745:84:344"}]},"documentation":{"id":220805,"nodeType":"StructuredDocumentation","src":"1602:685:344","text":"@notice Computes the EIP712 digest with the given domain parameters.\n         Used for testing that different domain parameters fail.\n @param _proof             Proof struct to hash.\n @param _name              Contract name to use in the EIP712 domain.\n @param _version           Contract version to use in the EIP712 domain.\n @param _chainid           Chain ID to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @return EIP-712 compatible digest."},"functionSelector":"b163a6b8","implemented":true,"kind":"function","modifiers":[],"name":"getDigestWithEIP712Domain","nameLocation":"2301:25:344","parameters":{"id":220817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220808,"mutability":"mutable","name":"_proof","nameLocation":"2371:6:344","nodeType":"VariableDeclaration","scope":220847,"src":"2336:41:344","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$111624_memory_ptr","typeString":"struct AdminFaucetAuthModule.Proof"},"typeName":{"id":220807,"nodeType":"UserDefinedTypeName","pathNode":{"id":220806,"name":"AdminFaucetAuthModule.Proof","nodeType":"IdentifierPath","referencedDeclaration":111624,"src":"2336:27:344"},"referencedDeclaration":111624,"src":"2336:27:344","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$111624_storage_ptr","typeString":"struct AdminFaucetAuthModule.Proof"}},"visibility":"internal"},{"constant":false,"id":220810,"mutability":"mutable","name":"_name","nameLocation":"2400:5:344","nodeType":"VariableDeclaration","scope":220847,"src":"2387:18:344","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220809,"name":"bytes","nodeType":"ElementaryTypeName","src":"2387:5:344","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":220812,"mutability":"mutable","name":"_version","nameLocation":"2428:8:344","nodeType":"VariableDeclaration","scope":220847,"src":"2415:21:344","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220811,"name":"bytes","nodeType":"ElementaryTypeName","src":"2415:5:344","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":220814,"mutability":"mutable","name":"_chainid","nameLocation":"2454:8:344","nodeType":"VariableDeclaration","scope":220847,"src":"2446:16:344","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2446:7:344","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220816,"mutability":"mutable","name":"_verifyingContract","nameLocation":"2480:18:344","nodeType":"VariableDeclaration","scope":220847,"src":"2472:26:344","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220815,"name":"address","nodeType":"ElementaryTypeName","src":"2472:7:344","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2326:178:344"},"returnParameters":{"id":220820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220847,"src":"2550:7:344","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2550:7:344","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2549:9:344"},"scope":220848,"stateMutability":"pure","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[],"canonicalName":"FaucetHelper","contractDependencies":[],"contractKind":"contract","documentation":{"id":220748,"nodeType":"StructuredDocumentation","src":"270:80:344","text":"@notice Simple helper contract that helps with testing the Faucet contract."},"fullyImplemented":true,"linearizedBaseContracts":[220848],"name":"FaucetHelper","nameLocation":"359:12:344","scope":220849,"usedErrors":[]}],"license":"MIT"},"id":344}