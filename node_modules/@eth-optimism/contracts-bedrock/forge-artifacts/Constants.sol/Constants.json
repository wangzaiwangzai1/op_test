{"abi":[],"bytecode":{"object":"0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a","sourceMap":"397:2561:200:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;397:2561:200;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a","sourceMap":"397:2561:200:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"PROXY_IMPLEMENTATION_ADDRESS\":{\"details\":\"`bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)`\"},\"PROXY_OWNER_ADDRESS\":{\"details\":\"`bytes32(uint256(keccak256('eip1967.proxy.admin')) - 1)`\"}},\"title\":\"Constants\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Constants is a library for storing constants. Simple! Don't put everything in here, just         the stuff used in multiple contracts. Constants that only apply to a single contract         should be defined in that contract instead.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Constants.sol\":\"Constants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0x069f3449a0408d7a9d05f3a5e01cce5e9c746591d8f3c87b43fcf9723bf7301d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124fff8e3b3c5992f04f1c92ceac09b003b880ec43031ef4ce816b2750184805\",\"dweb:/ipfs/QmfRxhi3hRdAhFkMLjX6RgHeFnWtkTJveQe8DVJcvRv3Er\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x91345e053584f82ad04d682ba821cf3ede808304f5b2a88116a894cf692c21db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://005e3c42d2edfca0a506cbda94d3b0104eddf20c00bd1bd25272f53f2ef74c72\",\"dweb:/ipfs/QmdaW6Nge6NKoGvFqRpQjBpM2fXpc5y8WpZyBnDnKicdJq\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x6d9560eba066364ec6b3fbdd8c085092a1d030a58c649063fa191cf4b3ccf464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5674512bafb162f62c9127f45894c0f74d9a269a878eaf5024a6e03430a1b426\",\"dweb:/ipfs/QmRU2GR7YKueAgtNbMG8kq5na89ZFiUM56jVu4Gda8MVxa\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/libraries/Constants.sol":"Constants"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66","urls":["bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f","dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10","urls":["bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487","dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0","urls":["bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929","dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7","urls":["bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689","dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"],"license":"MIT"},"lib/solmate/src/utils/FixedPointMathLib.sol":{"keccak256":"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d","urls":["bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c","dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"],"license":"MIT"},"src/L1/ResourceMetering.sol":{"keccak256":"0x069f3449a0408d7a9d05f3a5e01cce5e9c746591d8f3c87b43fcf9723bf7301d","urls":["bzz-raw://124fff8e3b3c5992f04f1c92ceac09b003b880ec43031ef4ce816b2750184805","dweb:/ipfs/QmfRxhi3hRdAhFkMLjX6RgHeFnWtkTJveQe8DVJcvRv3Er"],"license":"MIT"},"src/libraries/Arithmetic.sol":{"keccak256":"0x91345e053584f82ad04d682ba821cf3ede808304f5b2a88116a894cf692c21db","urls":["bzz-raw://005e3c42d2edfca0a506cbda94d3b0104eddf20c00bd1bd25272f53f2ef74c72","dweb:/ipfs/QmdaW6Nge6NKoGvFqRpQjBpM2fXpc5y8WpZyBnDnKicdJq"],"license":"MIT"},"src/libraries/Burn.sol":{"keccak256":"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010","urls":["bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f","dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"],"license":"MIT"},"src/libraries/Constants.sol":{"keccak256":"0x6d9560eba066364ec6b3fbdd8c085092a1d030a58c649063fa191cf4b3ccf464","urls":["bzz-raw://5674512bafb162f62c9127f45894c0f74d9a269a878eaf5024a6e03430a1b426","dweb:/ipfs/QmRU2GR7YKueAgtNbMG8kq5na89ZFiUM56jVu4Gda8MVxa"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","notice":"Constants is a library for storing constants. Simple! Don't put everything in here, just         the stuff used in multiple contracts. Constants that only apply to a single contract         should be defined in that contract instead."},"devdoc":{"version":1,"kind":"dev","title":"Constants"},"ast":{"absolutePath":"src/libraries/Constants.sol","id":106375,"exportedSymbols":{"Constants":[106374],"ResourceMetering":[90075]},"nodeType":"SourceUnit","src":"32:2927:200","nodes":[{"id":106314,"nodeType":"PragmaDirective","src":"32:23:200","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":106316,"nodeType":"ImportDirective","src":"57:63:200","nodes":[],"absolutePath":"src/L1/ResourceMetering.sol","file":"src/L1/ResourceMetering.sol","nameLocation":"-1:-1:-1","scope":106375,"sourceUnit":90076,"symbolAliases":[{"foreign":{"id":106315,"name":"ResourceMetering","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90075,"src":"66:16:200","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":106374,"nodeType":"ContractDefinition","src":"397:2561:200","nodes":[{"id":106324,"nodeType":"VariableDeclaration","src":"961:57:200","nodes":[],"constant":true,"documentation":{"id":106318,"nodeType":"StructuredDocumentation","src":"421:535:200","text":"@notice Special address to be used as the tx origin for gas estimation calls in the\n         OptimismPortal and CrossDomainMessenger calls. You only need to use this address if\n         the minimum gas limit specified by the user is not actually enough to execute the\n         given message and you're attempting to estimate the actual necessary gas limit. We\n         use address(1) because it's the ecrecover precompile and therefore guaranteed to\n         never have any code on any EVM chain."},"mutability":"constant","name":"ESTIMATION_ADDRESS","nameLocation":"987:18:200","scope":106374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106319,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:200","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"31","id":106322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1016:1:200","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":106321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1008:7:200","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":106320,"name":"address","nodeType":"ElementaryTypeName","src":"1008:7:200","typeDescriptions":{}}},"id":106323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1008:10:200","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"id":106328,"nodeType":"VariableDeclaration","src":"1292:88:200","nodes":[],"constant":true,"documentation":{"id":106325,"nodeType":"StructuredDocumentation","src":"1025:262:200","text":"@notice Value used for the L2 sender storage slot in both the OptimismPortal and the\n         CrossDomainMessenger contracts before an actual sender is set. This value is\n         non-zero to reduce the gas cost of message passing transactions."},"mutability":"constant","name":"DEFAULT_L2_SENDER","nameLocation":"1318:17:200","scope":106374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106326,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:200","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303064456144","id":106327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1338:42:200","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000dEaD"},"visibility":"internal"},{"id":106332,"nodeType":"VariableDeclaration","src":"1549:131:200","nodes":[],"constant":true,"documentation":{"id":106329,"nodeType":"StructuredDocumentation","src":"1387:157:200","text":"@notice The storage slot that holds the address of a proxy implementation.\n @dev `bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)`"},"mutability":"constant","name":"PROXY_IMPLEMENTATION_ADDRESS","nameLocation":"1575:28:200","scope":106374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":106330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:200","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":106331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1614:66:200","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"id":106336,"nodeType":"VariableDeclaration","src":"1827:114:200","nodes":[],"constant":true,"documentation":{"id":106333,"nodeType":"StructuredDocumentation","src":"1687:135:200","text":"@notice The storage slot that holds the address of the owner.\n @dev `bytes32(uint256(keccak256('eip1967.proxy.admin')) - 1)`"},"mutability":"constant","name":"PROXY_OWNER_ADDRESS","nameLocation":"1853:19:200","scope":106374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":106334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1827:7:200","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":106335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1875:66:200","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"id":106340,"nodeType":"VariableDeclaration","src":"2039:76:200","nodes":[],"constant":true,"documentation":{"id":106337,"nodeType":"StructuredDocumentation","src":"1948:86:200","text":"@notice The address that represents ether when dealing with ERC20 token addresses."},"mutability":"constant","name":"ETHER","nameLocation":"2065:5:200","scope":106374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106338,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:200","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":106339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:42:200","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"visibility":"internal"},{"id":106344,"nodeType":"VariableDeclaration","src":"2244:88:200","nodes":[],"constant":true,"documentation":{"id":106341,"nodeType":"StructuredDocumentation","src":"2122:117:200","text":"@notice The address that represents the system caller responsible for L1 attributes\n         transactions."},"mutability":"constant","name":"DEPOSITOR_ACCOUNT","nameLocation":"2270:17:200","scope":106374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106342,"name":"address","nodeType":"ElementaryTypeName","src":"2244:7:200","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307844656144444561444465416444654164444541644445616464654164644541644445416430303031","id":106343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2290:42:200","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDeaDDEaDDeAdDeAdDEAdDEaddeAddEAdDEAd0001"},"visibility":"internal"},{"id":106373,"nodeType":"FunctionDefinition","src":"2481:475:200","nodes":[],"body":{"id":106372,"nodeType":"Block","src":"2579:377:200","nodes":[],"statements":[{"assignments":[106355],"declarations":[{"constant":false,"id":106355,"mutability":"mutable","name":"config","nameLocation":"2628:6:200","nodeType":"VariableDeclaration","scope":106372,"src":"2589:45:200","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ResourceConfig_$89736_memory_ptr","typeString":"struct ResourceMetering.ResourceConfig"},"typeName":{"id":106354,"nodeType":"UserDefinedTypeName","pathNode":{"id":106353,"name":"ResourceMetering.ResourceConfig","nodeType":"IdentifierPath","referencedDeclaration":89736,"src":"2589:31:200"},"referencedDeclaration":89736,"src":"2589:31:200","typeDescriptions":{"typeIdentifier":"t_struct$_ResourceConfig_$89736_storage_ptr","typeString":"struct ResourceMetering.ResourceConfig"}},"visibility":"internal"}],"id":106369,"initialValue":{"arguments":[{"hexValue":"32305f3030305f303030","id":106358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2701:10:200","typeDescriptions":{"typeIdentifier":"t_rational_20000000_by_1","typeString":"int_const 20000000"},"value":"20_000_000"},{"hexValue":"3130","id":106359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2747:2:200","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"38","id":106360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2792:1:200","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"hexValue":"31","id":106361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:6:200","subdenomination":"gwei","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1"},{"hexValue":"315f3030305f303030","id":106362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2859:9:200","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1_000_000"},{"expression":{"arguments":[{"id":106365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2903:7:200","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":106364,"name":"uint128","nodeType":"ElementaryTypeName","src":"2903:7:200","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":106363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2898:4:200","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":106366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:13:200","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":106367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2898:17:200","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_20000000_by_1","typeString":"int_const 20000000"},{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":106356,"name":"ResourceMetering","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90075,"src":"2637:16:200","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ResourceMetering_$90075_$","typeString":"type(contract ResourceMetering)"}},"id":106357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ResourceConfig","nodeType":"MemberAccess","referencedDeclaration":89736,"src":"2637:31:200","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ResourceConfig_$89736_storage_ptr_$","typeString":"type(struct ResourceMetering.ResourceConfig storage pointer)"}},"id":106368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":["maxResourceLimit","elasticityMultiplier","baseFeeMaxChangeDenominator","minimumBaseFee","systemTxMaxGas","maximumBaseFee"],"nodeType":"FunctionCall","src":"2637:289:200","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ResourceConfig_$89736_memory_ptr","typeString":"struct ResourceMetering.ResourceConfig memory"}},"nodeType":"VariableDeclarationStatement","src":"2589:337:200"},{"expression":{"id":106370,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106355,"src":"2943:6:200","typeDescriptions":{"typeIdentifier":"t_struct$_ResourceConfig_$89736_memory_ptr","typeString":"struct ResourceMetering.ResourceConfig memory"}},"functionReturnParameters":106350,"id":106371,"nodeType":"Return","src":"2936:13:200"}]},"documentation":{"id":106345,"nodeType":"StructuredDocumentation","src":"2339:137:200","text":"@notice Returns the default values for the ResourceConfig. These are the recommended values\n         for a production network."},"implemented":true,"kind":"function","modifiers":[],"name":"DEFAULT_RESOURCE_CONFIG","nameLocation":"2490:23:200","parameters":{"id":106346,"nodeType":"ParameterList","parameters":[],"src":"2513:2:200"},"returnParameters":{"id":106350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106373,"src":"2539:38:200","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ResourceConfig_$89736_memory_ptr","typeString":"struct ResourceMetering.ResourceConfig"},"typeName":{"id":106348,"nodeType":"UserDefinedTypeName","pathNode":{"id":106347,"name":"ResourceMetering.ResourceConfig","nodeType":"IdentifierPath","referencedDeclaration":89736,"src":"2539:31:200"},"referencedDeclaration":89736,"src":"2539:31:200","typeDescriptions":{"typeIdentifier":"t_struct$_ResourceConfig_$89736_storage_ptr","typeString":"struct ResourceMetering.ResourceConfig"}},"visibility":"internal"}],"src":"2538:40:200"},"scope":106374,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Constants","contractDependencies":[],"contractKind":"library","documentation":{"id":106317,"nodeType":"StructuredDocumentation","src":"122:275:200","text":"@title Constants\n @notice Constants is a library for storing constants. Simple! Don't put everything in here, just\n         the stuff used in multiple contracts. Constants that only apply to a single contract\n         should be defined in that contract instead."},"fullyImplemented":true,"linearizedBaseContracts":[106374],"name":"Constants","nameLocation":"405:9:200","scope":106375,"usedErrors":[]}],"license":"MIT"},"id":200}