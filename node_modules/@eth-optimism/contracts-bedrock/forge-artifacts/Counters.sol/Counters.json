{"abi":[],"bytecode":{"object":"0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a","sourceMap":"424:971:61:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:61;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a","sourceMap":"424:971:61:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/Counters.sol":"Counters"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Counters.sol":{"keccak256":"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1","urls":["bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee","dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","author":"Matt Condon (@shrugs)","details":"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`","title":"Counters"},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Counters.sol","id":53509,"exportedSymbols":{"Counters":[53508]},"nodeType":"SourceUnit","src":"87:1309:61","nodes":[{"id":53436,"nodeType":"PragmaDirective","src":"87:23:61","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":53508,"nodeType":"ContractDefinition","src":"424:971:61","nodes":[{"id":53440,"nodeType":"StructDefinition","src":"447:374:61","nodes":[],"canonicalName":"Counters.Counter","members":[{"constant":false,"id":53439,"mutability":"mutable","name":"_value","nameLocation":"794:6:61","nodeType":"VariableDeclaration","scope":53440,"src":"786:14:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53438,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:61","scope":53508,"visibility":"public"},{"id":53452,"nodeType":"FunctionDefinition","src":"827:112:61","nodes":[],"body":{"id":53451,"nodeType":"Block","src":"901:38:61","nodes":[],"statements":[{"expression":{"expression":{"id":53448,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53443,"src":"918:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":53449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":53439,"src":"918:14:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53447,"id":53450,"nodeType":"Return","src":"911:21:61"}]},"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:61","parameters":{"id":53444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53443,"mutability":"mutable","name":"counter","nameLocation":"860:7:61","nodeType":"VariableDeclaration","scope":53452,"src":"844:23:61","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":53442,"nodeType":"UserDefinedTypeName","pathNode":{"id":53441,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":53440,"src":"844:7:61"},"referencedDeclaration":53440,"src":"844:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:61"},"returnParameters":{"id":53447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":53452,"src":"892:7:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53445,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:61"},"scope":53508,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":53466,"nodeType":"FunctionDefinition","src":"945:123:61","nodes":[],"body":{"id":53465,"nodeType":"Block","src":"998:70:61","nodes":[],"statements":[{"id":53464,"nodeType":"UncheckedBlock","src":"1008:54:61","statements":[{"expression":{"id":53462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":53458,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53455,"src":"1032:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":53460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":53439,"src":"1032:14:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":53461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:61","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":53463,"nodeType":"ExpressionStatement","src":"1032:19:61"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:61","parameters":{"id":53456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53455,"mutability":"mutable","name":"counter","nameLocation":"980:7:61","nodeType":"VariableDeclaration","scope":53466,"src":"964:23:61","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":53454,"nodeType":"UserDefinedTypeName","pathNode":{"id":53453,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":53440,"src":"964:7:61"},"referencedDeclaration":53440,"src":"964:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:61"},"returnParameters":{"id":53457,"nodeType":"ParameterList","parameters":[],"src":"998:0:61"},"scope":53508,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":53494,"nodeType":"FunctionDefinition","src":"1074:229:61","nodes":[],"body":{"id":53493,"nodeType":"Block","src":"1127:176:61","nodes":[],"statements":[{"assignments":[53473],"declarations":[{"constant":false,"id":53473,"mutability":"mutable","name":"value","nameLocation":"1145:5:61","nodeType":"VariableDeclaration","scope":53493,"src":"1137:13:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":53476,"initialValue":{"expression":{"id":53474,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53469,"src":"1153:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":53475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":53439,"src":"1153:14:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:61"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":53478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53473,"src":"1185:5:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":53479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:61","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:61","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":53481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:61","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":53477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:61","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":53482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:61","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":53483,"nodeType":"ExpressionStatement","src":"1177:49:61"},{"id":53492,"nodeType":"UncheckedBlock","src":"1236:61:61","statements":[{"expression":{"id":53490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":53484,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53469,"src":"1260:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":53486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":53439,"src":"1260:14:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":53487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53473,"src":"1277:5:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":53488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:61","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":53491,"nodeType":"ExpressionStatement","src":"1260:26:61"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:61","parameters":{"id":53470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53469,"mutability":"mutable","name":"counter","nameLocation":"1109:7:61","nodeType":"VariableDeclaration","scope":53494,"src":"1093:23:61","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":53468,"nodeType":"UserDefinedTypeName","pathNode":{"id":53467,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":53440,"src":"1093:7:61"},"referencedDeclaration":53440,"src":"1093:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:61"},"returnParameters":{"id":53471,"nodeType":"ParameterList","parameters":[],"src":"1127:0:61"},"scope":53508,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":53507,"nodeType":"FunctionDefinition","src":"1309:84:61","nodes":[],"body":{"id":53506,"nodeType":"Block","src":"1358:35:61","nodes":[],"statements":[{"expression":{"id":53504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":53500,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53497,"src":"1368:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":53502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":53439,"src":"1368:14:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":53503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:61","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":53505,"nodeType":"ExpressionStatement","src":"1368:18:61"}]},"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:61","parameters":{"id":53498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53497,"mutability":"mutable","name":"counter","nameLocation":"1340:7:61","nodeType":"VariableDeclaration","scope":53507,"src":"1324:23:61","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":53496,"nodeType":"UserDefinedTypeName","pathNode":{"id":53495,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":53440,"src":"1324:7:61"},"referencedDeclaration":53440,"src":"1324:7:61","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$53440_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:61"},"returnParameters":{"id":53499,"nodeType":"ParameterList","parameters":[],"src":"1358:0:61"},"scope":53508,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":53437,"nodeType":"StructuredDocumentation","src":"112:311:61","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"linearizedBaseContracts":[53508],"name":"Counters","nameLocation":"432:8:61","scope":53509,"usedErrors":[]}],"license":"MIT"},"id":61}