{"abi":[{"type":"function","name":"createdAt","inputs":[],"outputs":[{"name":"createdAt_","type":"uint64","internalType":"Timestamp"}],"stateMutability":"view"},{"type":"function","name":"extraData","inputs":[],"outputs":[{"name":"extraData_","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"gameCreator","inputs":[],"outputs":[{"name":"creator_","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"gameData","inputs":[],"outputs":[{"name":"gameType_","type":"uint32","internalType":"GameType"},{"name":"rootClaim_","type":"bytes32","internalType":"Claim"},{"name":"extraData_","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"gameType","inputs":[],"outputs":[{"name":"gameType_","type":"uint32","internalType":"GameType"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"l1Head","inputs":[],"outputs":[{"name":"l1Head_","type":"bytes32","internalType":"Hash"}],"stateMutability":"pure"},{"type":"function","name":"resolve","inputs":[],"outputs":[{"name":"status_","type":"uint8","internalType":"enum GameStatus"}],"stateMutability":"nonpayable"},{"type":"function","name":"resolvedAt","inputs":[],"outputs":[{"name":"resolvedAt_","type":"uint64","internalType":"Timestamp"}],"stateMutability":"view"},{"type":"function","name":"rootClaim","inputs":[],"outputs":[{"name":"rootClaim_","type":"bytes32","internalType":"Claim"}],"stateMutability":"pure"},{"type":"function","name":"status","inputs":[],"outputs":[{"name":"status_","type":"uint8","internalType":"enum GameStatus"}],"stateMutability":"view"},{"type":"event","name":"Resolved","inputs":[{"name":"status","type":"uint8","indexed":true,"internalType":"enum GameStatus"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createdAt()":"cf09e0d0","extraData()":"609d3334","gameCreator()":"37b1b229","gameData()":"fa24f743","gameType()":"bbdc02db","initialize()":"8129fc1c","l1Head()":"6361506d","resolve()":"2810e1d6","resolvedAt()":"19effeb4","rootClaim()":"bcef3b55","status()":"200d2ed2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum GameStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"Resolved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createdAt\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"createdAt_\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameData\",\"outputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType_\",\"type\":\"uint32\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameType\",\"outputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType_\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Head\",\"outputs\":[{\"internalType\":\"Hash\",\"name\":\"l1Head_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"enum GameStatus\",\"name\":\"status_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolvedAt\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"resolvedAt_\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootClaim\",\"outputs\":[{\"internalType\":\"Claim\",\"name\":\"rootClaim_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum GameStatus\",\"name\":\"status_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Resolved(uint8)\":{\"params\":{\"status\":\"The status of the game after resolution.\"}}},\"kind\":\"dev\",\"methods\":{\"createdAt()\":{\"returns\":{\"createdAt_\":\"The timestamp that the DisputeGame contract was created at.\"}},\"extraData()\":{\"details\":\"`clones-with-immutable-args` argument #4\",\"returns\":{\"extraData_\":\"Any extra data supplied to the dispute game contract by the creator.\"}},\"gameCreator()\":{\"details\":\"`clones-with-immutable-args` argument #1\",\"returns\":{\"creator_\":\"The creator of the dispute game.\"}},\"gameData()\":{\"returns\":{\"extraData_\":\"Any extra data supplied to the dispute game contract by the creator.\",\"gameType_\":\"The type of proof system being used.\",\"rootClaim_\":\"The root claim of the DisputeGame.\"}},\"gameType()\":{\"details\":\"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.\",\"returns\":{\"gameType_\":\"The type of proof system being used.\"}},\"initialize()\":{\"details\":\"This function may only be called once.\"},\"l1Head()\":{\"details\":\"`clones-with-immutable-args` argument #3\",\"returns\":{\"l1Head_\":\"The parent hash of the L1 block when the dispute game was created.\"}},\"resolve()\":{\"details\":\"May only be called if the `status` is `IN_PROGRESS`.\",\"returns\":{\"status_\":\"The status of the game after resolution.\"}},\"resolvedAt()\":{\"returns\":{\"resolvedAt_\":\"The timestamp that the DisputeGame contract was resolved at.\"}},\"rootClaim()\":{\"details\":\"`clones-with-immutable-args` argument #2\",\"returns\":{\"rootClaim_\":\"The root claim of the DisputeGame.\"}},\"status()\":{\"returns\":{\"status_\":\"The current status of the game.\"}}},\"title\":\"IDisputeGame\",\"version\":1},\"userdoc\":{\"events\":{\"Resolved(uint8)\":{\"notice\":\"Emitted when the game is resolved.\"}},\"kind\":\"user\",\"methods\":{\"createdAt()\":{\"notice\":\"Returns the timestamp that the DisputeGame contract was created at.\"},\"extraData()\":{\"notice\":\"Getter for the extra data.\"},\"gameCreator()\":{\"notice\":\"Getter for the creator of the dispute game.\"},\"gameData()\":{\"notice\":\"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation.\"},\"gameType()\":{\"notice\":\"Getter for the game type.\"},\"initialize()\":{\"notice\":\"Initializes the contract.\"},\"l1Head()\":{\"notice\":\"Getter for the parent hash of the L1 block when the dispute game was created.\"},\"resolve()\":{\"notice\":\"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties.\"},\"resolvedAt()\":{\"notice\":\"Returns the timestamp that the DisputeGame contract was resolved at.\"},\"rootClaim()\":{\"notice\":\"Getter for the root claim.\"},\"status()\":{\"notice\":\"Returns the current status of the game.\"}},\"notice\":\"The generic interface for a DisputeGame contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dispute/interfaces/IDisputeGame.sol\":\"IDisputeGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/dispute/interfaces/IDisputeGame.sol\":{\"keccak256\":\"0xa4d3617892dfee02890ea135e778ed0207aa8545c97cb2a421bae7c1a659baa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e31653e3463dbc3f3b572ca4a1198d9aadc7d8606a2b690a58e2c082a0d0090\",\"dweb:/ipfs/QmdbxJK4T5Hu652cSkxpAjYPxrK1i5ZM62oyopzmAzRn6M\"]},\"src/dispute/interfaces/IInitializable.sol\":{\"keccak256\":\"0xbc553af6501a972850a98fc6284943f8e95a5183a7b4f64198c16fca2338c9dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1f1c422ce4a9e72f0bbdec36434206da4af3a32d38f922acab957942e994ce5\",\"dweb:/ipfs/QmNQGWBceLxx1CKSMLfwTM584q8UCgUpF4rrFe8pdbWYtj\"]},\"src/dispute/lib/LibPosition.sol\":{\"keccak256\":\"0x7c5f19f8f54f06de2ce1c6cdcc5c7af65ac405130a4066cdaf146ca315818241\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06905e5ede94784e32748ad60557cb0b0829089d65430518e7042b80d2f64e2d\",\"dweb:/ipfs/QmeGKMmnFnow2VrRvTSPavCrToqQ3qDpEaR1tVoK6Hzg8K\"]},\"src/dispute/lib/LibUDT.sol\":{\"keccak256\":\"0x02eef648a47889c21c8261101c99a491e8497f9f7d088b66dffa4ded6afd7855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88001eed40a7dbbc5193d9671e1c05273dce1ab2a95bb866543421d2863ed04e\",\"dweb:/ipfs/QmSNU8mFUFxhVdLBToL8r3v7tpugyvPDbDU4vkc3Xd4omX\"]},\"src/dispute/lib/Types.sol\":{\"keccak256\":\"0x5d6a2b87e0358d54bc22a8fdcfcd17e347bcfa69b774d9c75694e3f843c2c2a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0ea07c78675e3fbfacdf92026ed77cd2b6596b358c09a7f29148b6aa80a6bd\",\"dweb:/ipfs/QmaNVv9NQg1Ea6AoHvv1oZCVX2ZAuwoW5vBMf7cVMvayqC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"enum GameStatus","name":"status","type":"uint8","indexed":true}],"type":"event","name":"Resolved","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"createdAt","outputs":[{"internalType":"Timestamp","name":"createdAt_","type":"uint64"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"extraData","outputs":[{"internalType":"bytes","name":"extraData_","type":"bytes"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"gameCreator","outputs":[{"internalType":"address","name":"creator_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameData","outputs":[{"internalType":"GameType","name":"gameType_","type":"uint32"},{"internalType":"Claim","name":"rootClaim_","type":"bytes32"},{"internalType":"bytes","name":"extraData_","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameType","outputs":[{"internalType":"GameType","name":"gameType_","type":"uint32"}]},{"inputs":[],"stateMutability":"payable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"pure","type":"function","name":"l1Head","outputs":[{"internalType":"Hash","name":"l1Head_","type":"bytes32"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resolve","outputs":[{"internalType":"enum GameStatus","name":"status_","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"resolvedAt","outputs":[{"internalType":"Timestamp","name":"resolvedAt_","type":"uint64"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"rootClaim","outputs":[{"internalType":"Claim","name":"rootClaim_","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"status","outputs":[{"internalType":"enum GameStatus","name":"status_","type":"uint8"}]}],"devdoc":{"kind":"dev","methods":{"createdAt()":{"returns":{"createdAt_":"The timestamp that the DisputeGame contract was created at."}},"extraData()":{"details":"`clones-with-immutable-args` argument #4","returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator."}},"gameCreator()":{"details":"`clones-with-immutable-args` argument #1","returns":{"creator_":"The creator of the dispute game."}},"gameData()":{"returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator.","gameType_":"The type of proof system being used.","rootClaim_":"The root claim of the DisputeGame."}},"gameType()":{"details":"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.","returns":{"gameType_":"The type of proof system being used."}},"initialize()":{"details":"This function may only be called once."},"l1Head()":{"details":"`clones-with-immutable-args` argument #3","returns":{"l1Head_":"The parent hash of the L1 block when the dispute game was created."}},"resolve()":{"details":"May only be called if the `status` is `IN_PROGRESS`.","returns":{"status_":"The status of the game after resolution."}},"resolvedAt()":{"returns":{"resolvedAt_":"The timestamp that the DisputeGame contract was resolved at."}},"rootClaim()":{"details":"`clones-with-immutable-args` argument #2","returns":{"rootClaim_":"The root claim of the DisputeGame."}},"status()":{"returns":{"status_":"The current status of the game."}}},"version":1},"userdoc":{"kind":"user","methods":{"createdAt()":{"notice":"Returns the timestamp that the DisputeGame contract was created at."},"extraData()":{"notice":"Getter for the extra data."},"gameCreator()":{"notice":"Getter for the creator of the dispute game."},"gameData()":{"notice":"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation."},"gameType()":{"notice":"Getter for the game type."},"initialize()":{"notice":"Initializes the contract."},"l1Head()":{"notice":"Getter for the parent hash of the L1 block when the dispute game was created."},"resolve()":{"notice":"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties."},"resolvedAt()":{"notice":"Returns the timestamp that the DisputeGame contract was resolved at."},"rootClaim()":{"notice":"Getter for the root claim."},"status()":{"notice":"Returns the current status of the game."}},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/dispute/interfaces/IDisputeGame.sol":"IDisputeGame"},"evmVersion":"london","libraries":{}},"sources":{"src/dispute/interfaces/IDisputeGame.sol":{"keccak256":"0xa4d3617892dfee02890ea135e778ed0207aa8545c97cb2a421bae7c1a659baa0","urls":["bzz-raw://0e31653e3463dbc3f3b572ca4a1198d9aadc7d8606a2b690a58e2c082a0d0090","dweb:/ipfs/QmdbxJK4T5Hu652cSkxpAjYPxrK1i5ZM62oyopzmAzRn6M"],"license":"MIT"},"src/dispute/interfaces/IInitializable.sol":{"keccak256":"0xbc553af6501a972850a98fc6284943f8e95a5183a7b4f64198c16fca2338c9dc","urls":["bzz-raw://b1f1c422ce4a9e72f0bbdec36434206da4af3a32d38f922acab957942e994ce5","dweb:/ipfs/QmNQGWBceLxx1CKSMLfwTM584q8UCgUpF4rrFe8pdbWYtj"],"license":"MIT"},"src/dispute/lib/LibPosition.sol":{"keccak256":"0x7c5f19f8f54f06de2ce1c6cdcc5c7af65ac405130a4066cdaf146ca315818241","urls":["bzz-raw://06905e5ede94784e32748ad60557cb0b0829089d65430518e7042b80d2f64e2d","dweb:/ipfs/QmeGKMmnFnow2VrRvTSPavCrToqQ3qDpEaR1tVoK6Hzg8K"],"license":"MIT"},"src/dispute/lib/LibUDT.sol":{"keccak256":"0x02eef648a47889c21c8261101c99a491e8497f9f7d088b66dffa4ded6afd7855","urls":["bzz-raw://88001eed40a7dbbc5193d9671e1c05273dce1ab2a95bb866543421d2863ed04e","dweb:/ipfs/QmSNU8mFUFxhVdLBToL8r3v7tpugyvPDbDU4vkc3Xd4omX"],"license":"MIT"},"src/dispute/lib/Types.sol":{"keccak256":"0x5d6a2b87e0358d54bc22a8fdcfcd17e347bcfa69b774d9c75694e3f843c2c2a8","urls":["bzz-raw://df0ea07c78675e3fbfacdf92026ed77cd2b6596b358c09a7f29148b6aa80a6bd","dweb:/ipfs/QmaNVv9NQg1Ea6AoHvv1oZCVX2ZAuwoW5vBMf7cVMvayqC"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","methods":{"createdAt()":{"notice":"Returns the timestamp that the DisputeGame contract was created at."},"extraData()":{"notice":"Getter for the extra data."},"gameCreator()":{"notice":"Getter for the creator of the dispute game."},"gameData()":{"notice":"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation."},"gameType()":{"notice":"Getter for the game type."},"initialize()":{"notice":"Initializes the contract."},"l1Head()":{"notice":"Getter for the parent hash of the L1 block when the dispute game was created."},"resolve()":{"notice":"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties."},"resolvedAt()":{"notice":"Returns the timestamp that the DisputeGame contract was resolved at."},"rootClaim()":{"notice":"Getter for the root claim."},"status()":{"notice":"Returns the current status of the game."}},"events":{"Resolved(uint8)":{"notice":"Emitted when the game is resolved."}},"notice":"The generic interface for a DisputeGame contract."},"devdoc":{"version":1,"kind":"dev","methods":{"createdAt()":{"returns":{"createdAt_":"The timestamp that the DisputeGame contract was created at."}},"extraData()":{"details":"`clones-with-immutable-args` argument #4","returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator."}},"gameCreator()":{"details":"`clones-with-immutable-args` argument #1","returns":{"creator_":"The creator of the dispute game."}},"gameData()":{"returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator.","gameType_":"The type of proof system being used.","rootClaim_":"The root claim of the DisputeGame."}},"gameType()":{"details":"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.","returns":{"gameType_":"The type of proof system being used."}},"initialize()":{"details":"This function may only be called once."},"l1Head()":{"details":"`clones-with-immutable-args` argument #3","returns":{"l1Head_":"The parent hash of the L1 block when the dispute game was created."}},"resolve()":{"details":"May only be called if the `status` is `IN_PROGRESS`.","returns":{"status_":"The status of the game after resolution."}},"resolvedAt()":{"returns":{"resolvedAt_":"The timestamp that the DisputeGame contract was resolved at."}},"rootClaim()":{"details":"`clones-with-immutable-args` argument #2","returns":{"rootClaim_":"The root claim of the DisputeGame."}},"status()":{"returns":{"status_":"The current status of the game."}}},"events":{"Resolved(uint8)":{"params":{"status":"The status of the game after resolution."}}},"title":"IDisputeGame"},"ast":{"absolutePath":"src/dispute/interfaces/IDisputeGame.sol","id":103318,"exportedSymbols":{"Claim":[104213],"Clock":[104121],"Duration":[104245],"GameId":[104175],"GameStatus":[104325],"GameType":[104305],"GameTypes":[104365],"Hash":[104260],"IDisputeGame":[103317],"IInitializable":[103632],"LibClaim":[104243],"LibClock":[104173],"LibDuration":[104258],"LibGameId":[104211],"LibGameType":[104318],"LibHash":[104273],"LibPosition":[104084],"LibTimestamp":[104288],"LibVMStatus":[104303],"LocalPreimageKey":[104421],"OutputRoot":[104331],"Position":[103871],"Timestamp":[104275],"VMStatus":[104290],"VMStatuses":[104399]},"nodeType":"SourceUnit","src":"32:3650:177","nodes":[{"id":103231,"nodeType":"PragmaDirective","src":"32:23:177","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":103233,"nodeType":"ImportDirective","src":"57:75:177","nodes":[],"absolutePath":"src/dispute/interfaces/IInitializable.sol","file":"src/dispute/interfaces/IInitializable.sol","nameLocation":"-1:-1:-1","scope":103318,"sourceUnit":103633,"symbolAliases":[{"foreign":{"id":103232,"name":"IInitializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103632,"src":"66:14:177","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":103234,"nodeType":"ImportDirective","src":"134:35:177","nodes":[],"absolutePath":"src/dispute/lib/Types.sol","file":"src/dispute/lib/Types.sol","nameLocation":"-1:-1:-1","scope":103318,"sourceUnit":104422,"symbolAliases":[],"unitAlias":""},{"id":103317,"nodeType":"ContractDefinition","src":"257:3424:177","nodes":[{"id":103243,"nodeType":"EventDefinition","src":"418:42:177","nodes":[],"anonymous":false,"documentation":{"id":103238,"nodeType":"StructuredDocumentation","src":"304:109:177","text":"@notice Emitted when the game is resolved.\n @param status The status of the game after resolution."},"eventSelector":"5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da60","name":"Resolved","nameLocation":"424:8:177","parameters":{"id":103242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103241,"indexed":true,"mutability":"mutable","name":"status","nameLocation":"452:6:177","nodeType":"VariableDeclaration","scope":103243,"src":"433:25:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$104325","typeString":"enum GameStatus"},"typeName":{"id":103240,"nodeType":"UserDefinedTypeName","pathNode":{"id":103239,"name":"GameStatus","nodeType":"IdentifierPath","referencedDeclaration":104325,"src":"433:10:177"},"referencedDeclaration":104325,"src":"433:10:177","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$104325","typeString":"enum GameStatus"}},"visibility":"internal"}],"src":"432:27:177"}},{"id":103250,"nodeType":"FunctionDefinition","src":"637:66:177","nodes":[],"documentation":{"id":103244,"nodeType":"StructuredDocumentation","src":"466:166:177","text":"@notice Returns the timestamp that the DisputeGame contract was created at.\n @return createdAt_ The timestamp that the DisputeGame contract was created at."},"functionSelector":"cf09e0d0","implemented":false,"kind":"function","modifiers":[],"name":"createdAt","nameLocation":"646:9:177","parameters":{"id":103245,"nodeType":"ParameterList","parameters":[],"src":"655:2:177"},"returnParameters":{"id":103249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103248,"mutability":"mutable","name":"createdAt_","nameLocation":"691:10:177","nodeType":"VariableDeclaration","scope":103250,"src":"681:20:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timestamp_$104275","typeString":"Timestamp"},"typeName":{"id":103247,"nodeType":"UserDefinedTypeName","pathNode":{"id":103246,"name":"Timestamp","nodeType":"IdentifierPath","referencedDeclaration":104275,"src":"681:9:177"},"referencedDeclaration":104275,"src":"681:9:177","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timestamp_$104275","typeString":"Timestamp"}},"visibility":"internal"}],"src":"680:22:177"},"scope":103317,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103257,"nodeType":"FunctionDefinition","src":"883:68:177","nodes":[],"documentation":{"id":103251,"nodeType":"StructuredDocumentation","src":"709:169:177","text":"@notice Returns the timestamp that the DisputeGame contract was resolved at.\n @return resolvedAt_ The timestamp that the DisputeGame contract was resolved at."},"functionSelector":"19effeb4","implemented":false,"kind":"function","modifiers":[],"name":"resolvedAt","nameLocation":"892:10:177","parameters":{"id":103252,"nodeType":"ParameterList","parameters":[],"src":"902:2:177"},"returnParameters":{"id":103256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103255,"mutability":"mutable","name":"resolvedAt_","nameLocation":"938:11:177","nodeType":"VariableDeclaration","scope":103257,"src":"928:21:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timestamp_$104275","typeString":"Timestamp"},"typeName":{"id":103254,"nodeType":"UserDefinedTypeName","pathNode":{"id":103253,"name":"Timestamp","nodeType":"IdentifierPath","referencedDeclaration":104275,"src":"928:9:177"},"referencedDeclaration":104275,"src":"928:9:177","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timestamp_$104275","typeString":"Timestamp"}},"visibility":"internal"}],"src":"927:23:177"},"scope":103317,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103264,"nodeType":"FunctionDefinition","src":"1069:61:177","nodes":[],"documentation":{"id":103258,"nodeType":"StructuredDocumentation","src":"957:107:177","text":"@notice Returns the current status of the game.\n @return status_ The current status of the game."},"functionSelector":"200d2ed2","implemented":false,"kind":"function","modifiers":[],"name":"status","nameLocation":"1078:6:177","parameters":{"id":103259,"nodeType":"ParameterList","parameters":[],"src":"1084:2:177"},"returnParameters":{"id":103263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103262,"mutability":"mutable","name":"status_","nameLocation":"1121:7:177","nodeType":"VariableDeclaration","scope":103264,"src":"1110:18:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$104325","typeString":"enum GameStatus"},"typeName":{"id":103261,"nodeType":"UserDefinedTypeName","pathNode":{"id":103260,"name":"GameStatus","nodeType":"IdentifierPath","referencedDeclaration":104325,"src":"1110:10:177"},"referencedDeclaration":104325,"src":"1110:10:177","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$104325","typeString":"enum GameStatus"}},"visibility":"internal"}],"src":"1109:20:177"},"scope":103317,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103271,"nodeType":"FunctionDefinition","src":"1410:63:177","nodes":[],"documentation":{"id":103265,"nodeType":"StructuredDocumentation","src":"1136:269:177","text":"@notice Getter for the game type.\n @dev The reference impl should be entirely different depending on the type (fault, validity)\n      i.e. The game type should indicate the security model.\n @return gameType_ The type of proof system being used."},"functionSelector":"bbdc02db","implemented":false,"kind":"function","modifiers":[],"name":"gameType","nameLocation":"1419:8:177","parameters":{"id":103266,"nodeType":"ParameterList","parameters":[],"src":"1427:2:177"},"returnParameters":{"id":103270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103269,"mutability":"mutable","name":"gameType_","nameLocation":"1462:9:177","nodeType":"VariableDeclaration","scope":103271,"src":"1453:18:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$104305","typeString":"GameType"},"typeName":{"id":103268,"nodeType":"UserDefinedTypeName","pathNode":{"id":103267,"name":"GameType","nodeType":"IdentifierPath","referencedDeclaration":104305,"src":"1453:8:177"},"referencedDeclaration":104305,"src":"1453:8:177","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$104305","typeString":"GameType"}},"visibility":"internal"}],"src":"1452:20:177"},"scope":103317,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103277,"nodeType":"FunctionDefinition","src":"1651:64:177","nodes":[],"documentation":{"id":103272,"nodeType":"StructuredDocumentation","src":"1479:167:177","text":"@notice Getter for the creator of the dispute game.\n @dev `clones-with-immutable-args` argument #1\n @return creator_ The creator of the dispute game."},"functionSelector":"37b1b229","implemented":false,"kind":"function","modifiers":[],"name":"gameCreator","nameLocation":"1660:11:177","parameters":{"id":103273,"nodeType":"ParameterList","parameters":[],"src":"1671:2:177"},"returnParameters":{"id":103276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103275,"mutability":"mutable","name":"creator_","nameLocation":"1705:8:177","nodeType":"VariableDeclaration","scope":103277,"src":"1697:16:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103274,"name":"address","nodeType":"ElementaryTypeName","src":"1697:7:177","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1696:18:177"},"scope":103317,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103284,"nodeType":"FunctionDefinition","src":"1880:62:177","nodes":[],"documentation":{"id":103278,"nodeType":"StructuredDocumentation","src":"1721:154:177","text":"@notice Getter for the root claim.\n @dev `clones-with-immutable-args` argument #2\n @return rootClaim_ The root claim of the DisputeGame."},"functionSelector":"bcef3b55","implemented":false,"kind":"function","modifiers":[],"name":"rootClaim","nameLocation":"1889:9:177","parameters":{"id":103279,"nodeType":"ParameterList","parameters":[],"src":"1898:2:177"},"returnParameters":{"id":103283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103282,"mutability":"mutable","name":"rootClaim_","nameLocation":"1930:10:177","nodeType":"VariableDeclaration","scope":103284,"src":"1924:16:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"},"typeName":{"id":103281,"nodeType":"UserDefinedTypeName","pathNode":{"id":103280,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":104213,"src":"1924:5:177"},"referencedDeclaration":104213,"src":"1924:5:177","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"}},"visibility":"internal"}],"src":"1923:18:177"},"scope":103317,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103291,"nodeType":"FunctionDefinition","src":"2187:55:177","nodes":[],"documentation":{"id":103285,"nodeType":"StructuredDocumentation","src":"1948:234:177","text":"@notice Getter for the parent hash of the L1 block when the dispute game was created.\n @dev `clones-with-immutable-args` argument #3\n @return l1Head_ The parent hash of the L1 block when the dispute game was created."},"functionSelector":"6361506d","implemented":false,"kind":"function","modifiers":[],"name":"l1Head","nameLocation":"2196:6:177","parameters":{"id":103286,"nodeType":"ParameterList","parameters":[],"src":"2202:2:177"},"returnParameters":{"id":103290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103289,"mutability":"mutable","name":"l1Head_","nameLocation":"2233:7:177","nodeType":"VariableDeclaration","scope":103291,"src":"2228:12:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Hash_$104260","typeString":"Hash"},"typeName":{"id":103288,"nodeType":"UserDefinedTypeName","pathNode":{"id":103287,"name":"Hash","nodeType":"IdentifierPath","referencedDeclaration":104260,"src":"2228:4:177"},"referencedDeclaration":104260,"src":"2228:4:177","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Hash_$104260","typeString":"Hash"}},"visibility":"internal"}],"src":"2227:14:177"},"scope":103317,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103297,"nodeType":"FunctionDefinition","src":"2441:69:177","nodes":[],"documentation":{"id":103292,"nodeType":"StructuredDocumentation","src":"2248:188:177","text":"@notice Getter for the extra data.\n @dev `clones-with-immutable-args` argument #4\n @return extraData_ Any extra data supplied to the dispute game contract by the creator."},"functionSelector":"609d3334","implemented":false,"kind":"function","modifiers":[],"name":"extraData","nameLocation":"2450:9:177","parameters":{"id":103293,"nodeType":"ParameterList","parameters":[],"src":"2459:2:177"},"returnParameters":{"id":103296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103295,"mutability":"mutable","name":"extraData_","nameLocation":"2498:10:177","nodeType":"VariableDeclaration","scope":103297,"src":"2485:23:177","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103294,"name":"bytes","nodeType":"ElementaryTypeName","src":"2485:5:177","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2484:25:177"},"scope":103317,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103304,"nodeType":"FunctionDefinition","src":"2971:57:177","nodes":[],"documentation":{"id":103298,"nodeType":"StructuredDocumentation","src":"2516:450:177","text":"@notice If all necessary information has been gathered, this function should mark the game\n         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of\n         the resolved game. It is at this stage that the bonds should be awarded to the\n         necessary parties.\n @dev May only be called if the `status` is `IN_PROGRESS`.\n @return status_ The status of the game after resolution."},"functionSelector":"2810e1d6","implemented":false,"kind":"function","modifiers":[],"name":"resolve","nameLocation":"2980:7:177","parameters":{"id":103299,"nodeType":"ParameterList","parameters":[],"src":"2987:2:177"},"returnParameters":{"id":103303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103302,"mutability":"mutable","name":"status_","nameLocation":"3019:7:177","nodeType":"VariableDeclaration","scope":103304,"src":"3008:18:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$104325","typeString":"enum GameStatus"},"typeName":{"id":103301,"nodeType":"UserDefinedTypeName","pathNode":{"id":103300,"name":"GameStatus","nodeType":"IdentifierPath","referencedDeclaration":104325,"src":"3008:10:177"},"referencedDeclaration":104325,"src":"3008:10:177","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$104325","typeString":"enum GameStatus"}},"visibility":"internal"}],"src":"3007:20:177"},"scope":103317,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103316,"nodeType":"FunctionDefinition","src":"3573:106:177","nodes":[],"documentation":{"id":103305,"nodeType":"StructuredDocumentation","src":"3034:534:177","text":"@notice A compliant implementation of this interface should return the components of the\n         game UUID's preimage provided in the cwia payload. The preimage of the UUID is\n         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes\n         concatenation.\n @return gameType_ The type of proof system being used.\n @return rootClaim_ The root claim of the DisputeGame.\n @return extraData_ Any extra data supplied to the dispute game contract by the creator."},"functionSelector":"fa24f743","implemented":false,"kind":"function","modifiers":[],"name":"gameData","nameLocation":"3582:8:177","parameters":{"id":103306,"nodeType":"ParameterList","parameters":[],"src":"3590:2:177"},"returnParameters":{"id":103315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103309,"mutability":"mutable","name":"gameType_","nameLocation":"3625:9:177","nodeType":"VariableDeclaration","scope":103316,"src":"3616:18:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$104305","typeString":"GameType"},"typeName":{"id":103308,"nodeType":"UserDefinedTypeName","pathNode":{"id":103307,"name":"GameType","nodeType":"IdentifierPath","referencedDeclaration":104305,"src":"3616:8:177"},"referencedDeclaration":104305,"src":"3616:8:177","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$104305","typeString":"GameType"}},"visibility":"internal"},{"constant":false,"id":103312,"mutability":"mutable","name":"rootClaim_","nameLocation":"3642:10:177","nodeType":"VariableDeclaration","scope":103316,"src":"3636:16:177","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"},"typeName":{"id":103311,"nodeType":"UserDefinedTypeName","pathNode":{"id":103310,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":104213,"src":"3636:5:177"},"referencedDeclaration":104213,"src":"3636:5:177","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"}},"visibility":"internal"},{"constant":false,"id":103314,"mutability":"mutable","name":"extraData_","nameLocation":"3667:10:177","nodeType":"VariableDeclaration","scope":103316,"src":"3654:23:177","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103313,"name":"bytes","nodeType":"ElementaryTypeName","src":"3654:5:177","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3615:63:177"},"scope":103317,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":103236,"name":"IInitializable","nodeType":"IdentifierPath","referencedDeclaration":103632,"src":"283:14:177"},"id":103237,"nodeType":"InheritanceSpecifier","src":"283:14:177"}],"canonicalName":"IDisputeGame","contractDependencies":[],"contractKind":"interface","documentation":{"id":103235,"nodeType":"StructuredDocumentation","src":"171:86:177","text":"@title IDisputeGame\n @notice The generic interface for a DisputeGame contract."},"fullyImplemented":false,"linearizedBaseContracts":[103317,103632],"name":"IDisputeGame","nameLocation":"267:12:177","scope":103318,"usedErrors":[]}],"license":"MIT"},"id":177}