{"abi":[{"type":"function","name":"check","inputs":[{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"execute_","type":"bool","internalType":"bool"}],"stateMutability":"pure"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50610163806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004461003e366004610087565b50600190565b604051901515815260200160405180910390f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561009957600080fd5b813567ffffffffffffffff808211156100b157600080fd5b818401915084601f8301126100c557600080fd5b8135818111156100d7576100d7610058565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561011d5761011d610058565b8160405282815287602084870101111561013657600080fd5b82602086016020830137600092810160200192909252509594505050505056fea164736f6c634300080f000a","sourceMap":"175:171:226:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004461003e366004610087565b50600190565b604051901515815260200160405180910390f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561009957600080fd5b813567ffffffffffffffff808211156100b157600080fd5b818401915084601f8301126100c557600080fd5b8135818111156100d7576100d7610058565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561011d5761011d610058565b8160405282815287602084870101111561013657600080fd5b82602086016020830137600092810160200192909252509594505050505056fea164736f6c634300080f000a","sourceMap":"175:171:226:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:99;;;;;;:::i;:::-;-1:-1:-1;333:4:226;;245:99;;;;1353:14:383;;1346:22;1328:41;;1316:2;1301:18;245:99:226;;;;;;;14:184:383;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:980;271:6;324:2;312:9;303:7;299:23;295:32;292:52;;;340:1;337;330:12;292:52;380:9;367:23;409:18;450:2;442:6;439:14;436:34;;;466:1;463;456:12;436:34;504:6;493:9;489:22;479:32;;549:7;542:4;538:2;534:13;530:27;520:55;;571:1;568;561:12;520:55;607:2;594:16;629:2;625;622:10;619:36;;;635:18;;:::i;:::-;769:2;763:9;831:4;823:13;;674:66;819:22;;;843:2;815:31;811:40;799:53;;;867:18;;;887:22;;;864:46;861:72;;;913:18;;:::i;:::-;953:10;949:2;942:22;988:2;980:6;973:18;1028:7;1023:2;1018;1014;1010:11;1006:20;1003:33;1000:53;;;1049:1;1046;1039:12;1000:53;1105:2;1100;1096;1092:11;1087:2;1079:6;1075:15;1062:46;1150:1;1128:15;;;1145:2;1124:24;1117:35;;;;-1:-1:-1;1132:6:383;203:980;-1:-1:-1;;;;;203:980:383:o","linkReferences":{}},"methodIdentifiers":{"check(bytes)":"c64b3bb5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"execute_\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"check(bytes)\":{\"params\":{\"_params\":\"Encoded parameters for the drip check.\"},\"returns\":{\"execute_\":\"Whether the drip should be executed.\"}}},\"title\":\"CheckTrue\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"check(bytes)\":{\"notice\":\"Checks whether a drip should be executable.\"}},\"notice\":\"DripCheck that always returns true.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/drippie/dripchecks/CheckTrue.sol\":\"CheckTrue\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/periphery/drippie/IDripCheck.sol\":{\"keccak256\":\"0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6\",\"dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN\"]},\"src/periphery/drippie/dripchecks/CheckTrue.sol\":{\"keccak256\":\"0x668e81020f14efb12acf0874d2910c2904b06ba548bc817ad52f6bfff1bab677\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea27dd4db41b4b0ae510b387792cbe24f903a851e75249c73c0b5ae8419b3cbb\",\"dweb:/ipfs/QmaXWgxP3Pd4m5jPzAAHQChUUBiN8LTC6HdSSkxChkCifA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"check","outputs":[{"internalType":"bool","name":"execute_","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"check(bytes)":{"params":{"_params":"Encoded parameters for the drip check."},"returns":{"execute_":"Whether the drip should be executed."}}},"version":1},"userdoc":{"kind":"user","methods":{"check(bytes)":{"notice":"Checks whether a drip should be executable."}},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/periphery/drippie/dripchecks/CheckTrue.sol":"CheckTrue"},"evmVersion":"london","libraries":{}},"sources":{"src/periphery/drippie/IDripCheck.sol":{"keccak256":"0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628","urls":["bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6","dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN"],"license":"MIT"},"src/periphery/drippie/dripchecks/CheckTrue.sol":{"keccak256":"0x668e81020f14efb12acf0874d2910c2904b06ba548bc817ad52f6bfff1bab677","urls":["bzz-raw://ea27dd4db41b4b0ae510b387792cbe24f903a851e75249c73c0b5ae8419b3cbb","dweb:/ipfs/QmaXWgxP3Pd4m5jPzAAHQChUUBiN8LTC6HdSSkxChkCifA"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","methods":{"check(bytes)":{"notice":"Checks whether a drip should be executable."}},"notice":"DripCheck that always returns true."},"devdoc":{"version":1,"kind":"dev","methods":{"check(bytes)":{"params":{"_params":"Encoded parameters for the drip check."},"returns":{"execute_":"Whether the drip should be executed."}}},"title":"CheckTrue"},"ast":{"absolutePath":"src/periphery/drippie/dripchecks/CheckTrue.sol","id":111305,"exportedSymbols":{"CheckTrue":[111304],"IDripCheck":[111057]},"nodeType":"SourceUnit","src":"32:315:226","nodes":[{"id":111285,"nodeType":"PragmaDirective","src":"32:23:226","nodes":[],"literals":["solidity","0.8",".15"]},{"id":111287,"nodeType":"ImportDirective","src":"57:47:226","nodes":[],"absolutePath":"src/periphery/drippie/IDripCheck.sol","file":"../IDripCheck.sol","nameLocation":"-1:-1:-1","scope":111305,"sourceUnit":111058,"symbolAliases":[{"foreign":{"id":111286,"name":"IDripCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111057,"src":"66:10:226","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":111304,"nodeType":"ContractDefinition","src":"175:171:226","nodes":[{"id":111303,"nodeType":"FunctionDefinition","src":"245:99:226","nodes":[],"body":{"id":111302,"nodeType":"Block","src":"312:32:226","nodes":[],"statements":[{"expression":{"id":111300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":111298,"name":"execute_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111296,"src":"322:8:226","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":111299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"333:4:226","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"322:15:226","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":111301,"nodeType":"ExpressionStatement","src":"322:15:226"}]},"baseFunctions":[111056],"documentation":{"id":111291,"nodeType":"StructuredDocumentation","src":"214:26:226","text":"@inheritdoc IDripCheck"},"functionSelector":"c64b3bb5","implemented":true,"kind":"function","modifiers":[],"name":"check","nameLocation":"254:5:226","parameters":{"id":111294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":111303,"src":"260:12:226","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":111292,"name":"bytes","nodeType":"ElementaryTypeName","src":"260:5:226","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"259:14:226"},"returnParameters":{"id":111297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111296,"mutability":"mutable","name":"execute_","nameLocation":"302:8:226","nodeType":"VariableDeclaration","scope":111303,"src":"297:13:226","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111295,"name":"bool","nodeType":"ElementaryTypeName","src":"297:4:226","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"296:15:226"},"scope":111304,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":111289,"name":"IDripCheck","nodeType":"IdentifierPath","referencedDeclaration":111057,"src":"197:10:226"},"id":111290,"nodeType":"InheritanceSpecifier","src":"197:10:226"}],"canonicalName":"CheckTrue","contractDependencies":[],"contractKind":"contract","documentation":{"id":111288,"nodeType":"StructuredDocumentation","src":"106:69:226","text":"@title CheckTrue\n @notice DripCheck that always returns true."},"fullyImplemented":true,"linearizedBaseContracts":[111304,111057],"name":"CheckTrue","nameLocation":"184:9:226","scope":111305,"usedErrors":[]}],"license":"MIT"},"id":226}