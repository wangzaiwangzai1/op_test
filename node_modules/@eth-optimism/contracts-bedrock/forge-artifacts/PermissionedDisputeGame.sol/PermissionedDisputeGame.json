{"abi":[{"type":"constructor","inputs":[{"name":"_gameType","type":"uint32","internalType":"GameType"},{"name":"_absolutePrestate","type":"bytes32","internalType":"Claim"},{"name":"_maxGameDepth","type":"uint256","internalType":"uint256"},{"name":"_splitDepth","type":"uint256","internalType":"uint256"},{"name":"_clockExtension","type":"uint64","internalType":"Duration"},{"name":"_maxClockDuration","type":"uint64","internalType":"Duration"},{"name":"_vm","type":"address","internalType":"contract IBigStepper"},{"name":"_weth","type":"address","internalType":"contract IDelayedWETH"},{"name":"_anchorStateRegistry","type":"address","internalType":"contract IAnchorStateRegistry"},{"name":"_l2ChainId","type":"uint256","internalType":"uint256"},{"name":"_proposer","type":"address","internalType":"address"},{"name":"_challenger","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"absolutePrestate","inputs":[],"outputs":[{"name":"absolutePrestate_","type":"bytes32","internalType":"Claim"}],"stateMutability":"view"},{"type":"function","name":"addLocalData","inputs":[{"name":"_ident","type":"uint256","internalType":"uint256"},{"name":"_execLeafIdx","type":"uint256","internalType":"uint256"},{"name":"_partOffset","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"anchorStateRegistry","inputs":[],"outputs":[{"name":"registry_","type":"address","internalType":"contract IAnchorStateRegistry"}],"stateMutability":"view"},{"type":"function","name":"attack","inputs":[{"name":"_disputed","type":"bytes32","internalType":"Claim"},{"name":"_parentIndex","type":"uint256","internalType":"uint256"},{"name":"_claim","type":"bytes32","internalType":"Claim"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"challengeRootL2Block","inputs":[{"name":"_outputRootProof","type":"tuple","internalType":"struct Types.OutputRootProof","components":[{"name":"version","type":"bytes32","internalType":"bytes32"},{"name":"stateRoot","type":"bytes32","internalType":"bytes32"},{"name":"messagePasserStorageRoot","type":"bytes32","internalType":"bytes32"},{"name":"latestBlockhash","type":"bytes32","internalType":"bytes32"}]},{"name":"_headerRLP","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"challenger","inputs":[],"outputs":[{"name":"challenger_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"claimCredit","inputs":[{"name":"_recipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimData","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"parentIndex","type":"uint32","internalType":"uint32"},{"name":"counteredBy","type":"address","internalType":"address"},{"name":"claimant","type":"address","internalType":"address"},{"name":"bond","type":"uint128","internalType":"uint128"},{"name":"claim","type":"bytes32","internalType":"Claim"},{"name":"position","type":"uint128","internalType":"Position"},{"name":"clock","type":"uint128","internalType":"Clock"}],"stateMutability":"view"},{"type":"function","name":"claimDataLen","inputs":[],"outputs":[{"name":"len_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claims","inputs":[{"name":"","type":"bytes32","internalType":"Hash"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"clockExtension","inputs":[],"outputs":[{"name":"clockExtension_","type":"uint64","internalType":"Duration"}],"stateMutability":"view"},{"type":"function","name":"createdAt","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"Timestamp"}],"stateMutability":"view"},{"type":"function","name":"credit","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"defend","inputs":[{"name":"_disputed","type":"bytes32","internalType":"Claim"},{"name":"_parentIndex","type":"uint256","internalType":"uint256"},{"name":"_claim","type":"bytes32","internalType":"Claim"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"extraData","inputs":[],"outputs":[{"name":"extraData_","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"gameCreator","inputs":[],"outputs":[{"name":"creator_","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"gameData","inputs":[],"outputs":[{"name":"gameType_","type":"uint32","internalType":"GameType"},{"name":"rootClaim_","type":"bytes32","internalType":"Claim"},{"name":"extraData_","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"gameType","inputs":[],"outputs":[{"name":"gameType_","type":"uint32","internalType":"GameType"}],"stateMutability":"view"},{"type":"function","name":"getChallengerDuration","inputs":[{"name":"_claimIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"duration_","type":"uint64","internalType":"Duration"}],"stateMutability":"view"},{"type":"function","name":"getNumToResolve","inputs":[{"name":"_claimIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"numRemainingChildren_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRequiredBond","inputs":[{"name":"_position","type":"uint128","internalType":"Position"}],"outputs":[{"name":"requiredBond_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"l1Head","inputs":[],"outputs":[{"name":"l1Head_","type":"bytes32","internalType":"Hash"}],"stateMutability":"pure"},{"type":"function","name":"l2BlockNumber","inputs":[],"outputs":[{"name":"l2BlockNumber_","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"l2BlockNumberChallenged","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"l2BlockNumberChallenger","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"l2ChainId","inputs":[],"outputs":[{"name":"l2ChainId_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxClockDuration","inputs":[],"outputs":[{"name":"maxClockDuration_","type":"uint64","internalType":"Duration"}],"stateMutability":"view"},{"type":"function","name":"maxGameDepth","inputs":[],"outputs":[{"name":"maxGameDepth_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"move","inputs":[{"name":"_disputed","type":"bytes32","internalType":"Claim"},{"name":"_challengeIndex","type":"uint256","internalType":"uint256"},{"name":"_claim","type":"bytes32","internalType":"Claim"},{"name":"_isAttack","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"proposer","inputs":[],"outputs":[{"name":"proposer_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"resolutionCheckpoints","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"initialCheckpointComplete","type":"bool","internalType":"bool"},{"name":"subgameIndex","type":"uint32","internalType":"uint32"},{"name":"leftmostPosition","type":"uint128","internalType":"Position"},{"name":"counteredBy","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"resolve","inputs":[],"outputs":[{"name":"status_","type":"uint8","internalType":"enum GameStatus"}],"stateMutability":"nonpayable"},{"type":"function","name":"resolveClaim","inputs":[{"name":"_claimIndex","type":"uint256","internalType":"uint256"},{"name":"_numToResolve","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resolvedAt","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"Timestamp"}],"stateMutability":"view"},{"type":"function","name":"resolvedSubgames","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"rootClaim","inputs":[],"outputs":[{"name":"rootClaim_","type":"bytes32","internalType":"Claim"}],"stateMutability":"pure"},{"type":"function","name":"splitDepth","inputs":[],"outputs":[{"name":"splitDepth_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"startingBlockNumber","inputs":[],"outputs":[{"name":"startingBlockNumber_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"startingOutputRoot","inputs":[],"outputs":[{"name":"root","type":"bytes32","internalType":"Hash"},{"name":"l2BlockNumber","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"startingRootHash","inputs":[],"outputs":[{"name":"startingRootHash_","type":"bytes32","internalType":"Hash"}],"stateMutability":"view"},{"type":"function","name":"status","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"enum GameStatus"}],"stateMutability":"view"},{"type":"function","name":"step","inputs":[{"name":"_claimIndex","type":"uint256","internalType":"uint256"},{"name":"_isAttack","type":"bool","internalType":"bool"},{"name":"_stateData","type":"bytes","internalType":"bytes"},{"name":"_proof","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"subgames","inputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"vm","inputs":[],"outputs":[{"name":"vm_","type":"address","internalType":"contract IBigStepper"}],"stateMutability":"view"},{"type":"function","name":"weth","inputs":[],"outputs":[{"name":"weth_","type":"address","internalType":"contract IDelayedWETH"}],"stateMutability":"view"},{"type":"event","name":"Move","inputs":[{"name":"parentIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"claim","type":"bytes32","indexed":true,"internalType":"Claim"},{"name":"claimant","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Resolved","inputs":[{"name":"status","type":"uint8","indexed":true,"internalType":"enum GameStatus"}],"anonymous":false},{"type":"error","name":"AlreadyInitialized","inputs":[]},{"type":"error","name":"AnchorRootNotFound","inputs":[]},{"type":"error","name":"BadAuth","inputs":[]},{"type":"error","name":"BlockNumberMatches","inputs":[]},{"type":"error","name":"BondTransferFailed","inputs":[]},{"type":"error","name":"CannotDefendRootClaim","inputs":[]},{"type":"error","name":"ClaimAboveSplit","inputs":[]},{"type":"error","name":"ClaimAlreadyExists","inputs":[]},{"type":"error","name":"ClaimAlreadyResolved","inputs":[]},{"type":"error","name":"ClockNotExpired","inputs":[]},{"type":"error","name":"ClockTimeExceeded","inputs":[]},{"type":"error","name":"ContentLengthMismatch","inputs":[]},{"type":"error","name":"DuplicateStep","inputs":[]},{"type":"error","name":"EmptyItem","inputs":[]},{"type":"error","name":"GameDepthExceeded","inputs":[]},{"type":"error","name":"GameNotInProgress","inputs":[]},{"type":"error","name":"IncorrectBondAmount","inputs":[]},{"type":"error","name":"InvalidClockExtension","inputs":[]},{"type":"error","name":"InvalidDataRemainder","inputs":[]},{"type":"error","name":"InvalidDisputedClaimIndex","inputs":[]},{"type":"error","name":"InvalidHeader","inputs":[]},{"type":"error","name":"InvalidHeaderRLP","inputs":[]},{"type":"error","name":"InvalidLocalIdent","inputs":[]},{"type":"error","name":"InvalidOutputRootProof","inputs":[]},{"type":"error","name":"InvalidParent","inputs":[]},{"type":"error","name":"InvalidPrestate","inputs":[]},{"type":"error","name":"InvalidSplitDepth","inputs":[]},{"type":"error","name":"L2BlockNumberChallenged","inputs":[]},{"type":"error","name":"MaxDepthTooLarge","inputs":[]},{"type":"error","name":"NoCreditToClaim","inputs":[]},{"type":"error","name":"OutOfOrderResolution","inputs":[]},{"type":"error","name":"UnexpectedList","inputs":[]},{"type":"error","name":"UnexpectedRootClaim","inputs":[{"name":"rootClaim","type":"bytes32","internalType":"Claim"}]},{"type":"error","name":"UnexpectedString","inputs":[]},{"type":"error","name":"ValidStep","inputs":[]}],"bytecode":{"object":"0x6102006040523480156200001257600080fd5b5060405162006269380380620062698339810160408190526200003591620001ac565b8b8b8b8b8b8b8b8b8b8b6200004d6001607e62000289565b60ff168811156200007157604051633beff19960e11b815260040160405180910390fd5b878710620000925760405163e62ccf3960e01b815260040160405180910390fd5b620000b1856001600160401b03166200017460201b62000d051760201c565b6001600160401b0316620000d9876001600160401b03166200017460201b62000d051760201c565b6001600160401b03161115620001025760405163235dfb2b60e21b815260040160405180910390fd5b63ffffffff9099166101205260809790975260a09590955260c0939093526001600160401b039182166101a0521660e0526001600160a01b03908116610100529081166101405290811661016052610180919091529182166101c052166101e05250620002bb98505050505050505050565b90565b80516001600160401b03811681146200018f57600080fd5b919050565b80516001600160a01b03811681146200018f57600080fd5b6000806000806000806000806000806000806101808d8f031215620001d057600080fd5b8c5163ffffffff81168114620001e557600080fd5b809c505060208d01519a5060408d0151995060608d015198506200020c60808e0162000177565b97506200021c60a08e0162000177565b96506200022c60c08e0162000194565b95506200023c60e08e0162000194565b94506200024d6101008e0162000194565b93506101208d01519250620002666101408e0162000194565b9150620002776101608e0162000194565b90509295989b509295989b509295989b565b600060ff821660ff841680821015620002b257634e487b7160e01b600052601160045260246000fd5b90039392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e051615dfd6200046c6000396000818161058301528181611b1501526120b50152600081816108ce01528181611ad601528181611ba4015261207601526000818161070401528181612ea901528181612f670152612f91015260008181610a9a01526124e801526000818161065c0152818161180601526134bc01526000818161053d015281816119c8015281816129a80152818161336201526138be01526000818161090901528181612577015261347b0152600081816104ca015281816121b101526141b7015260008181610aed01528181610fdc01528181611d7a01528181611dbc01528181612e4301528181612ed40152612fc9015260008181610b20015281816123b001528181612c8c01528181612db201528181612f320152818161400a015281816144b9015281816145ba0152818161468f01528181614f660152615192015260008181610bc701528181611e8a01528181611f1001528181612d5501528181613f00015261402b0152600081816107cf01526140c90152615dfd6000f3fe6080604052600436106103085760003560e01c806370872aa51161019a578063c6f0308c116100e1578063ec5e63081161008a578063fa24f74311610064578063fa24f74314610b94578063fa315aa914610bb8578063fe2bbeb214610beb57600080fd5b8063ec5e630814610b11578063eff0f59214610b44578063f8f43ff614610b7457600080fd5b8063d6ae3cd5116100bb578063d6ae3cd514610a8b578063d8cc1a3c14610abe578063dabd396d14610ade57600080fd5b8063c6f0308c146109b3578063cf09e0d014610a3d578063d5d44d8014610a5e57600080fd5b8063a445ece611610143578063bcef3b551161011d578063bcef3b5514610933578063bd8da95614610973578063c395e1ca1461099357600080fd5b8063a445ece6146107f3578063a8e4fb90146108bf578063bbdc02db146108f257600080fd5b80638980e0cc116101745780638980e0cc1461076b5780638b85902b146107805780638d450a95146107c057600080fd5b806370872aa51461073b5780637b0f0adc146107505780638129fc1c1461076357600080fd5b80633fc8cef31161025e5780635c0cba33116102075780636361506d116101e15780636361506d146106b55780636b6716c0146106f55780636f0344091461072857600080fd5b80635c0cba331461064d578063609d33341461068057806360e274641461069557600080fd5b806354fd4d501161023857806354fd4d50146105a757806357da950e146105fd5780635a5fa2d91461062d57600080fd5b80633fc8cef31461052e578063472777c614610561578063534db0e21461057457600080fd5b80632810e1d6116102c057806337b1b2291161029a57806337b1b2291461047b5780633a768463146104bb5780633e3ac912146104ee57600080fd5b80632810e1d6146103f45780632ad69aeb1461040957806330dbe5701461042957600080fd5b806319effeb4116102f157806319effeb41461034f578063200d2ed21461039a57806325fc2ace146103d557600080fd5b8063019351301461030d57806303c2924d1461032f575b600080fd5b34801561031957600080fd5b5061032d6103283660046155a8565b610c1b565b005b34801561033b57600080fd5b5061032d61034a366004615603565b610f3c565b34801561035b57600080fd5b5060005461037c9068010000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020015b60405180910390f35b3480156103a657600080fd5b506000546103c890700100000000000000000000000000000000900460ff1681565b6040516103919190615654565b3480156103e157600080fd5b506008545b604051908152602001610391565b34801561040057600080fd5b506103c86115e2565b34801561041557600080fd5b506103e6610424366004615603565b611887565b34801561043557600080fd5b506001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610391565b34801561048757600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90033560601c610456565b3480156104c757600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610456565b3480156104fa57600080fd5b5060005461051e907201000000000000000000000000000000000000900460ff1681565b6040519015158152602001610391565b34801561053a57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610456565b61032d61056f366004615695565b6118bd565b34801561058057600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610456565b3480156105b357600080fd5b506105f06040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b604051610391919061572c565b34801561060957600080fd5b50600854600954610618919082565b60408051928352602083019190915201610391565b34801561063957600080fd5b506103e661064836600461573f565b6118cf565b34801561065957600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610456565b34801561068c57600080fd5b506105f0611909565b3480156106a157600080fd5b5061032d6106b036600461577d565b611917565b3480156106c157600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003603401356103e6565b34801561070157600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061037c565b61032d6107363660046157af565b611abe565b34801561074757600080fd5b506009546103e6565b61032d61075e366004615695565b611b7f565b61032d611b8c565b34801561077757600080fd5b506002546103e6565b34801561078c57600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003605401356103e6565b3480156107cc57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e6565b3480156107ff57600080fd5b5061086b61080e36600461573f565b6007602052600090815260409020805460019091015460ff821691610100810463ffffffff1691650100000000009091046fffffffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff1684565b60408051941515855263ffffffff90931660208501526fffffffffffffffffffffffffffffffff9091169183019190915273ffffffffffffffffffffffffffffffffffffffff166060820152608001610391565b3480156108cb57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610456565b3480156108fe57600080fd5b5060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610391565b34801561093f57600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003601401356103e6565b34801561097f57600080fd5b5061037c61098e36600461573f565b611c05565b34801561099f57600080fd5b506103e66109ae3660046157ee565b611de4565b3480156109bf57600080fd5b506109d36109ce36600461573f565b611fc7565b6040805163ffffffff909816885273ffffffffffffffffffffffffffffffffffffffff968716602089015295909416948601949094526fffffffffffffffffffffffffffffffff9182166060860152608085015291821660a08401521660c082015260e001610391565b348015610a4957600080fd5b5060005461037c9067ffffffffffffffff1681565b348015610a6a57600080fd5b506103e6610a7936600461577d565b60036020526000908152604090205481565b348015610a9757600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e6565b348015610aca57600080fd5b5061032d610ad9366004615820565b61205e565b348015610aea57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061037c565b348015610b1d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e6565b348015610b5057600080fd5b5061051e610b5f36600461573f565b60046020526000908152604090205460ff1681565b348015610b8057600080fd5b5061032d610b8f366004615695565b612123565b348015610ba057600080fd5b50610ba9612575565b604051610391939291906158aa565b348015610bc457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e6565b348015610bf757600080fd5b5061051e610c0636600461573f565b60066020526000908152604090205460ff1681565b60008054700100000000000000000000000000000000900460ff166002811115610c4757610c47615625565b14610c7e576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000547201000000000000000000000000000000000000900460ff1615610cd1576040517f0ea2e75200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d08367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036014013590565b90565b610d1f610d1a368690038601866158fe565b6125d5565b14610d56576040517f9cc00b5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82606001358282604051610d6b92919061598b565b604051809103902014610daa576040517fd81d583b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610df3610dee84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061263192505050565b61269e565b90506000610e1a82600881518110610e0d57610e0d61599b565b6020026020010151612854565b9050602081511115610e58576040517fd81d583b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602081810151825190910360031b1c367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003605401358103610ecd576040517fb8ed883000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600180547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790555050600080547fffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffff1672010000000000000000000000000000000000001790555050565b60008054700100000000000000000000000000000000900460ff166002811115610f6857610f68615625565b14610f9f576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028381548110610fb457610fb461599b565b906000526020600020906005020190506000610fcf84611c05565b905067ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081169082161015611038576040517ff2440b5300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008481526006602052604090205460ff1615611081576040517ff1a9458100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084815260056020526040902080548015801561109e57508515155b15611139578354640100000000900473ffffffffffffffffffffffffffffffffffffffff16600081156110d157816110ed565b600186015473ffffffffffffffffffffffffffffffffffffffff165b90506110f98187612908565b50505060009485525050600660205250506040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6000868152600760209081526040918290208251608081018452815460ff81161515808352610100820463ffffffff16948301949094526501000000000090046fffffffffffffffffffffffffffffffff16938101939093526001015473ffffffffffffffffffffffffffffffffffffffff1660608301526111dc576fffffffffffffffffffffffffffffffff60408201526001815260008690036111dc578195505b600086826020015163ffffffff166111f491906159f9565b905060008382116112055781611207565b835b602084015190915063ffffffff165b818110156113535760008682815481106112325761123261599b565b6000918252602080832090910154808352600690915260409091205490915060ff1661128a576040517f9a07664600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002828154811061129f5761129f61599b565b600091825260209091206005909102018054909150640100000000900473ffffffffffffffffffffffffffffffffffffffff161580156112fc5750600481015460408701516fffffffffffffffffffffffffffffffff9182169116115b1561133e57600181015473ffffffffffffffffffffffffffffffffffffffff16606087015260048101546fffffffffffffffffffffffffffffffff1660408701525b5050808061134b90615a11565b915050611216565b5063ffffffff818116602085810191825260008c81526007909152604090819020865181549351928801517fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000009094169015157fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff161761010092909416918202939093177fffffffffffffffffffffff00000000000000000000000000000000ffffffffff16650100000000006fffffffffffffffffffffffffffffffff909316929092029190911782556060850151600190920180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909316929092179091558490036115d757606083015160008a815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055891580156114d357506000547201000000000000000000000000000000000000900460ff165b156115485760015473ffffffffffffffffffffffffffffffffffffffff166114fb818a612908565b885473ffffffffffffffffffffffffffffffffffffffff909116640100000000027fffffffffffffffff0000000000000000000000000000000000000000ffffffff9091161788556115d5565b61158f73ffffffffffffffffffffffffffffffffffffffff82161561156d5781611589565b600189015473ffffffffffffffffffffffffffffffffffffffff165b89612908565b87547fffffffffffffffff0000000000000000000000000000000000000000ffffffff1664010000000073ffffffffffffffffffffffffffffffffffffffff8316021788555b505b505050505050505050565b600080600054700100000000000000000000000000000000900460ff16600281111561161057611610615625565b14611647576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85460ff166116ab576040517f9a07664600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660026000815481106116d7576116d761599b565b6000918252602090912060059091020154640100000000900473ffffffffffffffffffffffffffffffffffffffff1614611712576001611715565b60025b6000805467ffffffffffffffff421668010000000000000000027fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff82168117835592935083927fffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffff000000000000000000ffffffffffffffff909116177001000000000000000000000000000000008360028111156117c6576117c6615625565b0217905560028111156117db576117db615625565b6040517f5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da6090600090a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663838c2d1e6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561186c57600080fd5b505af1158015611880573d6000803e3d6000fd5b5050505090565b600560205281600052604060002081815481106118a357600080fd5b90600052602060002001600091509150505481565b905090565b6118ca8383836001611abe565b505050565b6000818152600760209081526040808320600590925282208054825461190090610100900463ffffffff1682615a49565b95945050505050565b60606118b860546020612a09565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604081208054908290559081900361197c576040517f17bfe5f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ff3fef3a300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063f3fef3a390604401600060405180830381600087803b158015611a0c57600080fd5b505af1158015611a20573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611a7e576040519150601f19603f3d011682016040523d82523d6000602084013e611a83565b606091505b50509050806118ca576040517f83e6cc6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480611b3757503373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016145b611b6d576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b7984848484612a5b565b50505050565b6118ca8383836000611abe565b3273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611bfb576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c036133fc565b565b600080600054700100000000000000000000000000000000900460ff166002811115611c3357611c33615625565b14611c6a576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028381548110611c7f57611c7f61599b565b600091825260208220600590910201805490925063ffffffff90811614611cee57815460028054909163ffffffff16908110611cbd57611cbd61599b565b906000526020600020906005020160040160109054906101000a90046fffffffffffffffffffffffffffffffff1690505b6004820154600090611d2690700100000000000000000000000000000000900467ffffffffffffffff165b67ffffffffffffffff1690565b611d3a9067ffffffffffffffff1642615a49565b611d59611d19846fffffffffffffffffffffffffffffffff1660401c90565b67ffffffffffffffff16611d6d91906159f9565b905067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001667ffffffffffffffff168167ffffffffffffffff1611611dba5780611900565b7f000000000000000000000000000000000000000000000000000000000000000095945050505050565b600080611e83836fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff1690507f0000000000000000000000000000000000000000000000000000000000000000811115611ee2576040517f56f57b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b642e90edd00062061a806311e1a3006000611efd8383615a8f565b9050670de0b6b3a76400006000611f34827f0000000000000000000000000000000000000000000000000000000000000000615aa3565b90506000611f52611f4d670de0b6b3a764000086615aa3565b613955565b90506000611f608484613bb0565b90506000611f6e8383613bff565b90506000611f7b82613c2d565b90506000611f9a82611f95670de0b6b3a76400008f615aa3565b613e15565b90506000611fa88b83613bff565b9050611fb4818d615aa3565b9f9e505050505050505050505050505050565b60028181548110611fd757600080fd5b60009182526020909120600590910201805460018201546002830154600384015460049094015463ffffffff8416955064010000000090930473ffffffffffffffffffffffffffffffffffffffff908116949216926fffffffffffffffffffffffffffffffff91821692918082169170010000000000000000000000000000000090041687565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614806120d757503373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016145b61210d576040517fd386ef3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61211b868686868686613e4f565b505050505050565b60008054700100000000000000000000000000000000900460ff16600281111561214f5761214f615625565b14612186576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000806121958661447e565b935093509350935060006121ab85858585614887565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561221a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223e9190615ae0565b9050600189036123365773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a8461229a367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036034013590565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526024830191909152604482015260206064820152608481018a905260a4015b6020604051808303816000875af115801561230c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123309190615afd565b506115d7565b600289036123625773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a848961229a565b6003890361238e5773ffffffffffffffffffffffffffffffffffffffff81166352f0f3ad8a848761229a565b600489036124aa5760006123d46fffffffffffffffffffffffffffffffff85167f0000000000000000000000000000000000000000000000000000000000000000614941565b6009546123e191906159f9565b6123ec9060016159f9565b905073ffffffffffffffffffffffffffffffffffffffff82166352f0f3ad8b8560405160e084901b7fffffffff000000000000000000000000000000000000000000000000000000001681526004810192909252602482015260c084901b604482015260086064820152608481018b905260a4016020604051808303816000875af115801561247f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a39190615afd565b50506115d7565b60058903612543576040517f52f0f3ad000000000000000000000000000000000000000000000000000000008152600481018a9052602481018390527f000000000000000000000000000000000000000000000000000000000000000060c01b6044820152600860648201526084810188905273ffffffffffffffffffffffffffffffffffffffff8216906352f0f3ad9060a4016122ed565b6040517fff137e6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036014013560606125ce611909565b9050909192565b60008160000151826020015183604001518460600151604051602001612614949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60408051808201909152600080825260208201528151600003612680576040517f5ab458fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50604080518082019091528151815260209182019181019190915290565b606060008060006126ae856149ef565b9194509250905060018160018111156126c9576126c9615625565b14612700576040517f4b9c6abe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845161270c83856159f9565b14612743576040517f5c5537b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080516020808252610420820190925290816020015b604080518082019091526000808252602082015281526020019060019003908161275a5790505093506000835b8651811015612848576000806127cd6040518060400160405280858c600001516127b19190615a49565b8152602001858c602001516127c691906159f9565b90526149ef565b5091509150604051806040016040528083836127e991906159f9565b8152602001848b602001516127fe91906159f9565b8152508885815181106128135761281361599b565b60209081029190910101526128296001856159f9565b935061283581836159f9565b61283f90846159f9565b92505050612787565b50845250919392505050565b60606000806000612864856149ef565b91945092509050600081600181111561287f5761287f615625565b146128b6576040517f1ff9b2e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128c082846159f9565b8551146128f9576040517f5c5537b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61190085602001518484614e8d565b600281015473ffffffffffffffffffffffffffffffffffffffff8316600090815260036020526040812080546fffffffffffffffffffffffffffffffff909316928392906129579084906159f9565b90915550506040517f7eee288d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018390527f00000000000000000000000000000000000000000000000000000000000000001690637eee288d90604401600060405180830381600087803b1580156129ec57600080fd5b505af1158015612a00573d6000803e3d6000fd5b50505050505050565b604051818152367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90038284820160208401378260208301016000815260208101604052505092915050565b60008054700100000000000000000000000000000000900460ff166002811115612a8757612a87615625565b14612abe576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028481548110612ad357612ad361599b565b60009182526020918290206040805160e0810182526005909302909101805463ffffffff8116845273ffffffffffffffffffffffffffffffffffffffff64010000000090910481169484019490945260018101549093169082015260028201546fffffffffffffffffffffffffffffffff908116606083015260038301546080830181905260049093015480821660a084015270010000000000000000000000000000000090041660c082015291508514612bba576040517f3014033200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a0810151600083156fffffffffffffffffffffffffffffffff83161760011b90506000612c7a826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff169050861580612cb55750612cb27f000000000000000000000000000000000000000000000000000000000000000060026159f9565b81145b8015612cbf575084155b15612cf6576040517fa42637bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000547201000000000000000000000000000000000000900460ff168015612d1c575086155b15612d53576040517f0ea2e75200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115612dad576040517f56f57b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612dd87f000000000000000000000000000000000000000000000000000000000000000060016159f9565b8103612dea57612dea86888588614f22565b34612df483611de4565b14612e2b576040517f8620aa1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000612e3688611c05565b905067ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811690821603612e9e576040517f3381d11400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001667ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612efe9190615b16565b67ffffffffffffffff16612f198267ffffffffffffffff1690565b67ffffffffffffffff161115612ffb576000612f5660017f0000000000000000000000000000000000000000000000000000000000000000615a49565b8314612f8c5767ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612fc1565b612fc17f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166002615b3f565b9050612ff7817f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16615b16565b9150505b6000604082901b42176000898152608086901b6fffffffffffffffffffffffffffffffff8c1617602052604081209192509060008181526004602052604090205490915060ff1615613079576040517f80497e3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060026040518060e001604052808c63ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001346fffffffffffffffffffffffffffffffff1681526020018b8152602001876fffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060c08201518160040160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050600560008b8152602001908152602001600020600160028054905061330f9190615a49565b81546001810183556000928352602083200155604080517fd0e30db0000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263d0e30db09234926004808301939282900301818588803b1580156133a757600080fd5b505af11580156133bb573d6000803e3d6000fd5b50506040513393508c92508d91507f9b3245740ec3b155098a55be84957a4da13eaf7f14a8bc6f53126c0b9350f2be90600090a45050505050505050505050565b60005471010000000000000000000000000000000000900460ff161561344e576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f7258a80700000000000000000000000000000000000000000000000000000000815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637258a807906024016040805180830381865afa158015613502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135269190615b6f565b909250905081613562576040517f6a6bc3b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082019091528281526020018190526008829055600981905536607a1461359557639824bdab6000526004601cfd5b80367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003605401351161362f576040517ff40239db000000000000000000000000000000000000000000000000000000008152367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036014013560048201526024015b60405180910390fd5b6040805160e08101825263ffffffff8082526000602083018181527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe369081013560f01c90038035606090811c868801908152346fffffffffffffffffffffffffffffffff81811693890193845260149094013560808901908152600160a08a0181815242871660c08c019081526002805493840181558a529a5160059092027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace81018054995173ffffffffffffffffffffffffffffffffffffffff908116640100000000027fffffffffffffffff000000000000000000000000000000000000000000000000909b1694909c16939093179890981790915592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf87018054918a167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117905592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0860180549186167fffffffffffffffffffffffffffffffff0000000000000000000000000000000090921691909117905591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad185015551955182167001000000000000000000000000000000000295909116949094177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad29091015580547fffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffff167101000000000000000000000000000000000017815583517fd0e30db000000000000000000000000000000000000000000000000000000000815293517f00000000000000000000000000000000000000000000000000000000000000009092169363d0e30db093926004828101939282900301818588803b15801561390457600080fd5b505af1158015613918573d6000803e3d6000fd5b5050600080547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000164267ffffffffffffffff161790555050505050565b6fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff1060031b17600082136139b457631615e6386000526004601cfd5b7ff8f9f9faf9fdfafbf9fdfcfdfafbfcfef9fafdfafcfcfbfefafafcfbffffffff6f8421084210842108cc6318c6db6d54be83831c1c601f161a1890811b609f90811c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506029190037d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a764000002158202613bed57637c5f487d6000526004601cfd5b50670de0b6b3a7640000919091020490565b600081600019048311820215613c1d5763bac65e5b6000526004601cfd5b50670de0b6b3a764000091020490565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdc0d0570925a462d78213613c5b57919050565b680755bf798b4a1bf1e58212613c795763a37bfec96000526004601cfd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093037fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550481018102606090811d6d0277594991cfc85f6e2461837cd9018202811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b6000613e46670de0b6b3a764000083613e2d86613955565b613e379190615b93565b613e419190615c4f565b613c2d565b90505b92915050565b60008054700100000000000000000000000000000000900460ff166002811115613e7b57613e7b615625565b14613eb2576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028781548110613ec757613ec761599b565b6000918252602082206005919091020160048101549092506fffffffffffffffffffffffffffffffff16908715821760011b9050613f267f000000000000000000000000000000000000000000000000000000000000000060016159f9565b613fc2826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff1614613ffc576040517f5f53dd9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008089156140f35761404f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000615a49565b6001901b61406e846fffffffffffffffffffffffffffffffff166150d3565b6fffffffffffffffffffffffffffffffff1661408a9190615cb7565b156140c7576140be6140af60016fffffffffffffffffffffffffffffffff8716615ccb565b865463ffffffff166000615172565b600301546140e9565b7f00000000000000000000000000000000000000000000000000000000000000005b915084905061411d565b6003850154915061411a6140af6fffffffffffffffffffffffffffffffff86166001615cf4565b90505b600882901b60088a8a60405161413492919061598b565b6040518091039020901b14614175576040517f696550ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006141808c615256565b9050600061418f836003015490565b6040517fe14ced320000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e14ced3290614209908f908f908f908f908a90600401615d71565b6020604051808303816000875af1158015614228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061424c9190615afd565b6004850154911491506000906002906142f7906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b614393896fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b61439d9190615dab565b6143a79190615dce565b60ff1615905081151581036143e8576040517ffb4e40dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8754640100000000900473ffffffffffffffffffffffffffffffffffffffff161561443f576040517f9071e6af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505085547fffffffffffffffff0000000000000000000000000000000000000000ffffffff163364010000000002179095555050505050505050505050565b600080600080600085905060006002828154811061449e5761449e61599b565b600091825260209091206004600590920201908101549091507f000000000000000000000000000000000000000000000000000000000000000090614575906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff16116145af576040517fb34b5c2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815b60048301547f000000000000000000000000000000000000000000000000000000000000000090614676906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff1692508211156146eb57825463ffffffff166146b57f000000000000000000000000000000000000000000000000000000000000000060016159f9565b83036146bf578391505b600281815481106146d2576146d261599b565b90600052602060002090600502019350809450506145b3565b600481810154908401546fffffffffffffffffffffffffffffffff91821691166000816fffffffffffffffffffffffffffffffff1661475461473f856fffffffffffffffffffffffffffffffff1660011c90565b6fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff16149050801561482357600061478c836fffffffffffffffffffffffffffffffff166150d3565b6fffffffffffffffffffffffffffffffff1611156147f75760006147ce6147c660016fffffffffffffffffffffffffffffffff8616615ccb565b896001615172565b6003810154600490910154909c506fffffffffffffffffffffffffffffffff169a506147fd9050565b6008549a505b600386015460048701549099506fffffffffffffffffffffffffffffffff169750614879565b60006148456147c66fffffffffffffffffffffffffffffffff85166001615cf4565b6003808901546004808b015492840154930154909e506fffffffffffffffffffffffffffffffff9182169d50919b50169850505b505050505050509193509193565b60006fffffffffffffffffffffffffffffffff8416156148f45760408051602081018790526fffffffffffffffffffffffffffffffff8087169282019290925260608101859052908316608082015260a00160405160208183030381529060405280519060200120611900565b82826040516020016149229291909182526fffffffffffffffffffffffffffffffff16602082015260400190565b6040516020818303038152906040528051906020012095945050505050565b6000806149ce847e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff1690508083036001841b600180831b0386831b17039250505092915050565b60008060008360000151600003614a32576040517f5ab458fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020840151805160001a607f8111614a57576000600160009450945094505050614e86565b60b78111614b6d576000614a6c608083615a49565b905080876000015111614aab576040517f66c9448500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001838101517fff00000000000000000000000000000000000000000000000000000000000000169082148015614b2357507f80000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216105b15614b5a576040517fbabb01dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060019550935060009250614e86915050565b60bf8111614ccb576000614b8260b783615a49565b905080876000015111614bc1576040517f66c9448500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018301517fff00000000000000000000000000000000000000000000000000000000000000166000819003614c23576040517fbabb01dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600184015160088302610100031c60378111614c6b576040517fbabb01dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614c7581846159f9565b895111614cae576040517f66c9448500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614cb98360016159f9565b9750955060009450614e869350505050565b60f78111614d30576000614ce060c083615a49565b905080876000015111614d1f576040517f66c9448500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600195509350849250614e86915050565b6000614d3d60f783615a49565b905080876000015111614d7c576040517f66c9448500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018301517fff00000000000000000000000000000000000000000000000000000000000000166000819003614dde576040517fbabb01dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600184015160088302610100031c60378111614e26576040517fbabb01dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614e3081846159f9565b895111614e69576040517f66c9448500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614e748360016159f9565b9750955060019450614e869350505050565b9193909250565b60608167ffffffffffffffff811115614ea857614ea86158cf565b6040519080825280601f01601f191660200182016040528015614ed2576020820181803683370190505b5090508115614f1b576000614ee784866159f9565b90506020820160005b84811015614f08578281015182820152602001614ef0565b84811115614f17576000858301525b5050505b9392505050565b6000614f416fffffffffffffffffffffffffffffffff84166001615cf4565b90506000614f5182866001615172565b9050600086901a838061503d5750614f8a60027f0000000000000000000000000000000000000000000000000000000000000000615cb7565b600483015460029061502e906fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b6150389190615dce565b60ff16145b156150955760ff811660011480615057575060ff81166002145b615090576040517ff40239db00000000000000000000000000000000000000000000000000000000815260048101889052602401613626565b612a00565b60ff811615612a00576040517ff40239db00000000000000000000000000000000000000000000000000000000815260048101889052602401613626565b600080615160837e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b600160ff919091161b90920392915050565b600080826151bb576151b66fffffffffffffffffffffffffffffffff86167f0000000000000000000000000000000000000000000000000000000000000000615285565b6151d6565b6151d6856fffffffffffffffffffffffffffffffff16615411565b9050600284815481106151eb576151eb61599b565b906000526020600020906005020191505b60048201546fffffffffffffffffffffffffffffffff82811691161461524e57815460028054909163ffffffff169081106152395761523961599b565b906000526020600020906005020191506151fc565b509392505050565b60008060008060006152678661447e565b935093509350935061527b84848484614887565b9695505050505050565b600081615324846fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff161161533a5763b34b5c226000526004601cfd5b61534383615411565b9050816153e2826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff1611613e4957613e466153f88360016159f9565b6fffffffffffffffffffffffffffffffff8316906154b6565b600081196001830116816154a5827e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff169390931c8015179392505050565b600080615543847e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60ff169050808303600180821b0385821b179250505092915050565b60008083601f84011261557157600080fd5b50813567ffffffffffffffff81111561558957600080fd5b6020830191508360208285010111156155a157600080fd5b9250929050565b600080600083850360a08112156155be57600080fd5b60808112156155cc57600080fd5b50839250608084013567ffffffffffffffff8111156155ea57600080fd5b6155f68682870161555f565b9497909650939450505050565b6000806040838503121561561657600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081016003831061568f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000806000606084860312156156aa57600080fd5b505081359360208301359350604090920135919050565b6000815180845260005b818110156156e7576020818501810151868301820152016156cb565b818111156156f9576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000613e4660208301846156c1565b60006020828403121561575157600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461577a57600080fd5b50565b60006020828403121561578f57600080fd5b8135614f1b81615758565b803580151581146157aa57600080fd5b919050565b600080600080608085870312156157c557600080fd5b8435935060208501359250604085013591506157e36060860161579a565b905092959194509250565b60006020828403121561580057600080fd5b81356fffffffffffffffffffffffffffffffff81168114614f1b57600080fd5b6000806000806000806080878903121561583957600080fd5b863595506158496020880161579a565b9450604087013567ffffffffffffffff8082111561586657600080fd5b6158728a838b0161555f565b9096509450606089013591508082111561588b57600080fd5b5061589889828a0161555f565b979a9699509497509295939492505050565b63ffffffff8416815282602082015260606040820152600061190060608301846156c1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006080828403121561591057600080fd5b6040516080810181811067ffffffffffffffff8211171561595a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115615a0c57615a0c6159ca565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203615a4257615a426159ca565b5060010190565b600082821015615a5b57615a5b6159ca565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082615a9e57615a9e615a60565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615adb57615adb6159ca565b500290565b600060208284031215615af257600080fd5b8151614f1b81615758565b600060208284031215615b0f57600080fd5b5051919050565b600067ffffffffffffffff83811690831681811015615b3757615b376159ca565b039392505050565b600067ffffffffffffffff80831681851681830481118215151615615b6657615b666159ca565b02949350505050565b60008060408385031215615b8257600080fd5b505080516020909101519092909150565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600084136000841385830485118282161615615bd457615bd46159ca565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615615c0f57615c0f6159ca565b60008712925087820587128484161615615c2b57615c2b6159ca565b87850587128184161615615c4157615c416159ca565b505050929093029392505050565b600082615c5e57615c5e615a60565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615615cb257615cb26159ca565b500590565b600082615cc657615cc6615a60565b500690565b60006fffffffffffffffffffffffffffffffff83811690831681811015615b3757615b376159ca565b60006fffffffffffffffffffffffffffffffff808316818516808303821115615d1f57615d1f6159ca565b01949350505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b606081526000615d85606083018789615d28565b8281036020840152615d98818688615d28565b9150508260408301529695505050505050565b600060ff821660ff841680821015615dc557615dc56159ca565b90039392505050565b600060ff831680615de157615de1615a60565b8060ff8416069150509291505056fea164736f6c634300080f000a","sourceMap":"1187:4133:173:-:0;;;2763:767;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3198:9;3221:17;3252:13;3279:11;3304:15;3333:17;3364:3;3381:5;3400:20;3434:10;6358:35:172;6392:1;857:3:183;6358:35:172;:::i;:::-;6342:51;;:13;:51;6338:82;;;6402:18;;-1:-1:-1;;;6402:18:172;;;;;;;;;;;6338:82;6531:13;6516:11;:28;6512:60;;6553:19;;-1:-1:-1;;;6553:19:172;;;;;;;;;;;6512:60;6689:23;:17;-1:-1:-1;;;;;6689:21:172;;;;;;:23;;:::i;:::-;-1:-1:-1;;;;;6665:47:172;:21;:15;-1:-1:-1;;;;;6665:19:172;;;;;;:21;;:::i;:::-;-1:-1:-1;;;;;6665:47:172;;6661:83;;;6721:23;;-1:-1:-1;;;6721:23:172;;;;;;;;;;;6661:83;6755:21;;;;;;6786:37;;;;;-1:-1:-1;6833:30:172;;;;6873:25;;;;;-1:-1:-1;;;;;6908:33:172;;;;;6951:38;;;-1:-1:-1;;;;;6999:8:172;;;;;7017:12;;;;;7039:44;;;;;7093:24;;;;;3469:20:173;;::::1;;::::0;3499:24:::1;;::::0;-1:-1:-1;1187:4133:173;;-1:-1:-1;;;;;;;;;1187:4133:173;6529:145:184;6649:9;6529:145::o;14:198:383:-;115:13;;-1:-1:-1;;;;;157:30:383;;147:41;;137:69;;202:1;199;192:12;137:69;14:198;;;:::o;217:190::-;309:13;;-1:-1:-1;;;;;351:31:383;;341:42;;331:70;;397:1;394;387:12;412:1439;778:6;786;794;802;810;818;826;834;842;850;858:7;867;921:3;909:9;900:7;896:23;892:33;889:53;;;938:1;935;928:12;889:53;970:9;964:16;1020:10;1013:5;1009:22;1002:5;999:33;989:61;;1046:1;1043;1036:12;989:61;1069:5;1059:15;;;1114:2;1103:9;1099:18;1093:25;1083:35;;1158:2;1147:9;1143:18;1137:25;1127:35;;1202:2;1191:9;1187:18;1181:25;1171:35;;1225:72;1292:3;1281:9;1277:19;1225:72;:::i;:::-;1215:82;;1316:72;1383:3;1372:9;1368:19;1316:72;:::i;:::-;1306:82;;1407:63;1465:3;1454:9;1450:19;1407:63;:::i;:::-;1397:73;;1489:63;1547:3;1536:9;1532:19;1489:63;:::i;:::-;1479:73;;1571:63;1629:3;1618:9;1614:19;1571:63;:::i;:::-;1561:73;;1674:3;1663:9;1659:19;1653:26;1643:36;;1699:63;1757:3;1746:9;1742:19;1699:63;:::i;:::-;1688:74;;1782:63;1840:3;1829:9;1825:19;1782:63;:::i;:::-;1771:74;;412:1439;;;;;;;;;;;;;;:::o;1856:292::-;1894:4;1931;1928:1;1924:12;1963:4;1960:1;1956:12;1988:3;1983;1980:12;1977:135;;;2034:10;2029:3;2025:20;2022:1;2015:31;2069:4;2066:1;2059:15;2097:4;2094:1;2087:15;1977:135;2129:13;;;1856:292;-1:-1:-1;;;1856:292:383:o;:::-;1187:4133:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"","sourceMap":"1187:4133:173:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24549:2125:172;;;;;;;;;;-1:-1:-1;24549:2125:172;;;;;:::i;:::-;;:::i;:::-;;27870:5904;;;;;;;;;;-1:-1:-1;27870:5904:172;;;;;:::i;:::-;;:::i;3520:27::-;;;;;;;;;;-1:-1:-1;3520:27:172;;;;;;;;;;;;;;1395:18:383;1383:31;;;1365:50;;1353:2;1338:18;3520:27:172;;;;;;;;3587:24;;;;;;;;;;-1:-1:-1;3587:24:172;;;;;;;;;;;;;;;;;;:::i;24056:135::-;;;;;;;;;;-1:-1:-1;24161:18:172;:23;24056:135;;;2195:25:383;;;2183:2;2168:18;24056:135:172;2022:204:383;26921:905:172;;;;;;;;;;;;;:::i;4609:45::-;;;;;;;;;;-1:-1:-1;4609:45:172;;;;;:::i;:::-;;:::i;4116:38::-;;;;;;;;;;-1:-1:-1;4116:38:172;;;;;;;;;;;2589:42:383;2577:55;;;2559:74;;2547:2;2532:18;4116:38:172;2413:226:383;33960:110:172;;;;;;;;;;-1:-1:-1;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;1993:36;1989:2;1985:45;33960:110:172;;40963:79;;;;;;;;;;-1:-1:-1;41033:2:172;40963:79;;3846:35;;;;;;;;;;-1:-1:-1;3846:35:172;;;;;;;;;;;;;;3062:14:383;;3055:22;3037:41;;3025:2;3010:18;3846:35:172;2897:187:383;41107:88:172;;;;;;;;;;-1:-1:-1;41184:4:172;41107:88;;20806:146;;;;;;:::i;:::-;;:::i;5211:107:173:-;;;;;;;;;;-1:-1:-1;5301:10:173;5211:107;;3326:40:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5028:36::-;;;;;;;;;;-1:-1:-1;5028:36:172;;;;;;;;;;;;;4682:25:383;;;4738:2;4723:18;;4716:34;;;;4655:18;5028:36:172;4481:275:383;23242:402:172;;;;;;;;;;-1:-1:-1;23242:402:172;;;;;:::i;:::-;;:::i;41261:136::-;;;;;;;;;;-1:-1:-1;41369:21:172;41261:136;;34420:231;;;;;;;;;;;;;:::i;37638:647::-;;;;;;;;;;-1:-1:-1;37638:647:172;;;;;:::i;:::-;;:::i;34270:111::-;;;;;;;;;;-1:-1:-1;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;34368:4:172;3514:22:97;3501:36;34270:111:172;33960:110;40785:125;;;;;;;;;;-1:-1:-1;40888:15:172;40785:125;;4241:273:173;;;;;;:::i;:::-;;:::i;23856:156:172:-;;;;;;;;;;-1:-1:-1;23973:32:172;;23856:156;;20996:147;;;;;;:::i;:::-;;:::i;4555:243:173:-;;;:::i;39698:101:172:-;;;;;;;;;;-1:-1:-1;39776:9:172;:16;39698:101;;23688:124;;;;;;;;;;-1:-1:-1;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;23800:4:172;3514:22:97;3501:36;23688:124:172;33960:110;40085:130;;;;;;;;;;-1:-1:-1;40191:17:172;40085:130;;4858:69;;;;;;;;;;-1:-1:-1;4858:69:172;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7179:14:383;;7172:22;7154:41;;7243:10;7231:23;;;7226:2;7211:18;;7204:51;7303:34;7291:47;;;7271:18;;;7264:75;;;;7387:42;7375:55;7370:2;7355:18;;7348:83;7141:3;7126:19;4858:69:172;6900:537:383;5058:99:173;;;;;;;;;;-1:-1:-1;5142:8:173;5058:99;;33813:108:172;;;;;;;;;;-1:-1:-1;33813:108:172;;7648:10:383;33905:9:172;7636:23:383;7618:42;;7606:2;7591:18;33813:108:172;7442:224:383;34109:122:172;;;;;;;;;;-1:-1:-1;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;34218:4:172;3514:22:97;3501:36;34109:122:172;33960:110;38620:1011;;;;;;;;;;-1:-1:-1;38620:1011:172;;;;;:::i;:::-;;:::i;35327:2171::-;;;;;;;;;;-1:-1:-1;35327:2171:172;;;;;:::i;:::-;;:::i;4242:28::-;;;;;;;;;;-1:-1:-1;4242:28:172;;;;;:::i;:::-;;:::i;:::-;;;;8438:10:383;8426:23;;;8408:42;;8469;8547:15;;;8542:2;8527:18;;8520:43;8599:15;;;;8579:18;;;8572:43;;;;8634:34;8704:15;;;8699:2;8684:18;;8677:43;8751:3;8736:19;;8729:35;8801:15;;;8795:3;8780:19;;8773:44;8854:15;8848:3;8833:19;;8826:44;8395:3;8380:19;4242:28:172;8008:868:383;3424:26:172;;;;;;;;;;-1:-1:-1;3424:26:172;;;;;;;;4337:41;;;;;;;;;;-1:-1:-1;4337:41:172;;;;;:::i;:::-;;;;;;;;;;;;;;41486:105;;;;;;;;;;-1:-1:-1;41573:11:172;41486:105;;3574:269:173;;;;;;;;;;-1:-1:-1;3574:269:173;;;;;:::i;:::-;;:::i;40591:134:172:-;;;;;;;;;;-1:-1:-1;40700:18:172;40591:134;;40429:108;;;;;;;;;;-1:-1:-1;40519:11:172;40429:108;;4466:35;;;;;;;;;;-1:-1:-1;4466:35:172;;;;;:::i;:::-;;;;;;;;;;;;;;;;21187:2011;;;;;;;;;;-1:-1:-1;21187:2011:172;;;;;:::i;:::-;;:::i;34690:213::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;40265:117::-;;;;;;;;;;-1:-1:-1;40361:14:172;40265:117;;4733:48;;;;;;;;;;-1:-1:-1;4733:48:172;;;;;:::i;:::-;;;;;;;;;;;;;;;;24549:2125;24807:22;24797:6;;;;;;;:32;;;;;;;;:::i;:::-;;24793:64;;24838:19;;;;;;;;;;;;;;24793:64;24936:23;;;;;;;24932:61;;;24968:25;;;;;;;;;;;;;;24932:61;25101:17;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;34218:4:172;3514:22:97;3501:36;6649:9:184;6529:145;25101:11:172;6649:9:184;6529:145;25101:17:172;25052:45;;;;;;;;25080:16;25052:45;:::i;:::-;:27;:45::i;:::-;:66;25048:103;;25127:24;;;;;;;;;;;;;;25048:103;25234:16;:32;;;25219:10;;25209:21;;;;;;;:::i;:::-;;;;;;;;:57;25205:88;;25275:18;;;;;;;;;;;;;;25205:88;25487:41;25531:51;25550:31;25570:10;;25550:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25550:19:172;;-1:-1:-1;;;25550:31:172:i;:::-;25531:18;:51::i;:::-;25487:95;;25592:27;25622:62;25642:14;3255:1;25642:41;;;;;;;;:::i;:::-;;;;;;;25622:19;:62::i;:::-;25592:92;;25779:2;25755:14;:21;:26;25751:57;;;25790:18;;;;;;;;;;;;;;25751:57;26231:4;26211:25;;;26205:32;26180:21;;26170:32;;;26164:4;26160:43;26156:82;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;23800:4:172;3514:22:97;3501:36;26358:11:172;:30;26354:63;;26397:20;;;;;;;;;;;;;;26354:63;-1:-1:-1;;26591:23:172;:36;;;;26617:10;26591:36;;;-1:-1:-1;;26591:23:172;26637:30;;;;;;;;-1:-1:-1;;24549:2125:172:o;27870:5904::-;28057:22;28047:6;;;;;;;:32;;;;;;;;:::i;:::-;;28043:64;;28088:19;;;;;;;;;;;;;;28043:64;28118:34;28155:9;28165:11;28155:22;;;;;;;;:::i;:::-;;;;;;;;;;;28118:59;;28187:31;28221:34;28243:11;28221:21;:34::i;:::-;28187:68;-1:-1:-1;28566:22:172;:18;:22;;28535:26;;;:55;28531:85;;;28599:17;;;;;;;;;;;;;;28531:85;28685:29;;;;:16;:29;;;;;;;;28681:64;;;28723:22;;;;;;;;;;;;;;28681:64;28756:34;28793:21;;;:8;:21;;;;;28854:23;;29040:24;;:44;;;;-1:-1:-1;29068:16:172;;;29040:44;29036:805;;;29573:28;;;;;;;29551:19;29635:25;;:67;;29691:11;29635:67;;;29663:25;;;;;;29635:67;29615:87;;29716:44;29732:9;29743:16;29716:15;:44::i;:::-;-1:-1:-1;;;29774:29:172;;;;-1:-1:-1;;29774:16:172;:29;;-1:-1:-1;;29774:29:172;;;:36;;;;29806:4;29774:36;;;27870:5904::o;29036:805::-;29908:38;29949:34;;;:21;:34;;;;;;;;;29908:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30104:368;;30205:17;30161:27;;;:62;30276:4;30237:43;;:36;30406:18;;;30402:59;;30442:19;30426:35;;30402:59;30540:21;30590:13;30564:10;:23;;;:39;;;;;;:::i;:::-;30540:63;;30613:19;30651;30635:13;:35;:73;;30695:13;30635:73;;;30673:19;30635:73;30735:23;;;;30613:95;;-1:-1:-1;30723:35:172;;30718:1180;30764:11;30760:1;:15;30718:1180;;;30796:22;30821:16;30838:1;30821:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;30942:32;;;:16;:32;;;;;;;;30821:19;;-1:-1:-1;30942:32:172;;30937:68;;30983:22;;;;;;;;;;;;;;30937:68;31020:23;31046:9;31056:14;31046:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;31661:17;;31046:25;;-1:-1:-1;31661:17:172;;;:31;:17;:31;:91;;;;-1:-1:-1;31732:14:172;;;;31696:27;;;;31732:14;;;;31696:31;;:56;31661:91;31657:231;;;31797:14;;;;;;31772:22;;;:39;31859:14;;;;;;31829:27;;;:44;31657:231;30782:1116;;30777:3;;;;;:::i;:::-;;;;30718:1180;;;-1:-1:-1;32006:45:172;;;;:23;;;;:45;;;32198:34;;;;:21;:34;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32198:47:172;;;;;;;;;;;;;;;;;;32454:46;;;32450:1318;;32536:22;;;;32516:17;32618:29;;;:16;:29;;;;;:36;;;;32650:4;32618:36;;;32734:16;;:43;;;;-1:-1:-1;32754:23:172;;;;;;;32734:43;32730:1028;;;33011:23;;;;33052:45;33011:23;33080:16;33052:15;:45::i;:::-;33115:41;;;;;;;;;;;;;;;32730:1028;;;33409:98;33425:23;;;;:63;;33479:9;33425:63;;;33451:25;;;;;;33425:63;33490:16;33409:15;:98::i;:::-;33703:40;;;;;;;;;;;;32730:1028;32502:1266;32450:1318;27945:5829;;;;;;;27870:5904;;:::o;26921:905::-;26958:18;;27080:6;;;;;;;:32;;;;;;;;:::i;:::-;;27076:64;;27121:19;;;;;;;;;;;;;;27076:64;27254:19;;;:16;:19;;;;;;27249:55;;27282:22;;;;;;;;;;;;;;27249:55;27430:1;27394:38;;:9;27404:1;27394:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:24;;;;;;:38;:94;;27462:26;27394:94;;;27435:24;27394:94;27498:10;:52;;;27533:15;27498:52;;;;;;;;;;27384:104;;-1:-1:-1;27384:104:172;;27680:16;;;;;;;;27384:104;27680:16;;;;;;;;:::i;:::-;;;;;27671:26;;;;;;;;:::i;:::-;;;;;;;;27775:21;:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26921:905;:::o;4609:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;34043:20::-;34032:31;;33960:110;:::o;20806:146::-;20902:43;20907:9;20918:12;20932:6;20940:4;20902;:43::i;:::-;20806:146;;;:::o;23242:402::-;23309:29;23392:34;;;:21;:34;;;;;;;;23473:8;:21;;;;;23534:23;;23614;;23592:45;;23614:23;;;;;23534;23592:45;:::i;:::-;23568:69;23242:402;-1:-1:-1;;;;;23242:402:172:o;34420:231::-;34462:23;34620:24;34633:4;34639;34620:12;:24::i;37638:647::-;37811:18;;;37785:23;37811:18;;;:6;:18;;;;;;;37839:22;;;;37811:18;37935:20;;;37931:50;;37964:17;;;;;;;;;;;;;;37931:50;38059:42;;;;;:13;13018:55:383;;;38059:42:172;;;13000:74:383;13090:18;;;13083:34;;;38059:4:172;:13;;;;12973:18:383;;38059:42:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38162:12;38179:10;:15;;38203;38179:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38161:66;;;38242:7;38237:41;;38258:20;;;;;;;;;;;;;;4241:273:173;1644:10;:22;1658:8;1644:22;;;:50;;-1:-1:-1;1670:10:173;:24;1684:10;1670:24;;1644:50;1638:100;;1718:9;;;;;;;;;;;;;;1638:100;4450:57:::1;4461:9;4472:15;4489:6;4497:9;4450:10;:57::i;:::-;4241:273:::0;;;;:::o;20996:147:172:-;21092:44;21097:9;21108:12;21122:6;21130:5;21092:4;:44::i;4555:243:173:-;4684:9;:21;4697:8;4684:21;;4680:43;;4714:9;;;;;;;;;;;;;;4680:43;4773:18;:16;:18::i;:::-;4555:243::o;38620:1011:172:-;38693:18;;38835:6;;;;;;;:32;;;;;;;;:::i;:::-;;38831:89;;38890:19;;;;;;;;;;;;;;38831:89;38971:34;39008:9;39018:11;39008:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;39143:28;;39008:22;;-1:-1:-1;39175:16:172;39143:28;;;:48;39139:138;;39231:28;;39221:9;:39;;:9;;39231:28;;;39221:39;;;;;;:::i;:::-;;;;;;;;;;;:45;;;;;;;;;;;;39207:59;;39139:138;39460:22;;;;39364:24;;39460:40;;:22;;;2484:28:184;;39460:34:172;:38;;6649:9:184;6529:145;39460:40:172;39442:58;;;;:15;:58;:::i;:::-;39410:28;:22;:11;:20;;1995:4:184;1991:17;;1773:251;39410:28:172;:91;;;;;;:::i;:::-;39364:138;-1:-1:-1;39544:22:172;:18;:22;39524:44;;:17;:44;;;:100;;39606:17;39524:100;;;39571:18;39512:112;38620:1011;-1:-1:-1;;;;;38620:1011:172:o;35327:2171::-;35393:21;35426:13;35450:17;:9;:15;;2582:66:183;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;35450:17:172;35442:26;;35426:42;;35490:14;35482:5;:22;35478:54;;;35513:19;;;;;;;;;;;;;;35478:54;35623:8;35666:7;35708:11;35598:22;36475:31;35666:7;35708:11;36475:31;:::i;:::-;36463:43;-1:-1:-1;2458:4:98;36516:9:172;36571:38;2458:4:98;36571:14:172;:38;:::i;:::-;36559:50;-1:-1:-1;36706:11:172;36728:58;36759:25;2458:4:98;36759:1:172;:25;:::i;:::-;36728:23;:58::i;:::-;36706:81;;36864:14;36881:30;36906:1;36909;36881:24;:30::i;:::-;36864:47;;37045:17;37065:37;37090:3;37095:6;37065:24;:37::i;:::-;37045:57;;37112:11;37126:43;37158:9;37126:24;:43::i;:::-;37112:57;-1:-1:-1;37224:13:172;37240:69;37112:57;37278:29;2458:4:98;37278:5:172;:29;:::i;:::-;37240:24;:69::i;:::-;37224:85;;37319:19;37341:57;37366:14;37390:6;37341:24;:57::i;:::-;37319:79;-1:-1:-1;37463:28:172;37319:79;37463:14;:28;:::i;:::-;37447:44;35327:2171;-1:-1:-1;;;;;;;;;;;;;;;35327:2171:172:o;4242:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4242:28:172;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3574:269:173:-;1644:10;:22;1658:8;1644:22;;;:50;;-1:-1:-1;1670:10:173;:24;1684:10;1670:24;;1644:50;1638:100;;1718:9;;;;;;;;;;;;;;1638:100;3782:54:::1;3793:11;3806:9;3817:10;;3829:6;;3782:10;:54::i;:::-;3574:269:::0;;;;;;:::o;21187:2011:172:-;21390:22;21380:6;;;;;;;:32;;;;;;;;:::i;:::-;;21376:64;;21421:19;;;;;;;;;;;;;;21376:64;21452:14;21468:20;21490:14;21506:20;21542:45;21574:12;21542:31;:45::i;:::-;21451:136;;;;;;;;21597:9;21609:66;21630:8;21640:11;21653:8;21663:11;21609:20;:66::i;:::-;21597:78;;21686:22;21711:2;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21686:36;;2232:4:185;21736:6:172;:39;21732:1460;;21828:20;;;;21849:6;21857:4;21869:14;14565::97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;34368:4:172;3514:22:97;3501:36;6649:9:184;6529:145;21869:14:172;21828:73;;;;;;;;;;;;;14434:25:383;;;;14475:18;;;14468:34;;;;14518:18;;;14511:34;21885:2:172;14561:18:383;;;14554:34;14604:19;;;14597:35;;;14406:19;;21828:73:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21732:1460;;;2353:4:185;21922:6:172;:47;21918:1274;;22042:20;;;;22063:6;22071:4;22083:8;:14;6529:145:184;21918:1274:172;2474:4:185;22136:6:172;:47;22132:1060;;22255:20;;;;22276:6;22284:4;22296:8;:14;6529:145:184;22132:1060:172;2603:4:185;22349:6:172;:51;22345:847;;22680:16;22734:35;:22;;;22757:11;22734:22;:35::i;:::-;22699:32;;:70;;;;:::i;:::-;:74;;22772:1;22699:74;:::i;:::-;22680:93;-1:-1:-1;22788:20:172;;;;22809:6;22817:4;22788:83;;;;;;;;;;;;;14434:25:383;;;;14475:18;;;14468:34;22849:4:172;22837:16;;;14518:18:383;;;14511:34;22856:1:172;14561:18:383;;;14554:34;14604:19;;;14597:35;;;14406:19;;22788:83:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;22402:480;22345:847;;;2700:4:185;22892:6:172;:35;22888:304;;23038:86;;;;;;;;14434:25:383;;;14475:18;;;14468:34;;;23087:11:172;23102:4;23087:19;14518:18:383;;;14511:34;23109:1:172;14561:18:383;;;14554:34;14604:19;;;14597:35;;;23038:20:172;;;;;;14406:19:383;;23038:86:172;14166:472:383;22888:304:172;23162:19;;;;;;;;;;;;;;34690:213;33905:9;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;34218:4:172;3514:22:97;3501:36;34771:23:172;34885:11;:9;:11::i;:::-;34872:24;;34690:213;;;:::o;4961:384:203:-;5060:7;5137:16;:24;;;5179:16;:26;;;5223:16;:41;;;5282:16;:32;;;5109:219;;;;;;;;;;15539:25:383;;;15595:2;15580:18;;15573:34;;;;15638:2;15623:18;;15616:34;15681:2;15666:18;;15659:34;15526:3;15511:19;;15308:391;5109:219:203;;;;;;;;;;;;;5086:252;;;;;;5079:259;;4961:384;;;:::o;1325:328:214:-;-1:-1:-1;;;;;;;;;;;;;;;;;1463:3:214;:10;1477:1;1463:15;1459:39;;1487:11;;;;;;;;;;;;;;1459:39;-1:-1:-1;1605:41:214;;;;;;;;;1623:10;;1605:41;;1575:2;1566:12;;;1605:41;;;;;;;;1325:328::o;1805:1674::-;1866:21;1900:18;1920;1940:20;1964:18;1978:3;1964:13;:18::i;:::-;1899:83;;-1:-1:-1;1899:83:214;-1:-1:-1;1899:83:214;-1:-1:-1;2009:21:214;1997:8;:33;;;;;;;;:::i;:::-;;1993:64;;2039:18;;;;;;;;;;;;;;1993:64;2099:10;;2072:23;2085:10;2072;:23;:::i;:::-;:37;2068:72;;2118:22;;;;;;;;;;;;;;2068:72;2550:30;;;1150:2;2550:30;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2550:30:214;;;;;;;;;;;;;;-1:-1:-1;2543:37:214;-1:-1:-1;2591:17:214;2639:10;2659:681;2675:10;;2666:19;;2659:681;;;2702:18;2722;2745:150;2776:105;;;;;;;;2807:6;2794:3;:10;;;:19;;;;:::i;:::-;2776:105;;;;2871:6;2860:3;:7;;;2839:38;;;;:::i;:::-;2776:105;;2745:13;:150::i;:::-;2701:194;;;;;3100:153;;;;;;;;3147:10;3134;:23;;;;:::i;:::-;3100:153;;;;3231:6;3220:3;:7;;;3199:38;;;;:::i;:::-;3100:153;;;3082:4;3087:9;3082:15;;;;;;;;:::i;:::-;;;;;;;;;;:171;3268:14;3281:1;3268:14;;:::i;:::-;;-1:-1:-1;3306:23:214;3319:10;3306;:23;:::i;:::-;3296:33;;;;:::i;:::-;;;2687:653;;2659:681;;;-1:-1:-1;3440:23:214;;-1:-1:-1;3447:4:214;;1805:1674;-1:-1:-1;;;1805:1674:214:o;3892:393::-;3954:17;3984:18;4004;4024:20;4048:18;4062:3;4048:13;:18::i;:::-;3983:83;;-1:-1:-1;3983:83:214;-1:-1:-1;3983:83:214;-1:-1:-1;4093:21:214;4081:8;:33;;;;;;;;:::i;:::-;;4077:62;;4123:16;;;;;;;;;;;;;;4077:62;4168:23;4181:10;4168;:23;:::i;:::-;4154:10;;:37;4150:72;;4200:22;;;;;;;;;;;;;;4150:72;4240:38;4246:3;:7;;;4255:10;4267;4240:5;:38::i;41982:361:172:-;42175:12;;;;42242:18;;;42160:12;42242:18;;;:6;:18;;;;;:26;;42175:12;;;;;;;42160;42242:26;;42175:12;;42242:26;:::i;:::-;;;;-1:-1:-1;;42307:29:172;;;;;:11;13018:55:383;;;42307:29:172;;;13000:74:383;13090:18;;;13083:34;;;42307:4:172;:11;;;;12973:18:383;;42307:29:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42063:280;41982:361;;:::o;1122:588:97:-;1389:4;1383:11;1407:19;;;14565:14;14561:22;;;14548:36;14543:3;14539:46;14519:67;;1407:19;1489:22;;;1482:4;1473:14;;1460:60;1562:6;1555:4;1550:3;1546:14;1542:27;1592:1;1589;1582:12;1664:4;1661:1;1657:12;1651:4;1644:26;;1362:342;1122:588;;;;:::o;15120:5642:172:-;15338:22;15328:6;;;;;;;:32;;;;;;;;:::i;:::-;;15324:64;;15369:19;;;;;;;;;;;;;;15324:64;15479:23;15505:9;15515:15;15505:26;;;;;;;;:::i;:::-;;;;;;;;;;15479:52;;;;;;;;15505:26;;;;;;;15479:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15629:53:172;;15625:93;;15691:27;;;;;;;;;;;;;;15625:93;15998:15;;;;15977:18;9114:17:183;;16047:14:172;;;9111:32:183;9108:1;9104:40;16023:49:172;;16082:25;16110:20;:12;:18;;2582:66:183;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;16110:20:172;16082:48;;;-1:-1:-1;16477:20:172;;;:60;;-1:-1:-1;16522:15:172;:11;16536:1;16522:15;:::i;:::-;16501:17;:36;16477:60;16476:76;;;;;16543:9;16542:10;16476:76;16472:137;;;16575:23;;;;;;;;;;;;;;16472:137;16770:23;;;;;;;:47;;;;-1:-1:-1;16797:20:172;;16770:47;16766:85;;;16826:25;;;;;;;;;;;;;;16766:85;17213:14;17193:17;:34;17189:66;;;17236:19;;;;;;;;;;;;;;17189:66;17483:15;:11;17497:1;17483:15;:::i;:::-;17462:17;:36;17458:138;;17514:71;17539:6;17547:15;17564:9;17575;17514:24;:71::i;:::-;17719:9;17686:29;17702:12;17686:15;:29::i;:::-;:42;17682:76;;17737:21;;;;;;;;;;;;;;17682:76;17991:21;18015:38;18037:15;18015:21;:38::i;:::-;17991:62;-1:-1:-1;18225:22:172;:18;:22;;18203:16;;;:46;18199:78;;18258:19;;;;;;;;;;;;;;18199:78;18986:19;:15;:19;18959:22;:18;:22;:48;;;;:::i;:::-;18938:69;;:18;:12;:16;;6649:9:184;6529:145;18938:18:172;:69;;;18934:424;;;19132:22;19194:15;19208:1;19194:11;:15;:::i;:::-;19173:17;:36;:88;;19240:19;:15;:19;19173:88;;;19212:25;:15;:19;;19236:1;19212:25;:::i;:::-;19132:129;-1:-1:-1;19304:42:172;19132:129;19304:18;:22;;:42;:::i;:::-;19275:72;;19009:349;18934:424;19459:15;1528:4:184;1524:20;;;19527:15:172;1521:36:184;19829:14:172;5875:20:184;;;5928:3;5924:19;;;5949:34;5945:56;;5921:81;5915:4;5908:95;6046:4;6030:21;;19459:86:172;;-1:-1:-1;19829:14:172;19910:17;;;;:6;:17;;;;;;19829:67;;-1:-1:-1;19910:17:172;;19906:50;;;19936:20;;;;;;;;;;;;;;19906:50;19986:4;19966:6;:17;19973:9;19966:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;20034:9;20062:366;;;;;;;;20110:15;20062:366;;;;;;20226:1;20062:366;;;;;;20256:10;20062:366;;;;;;20298:9;20062:366;;;;;;20333:6;20062:366;;;;20367:12;20062:366;;;;;;20404:9;20062:366;;;;;20034:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20507:8;:25;20516:15;20507:25;;;;;;;;;;;20557:1;20538:9;:16;;;;:20;;;;:::i;:::-;20507:52;;;;;;;-1:-1:-1;20507:52:172;;;;;;;;20599:34;;;;;;;;:12;:4;:12;;;;20620:9;;20599:34;;;;;-1:-1:-1;20599:34:172;;;;;20620:9;20599:12;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20714:41:172;;20744:10;;-1:-1:-1;20736:6:172;;-1:-1:-1;20719:15:172;;-1:-1:-1;20714:41:172;;;;;15229:5533;;;;;;;15120:5642;;;;:::o;7165:2903::-;7855:11;;;;;;;7851:44;;;7875:20;;;;;;;;;;;;;;7851:44;7985:40;;;;;;8015:9;7636:23:383;7985:40:172;;;7618:42:383;7947:9:172;;;;7985:29;:21;:29;;;;7591:18:383;;7985:40:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7946:79;;-1:-1:-1;7946:79:172;-1:-1:-1;7946:79:172;8122:57;;8159:20;;;;;;;;;;;;;;8122:57;8252:58;;;;;;;;;;;;;;;;;8231:18;:79;;;;;;;8927:14;8943:4;8924:24;8914:195;;9049:10;9043:4;9036:24;9090:4;9084;9077:18;8914:195;9306:15;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;23800:4:172;3514:22:97;3501:36;9287:34:172;9283:79;;9330:32;;;;;14565:14:97;14561:22;;;14548:36;14543:3;14539:46;14519:67;;34218:4:172;3514:22:97;3501:36;9330:32:172;;;2195:25:383;2168:18;;9330:32:172;;;;;;;;9283:79;9431:370;;;;;;;;9472:16;9431:370;;;-1:-1:-1;9431:370:172;;;;;;14561:22:97;14565:14;14561:22;;;14548:36;14543:3;14539:46;14519:67;;1993:36;;1989:2;1985:45;;;9431:370:172;;;;;;9602:9;9431:370;;;;;;;;;;34218:4;3514:22:97;;;3501:36;9431:370:172;;;;;;2943:1;9431:370;;;;;;9768:15;9431:370;;;;;;;;9403:9;:408;;;;;;;;;;;;;;;;;;;;;;9431:370;9403:408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9862:18;;;;;;;;9920:34;;;;;;;:4;:12;;;;;;9602:9;9403:408;9920:34;;;;-1:-1:-1;9920:34:172;;;;;9602:9;9920:12;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10010:9:172;:51;;;;10044:15;10010:51;;;;;-1:-1:-1;;;;;7165:2903:172:o;11843:3927:98:-;12373:34;12370:41;-1:-1:-1;12367:1:98;12363:49;12466:9;;;12446:18;12443:33;12440:1;12436:41;12430:48;12524:9;;;12512:10;12509:25;12506:1;12502:33;12496:40;12578:9;;;12570:6;12567:21;12564:1;12560:29;12554:36;12630:9;;;12624:4;12621:19;12618:1;12614:27;12608:34;11891:8;12739:9;;12729:135;;12781:10;12775:4;12768:24;12845:4;12839;12832:18;12729:135;13016:66;12962:34;12951:9;;;12947:50;12941:4;12937:61;12932:151;12925:159;13210:9;;;13205:3;13201:19;;;14173:31;14169:39;;14272:9;;13660:2;14264:18;;;14230:32;14226:57;14348:9;;14340:18;;14305:33;14301:58;14424:9;;14416:18;;14381:33;14377:58;14500:9;;14492:18;;14457:33;14453:58;14575:9;;14567:18;;14533:32;14529:57;14648:9;;14640:18;;14608:30;14604:55;13672:31;13668:59;;13664:67;;13656:76;;13606:32;13602:131;13598:139;;13590:148;;13540:32;13536:203;13532:211;;13524:220;;13430:349;;13809:9;;13801:18;;13797:57;;13884:9;;13876:18;;;13872:57;;13951:9;;;13947:55;;15131:10;15261:43;15257:51;15499:11;;;15426:71;15422:89;15418:97;15595:72;15591:80;15747:3;15743:11;;11843:3927::o;5293:468::-;5354:9;5574:16;5568:23;;5586:3;5559:33;5552:41;5545:49;;5535:173;;5627:10;5621:4;5614:24;5689:4;5683;5676:18;5535:173;-1:-1:-1;5737:3:98;5730:11;;;;5726:19;;5293:468::o;2809:424::-;2870:9;3063:1;3059;3055:6;3051:14;3048:1;3045:21;3042:1;3038:29;3035:145;;;3099:10;3093:4;3086:24;3161:4;3155;3148:18;3035:145;-1:-1:-1;3213:3:98;3202:9;;3198:19;;2809:424::o;8260:3448::-;8309:8;8504:21;8499:1;:26;8495:40;;8260:3448;;;:::o;8495:40::-;8841:21;8838:1;8834:29;8824:164;;8900:10;8894:4;8887:24;8965:4;8959;8952:18;8824:164;9280:7;9274:2;9269:7;;;9268:19;;-1:-1:-1;9551:8:98;9619:2;9575:29;9564:7;;;9563:41;9607:7;9563:51;9562:59;;9647:29;9643:33;;9639:37;;;10328:35;;;10383:5;;9959:2;10382:13;;;10399:32;10381:50;10451:5;;10450:13;;10449:51;;10520:5;;10519:13;;10536:34;10518:52;10590:5;;10589:13;;10588:53;;10661:5;;10660:13;;10677:35;10659:53;9965:32;9898:31;9894:35;;9949:5;;9948:13;;9947:50;;;10022:5;;;:40;;10082:5;10081:13;;;10098:35;10080:53;10151:5;;;10160:40;10151:50;11079:10;11607:49;11594:62;11669:3;:7;;;;11593:84;;;;;;-1:-1:-1;;8260:3448:98:o;7938:186::-;7997:6;8081:36;2458:4;8100:1;8089:8;8095:1;8089:5;:8::i;:::-;:12;;;;:::i;:::-;8088:28;;;;:::i;:::-;8081:6;:36::i;:::-;8074:43;;7938:186;;;;;:::o;10320:4442:172:-;10603:22;10593:6;;;;;;;:32;;;;;;;;:::i;:::-;;10589:64;;10634:19;;;;;;;;;;;;;;10589:64;10744:24;10771:9;10781:11;10771:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;10877:15;;;;10771:22;;-1:-1:-1;10877:15:172;;;9114:17:183;;9111:32;;9108:1;9104:40;10949:44:172;-1:-1:-1;11128:18:172;:14;11145:1;11128:18;:::i;:::-;11109:15;:7;:13;;2582:66:183;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;11109:15:172;:37;;;11105:65;;11155:15;;;;;;;;;;;;;;11105:65;11246:19;11275:27;11316:9;11312:1343;;;12047:28;12064:11;12047:14;:28;:::i;:::-;12041:1;:35;;12015:22;:7;:20;;;:22::i;:::-;:62;;;;;;:::i;:::-;12014:69;:211;;12138:81;12171:19;12189:1;12171:13;;;:19;:::i;:::-;12193:18;;;;;12138;:81::i;:::-;:87;;;12014:211;;;12102:17;12014:211;11998:227;;12318:6;12306:18;;11312:1343;;;12525:12;;;;;-1:-1:-1;12563:81:172;12596:19;:13;;;12614:1;12596:19;:::i;12563:81::-;12551:93;;11312:1343;13051:1;13028:13;:24;;13023:1;13008:10;;12998:21;;;;;;;:::i;:::-;;;;;;;;:26;;:54;12994:84;;13061:17;;;;;;;;;;;;;;12994:84;13149:9;13161:30;13179:11;13161:17;:30::i;:::-;13149:42;;14164:14;14224:21;:9;:15;;;6649:9:184;6529:145;14224:21:172;14181:39;;;;;:2;:7;;;;;:39;;14189:10;;;;14201:6;;;;14209:4;;14181:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14299:18;;;;14181:64;;;-1:-1:-1;14255:20:172;;14329:1;;14299:26;;:18;;2582:66:183;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;14299:26:172;14279:17;:9;:15;;2582:66:183;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;14279:17:172;:46;;;;:::i;:::-;14278:52;;;;:::i;:::-;:57;;;;-1:-1:-1;14349:28:172;;;;;14345:52;;14386:11;;;;;;;;;;;;;;14345:52;14491:18;;;;;:32;:18;:32;14487:60;;14532:15;;;;;;;;;;;;;;14487:60;-1:-1:-1;;14724:31:172;;;;14745:10;14724:31;;;;;;-1:-1:-1;;;;;;;;;;;10320:4442:172:o;46251:3468::-;46355:20;46377:21;46400:20;46422:21;46496:16;46515:6;46496:25;;46531:23;46557:9;46567:8;46557:19;;;;;;;;:::i;:::-;;;;;;;;;46699:14;46557:19;;;;;46699:14;;;;46557:19;;-1:-1:-1;46725:11:172;;46699:22;;:14;;2582:66:183;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;46699:22:172;:37;;;46695:67;;46745:17;;;;;;;;;;;;;;46695:67;47113:20;47177:5;47192:571;47215:14;;;;47241:11;;47215:22;;:14;;2582:66:183;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;47215:22:172;47200:37;;;;;47199:53;47192:571;;;47290:17;;;;47633:15;:11;47290:17;47633:15;:::i;:::-;47617:12;:31;47613:58;;47666:5;47650:21;;47613:58;47694:9;47704:11;47694:22;;;;;;;;:::i;:::-;;;;;;;;;;;47686:30;;47741:11;47730:22;;47254:509;47192:571;;;48076:22;;;;;48100:14;;;;48076:22;;;;;48100:14;48031:20;48100:14;48142:45;;:26;:20;:11;:18;;4530:1:183;4526:17;;4405:154;48142:20:172;:24;;6649:9:184;6529:145;48142:26:172;:45;;;48125:62;;48682:9;48678:1035;;;49021:1;48994:24;:9;:22;;;:24::i;:::-;:28;;;48990:349;;;49042:26;49071:70;49104:19;49122:1;49104:13;;;:19;:::i;:::-;49126:8;49136:4;49071:18;:70::i;:::-;49193:14;;;;49209:17;;;;;49193:14;;-1:-1:-1;49209:17:172;;;-1:-1:-1;48990:349:172;;-1:-1:-1;48990:349:172;;49294:18;:23;49266:58;;48990:349;49386:11;;;;49399:14;;;;49386:11;;-1:-1:-1;49399:14:172;;;-1:-1:-1;48678:1035:172;;;49445:26;49474:70;49507:19;:13;;;49525:1;49507:19;:::i;49474:70::-;49592:11;;;;;49605:14;;;;;49668;;;;49684:17;;;49592:11;;-1:-1:-1;49605:14:172;;;;;-1:-1:-1;49668:14:172;;-1:-1:-1;49684:17:172;;-1:-1:-1;;48678:1035:172;46449:3270;;;;;;;46251:3468;;;;;:::o;50659:616::-;50854:10;51076:16;;;:23;:192;;51206:60;;;;;;19637:25:383;;;19681:34;19751:15;;;19731:18;;;19724:43;;;;19783:18;;;19776:34;;;19846:15;;;19826:18;;;19819:43;19609:19;;51206:60:172;;;;;;;;;;;;51196:71;;;;;;51076:192;;;51145:9;51156:12;51134:35;;;;;;;;20106:25:383;;;20179:34;20167:47;20162:2;20147:18;;20140:75;20094:2;20079:18;;19873:348;51134:35:172;;;;;;;;;;;;;51124:46;;;;;;51068:200;50659:616;-1:-1:-1;;;;;50659:616:172:o;5741:336:183:-;5823:19;5854:11;5868:16;5874:9;2582:66;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;5868:16;5854:30;;;;5949:3;5938:9;5934:19;6058:1;6047:9;6043:17;6038:1;6034;6023:9;6019:17;6015:25;6003:9;5992;5988:25;5985:56;5981:80;5966:95;;;5903:168;5741:336;;;;:::o;5074:3092:214:-;5163:15;5180;5197:17;5516:3;:10;;;5530:1;5516:15;5512:39;;5540:11;;;;;;;;;;;;;;5512:39;5582:7;;;;5664:10;;5562:17;5656:19;5709:4;5699:14;;5695:2465;;5765:1;5768;5771:21;5757:36;;;;;;;;;;5695:2465;5824:4;5814:6;:14;5810:2350;;5930:14;5947:13;5956:4;5947:6;:13;:::i;:::-;5930:30;;5993:6;5979:3;:10;;;:20;5975:56;;6008:23;;;;;;;;;;;;;;5975:56;6153:1;6144:11;;;6138:18;6158:14;6134:39;;6205:11;;:40;;;;-1:-1:-1;6220:25:214;;;;;6205:40;6201:68;;;6254:15;;;;;;;;;;;;;;6201:68;-1:-1:-1;6292:1:214;;-1:-1:-1;6295:6:214;-1:-1:-1;6303:21:214;;-1:-1:-1;6284:41:214;;-1:-1:-1;;6284:41:214;5810:2350;6356:4;6346:6;:14;6342:1818;;6404:19;6426:13;6435:4;6426:6;:13;:::i;:::-;6404:35;;6472:11;6458:3;:10;;;:25;6454:61;;6492:23;;;;;;;;;;;;;;6454:61;6637:1;6628:11;;6622:18;6642:14;6618:39;6530:25;6689:26;;;6685:54;;6724:15;;;;;;;;;;;;;;6685:54;6869:1;6860:11;;6854:18;6836:1;6832:19;;6827:3;6823:29;6819:54;6915:2;6905:12;;6901:40;;6926:15;;;;;;;;;;;;;;6901:40;6974:20;6988:6;6974:11;:20;:::i;:::-;6960:10;;:34;6956:70;;7003:23;;;;;;;;;;;;;;6956:70;7049:15;7053:11;7049:1;:15;:::i;:::-;7041:55;-1:-1:-1;7066:6:214;-1:-1:-1;7074:21:214;;-1:-1:-1;7041:55:214;;-1:-1:-1;;;;7041:55:214;6342:1818;7127:4;7117:6;:14;7113:1047;;7230:15;7248:13;7257:4;7248:6;:13;:::i;:::-;7230:31;;7294:7;7280:3;:10;;;:21;7276:57;;7310:23;;;;;;;;;;;;;;7276:57;7356:1;;-1:-1:-1;7359:7:214;-1:-1:-1;7356:1:214;;-1:-1:-1;7348:42:214;;-1:-1:-1;;7348:42:214;7113:1047;7447:20;7470:13;7479:4;7470:6;:13;:::i;:::-;7447:36;;7516:12;7502:3;:10;;;:26;7498:62;;7537:23;;;;;;;;;;;;;;7498:62;7682:1;7673:11;;7667:18;7687:14;7663:39;7575:25;7734:26;;;7730:54;;7769:15;;;;;;;;;;;;;;7730:54;7917:1;7908:11;;7902:18;7883:1;7879:20;;7874:3;7870:30;7866:55;7964:2;7953:13;;7949:41;;7975:15;;;;;;;;;;;;;;7949:41;8023:22;8038:7;8023:12;:22;:::i;:::-;8009:10;;:36;8005:72;;8054:23;;;;;;;;;;;;;;8005:72;8100:16;8104:12;8100:1;:16;:::i;:::-;8092:57;-1:-1:-1;8118:7:214;-1:-1:-1;8127:21:214;;-1:-1:-1;8092:57:214;;-1:-1:-1;;;;8092:57:214;5074:3092;;;;;;:::o;8426:737::-;8517:17;8563:7;8553:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8553:18:214;-1:-1:-1;8546:25:214;-1:-1:-1;8581:54:214;;8613:11;8581:54;8851:11;8865:36;8894:7;8886:4;8865:36;:::i;:::-;8851:50;;8956:2;8950:4;8946:13;8981:1;8995:87;9009:7;9006:1;9003:14;8995:87;;;9067:11;;;9061:18;9047:12;;;9040:40;9032:2;9025:10;8995:87;;;9105:7;9102:1;9099:14;9096:51;;;9143:1;9133:7;9127:4;9123:18;9116:29;9096:51;;;8920:237;8426:737;;;;;;:::o;42562:1977:172:-;43314:24;43355:20;:14;;;43374:1;43355:20;:::i;:::-;43314:62;;43386:26;43415:80;43442:15;43467:10;43488:4;43415:18;:80::i;:::-;43386:109;-1:-1:-1;43505:14:172;43528:19;;;43563:9;;:61;;-1:-1:-1;43609:15:172;43623:1;43609:11;:15;:::i;:::-;43576:17;;;;43604:1;;43576:25;;:17;;2582:66:183;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;43576:25:172;:29;;;;:::i;:::-;:48;;;43563:61;43559:974;;;44102:36;;;1785:1:185;44102:36:172;;:74;;-1:-1:-1;44142:34:172;;;1879:1:185;44142:34:172;44102:74;44096:154;;44204:31;;;;;;;;2195:25:383;;;2168:18;;44204:31:172;2022:204:383;44096:154:172;43559:974;;;44270:34;;;;44266:267;;44491:31;;;;;;;;2195:25:383;;;2168:18;;44491:31:172;2022:204:383;3171:363:183;3236:21;3411:11;3425:16;3431:9;2582:66;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;3425:16;3515:1;3411:30;;;;;3506:11;3491:27;;;;3171:363;-1:-1:-1;;3171:363:183:o;45059:677:172:-;45209:27;45308:25;45336:7;:71;;45369:38;:25;;;45395:11;45369:25;:38::i;:::-;45336:71;;;45346:20;:4;:18;;;:20::i;:::-;45308:99;;45575:9;45585:6;45575:17;;;;;;;;:::i;:::-;;;;;;;;;;;45563:29;;45602:128;45609:18;;;;45637:20;;;;45609:18;;:50;45602:128;;45697:21;;45687:9;:32;;:9;;45697:21;;;45687:32;;;;;;:::i;:::-;;;;;;;;;;;45675:44;;45602:128;;;45242:494;45059:677;;;;;:::o;49973:319::-;50044:10;50067:14;50083:20;50105:14;50121:20;50157:44;50189:11;50157:31;:44::i;:::-;50066:135;;;;;;;;50219:66;50240:8;50250:11;50263:8;50273:11;50219:20;:66::i;:::-;50211:74;49973:319;-1:-1:-1;;;;;;49973:319:172:o;7608:944:183:-;7757:18;7898:20;7877:17;:9;:15;;2582:66;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;7877:17;:41;;;7873:222;;8025:10;8019:4;8012:24;8066:4;8060;8053:18;7873:222;8160:24;8174:9;8160:13;:24::i;:::-;8148:36;;8441:20;8420:17;:9;:15;;2582:66;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;8420:17;:41;;;8416:130;;8489:46;8510:24;:20;8533:1;8510:24;:::i;:::-;8489:20;;;;;:46::i;6379:710::-;6445:18;6608:14;;6639:1;6624:17;;6604:38;6445:18;6743:10;6604:38;2582:66;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;6743:10;6729:24;;6952:19;;;;7063:9;;7057:16;;6379:710;-1:-1:-1;;;6379:710:183:o;4980:313::-;5062:20;5094:11;5108:16;5114:9;2582:66;2534:20;1856:18;1853:46;-1:-1:-1;1850:1:183;1846:54;1957:22;;;1945:10;1942:38;1939:1;1935:46;1924:58;2075:22;;;2141:1;2137:17;;;2123:32;2199:1;2195:17;;;2181:32;2257:1;2253:17;;;2239:32;2315:1;2311:17;;;2297:32;2373:2;2369:18;;;2355:33;2519:36;2514:3;2510:46;2480:190;2428:260;;1628:1076;5108:16;5094:30;;;;5189:3;5178:9;5174:19;5274:1;5270;5259:9;5255:17;5251:25;5239:9;5228;5224:25;5221:56;5206:71;;;5143:144;4980:313;;;;:::o;14:347:383:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:383;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:564::-;482:6;490;498;542:9;533:7;529:23;572:3;568:2;564:12;561:32;;;589:1;586;579:12;561:32;613:3;609:2;605:12;602:32;;;630:1;627;620:12;602:32;;653:9;643:19;;713:3;702:9;698:19;685:33;741:18;733:6;730:30;727:50;;;773:1;770;763:12;727:50;812:58;862:7;853:6;842:9;838:22;812:58;:::i;:::-;366:564;;889:8;;-1:-1:-1;786:84:383;;-1:-1:-1;;;;366:564:383:o;935:248::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;-1:-1:-1;;1103:23:383;;;1173:2;1158:18;;;1145:32;;-1:-1:-1;935:248:383:o;1426:184::-;1478:77;1475:1;1468:88;1575:4;1572:1;1565:15;1599:4;1596:1;1589:15;1615:402;1764:2;1749:18;;1797:1;1786:13;;1776:201;;1833:77;1830:1;1823:88;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1776:201;1986:25;;;1615:402;:::o;3343:372::-;3476:6;3484;3492;3545:2;3533:9;3524:7;3520:23;3516:32;3513:52;;;3561:1;3558;3551:12;3513:52;-1:-1:-1;;3584:23:383;;;3654:2;3639:18;;3626:32;;-1:-1:-1;3705:2:383;3690:18;;;3677:32;;3343:372;-1:-1:-1;3343:372:383:o;3720:531::-;3762:3;3800:5;3794:12;3827:6;3822:3;3815:19;3852:1;3862:162;3876:6;3873:1;3870:13;3862:162;;;3938:4;3994:13;;;3990:22;;3984:29;3966:11;;;3962:20;;3955:59;3891:12;3862:162;;;4042:6;4039:1;4036:13;4033:87;;;4108:1;4101:4;4092:6;4087:3;4083:16;4079:27;4072:38;4033:87;-1:-1:-1;4165:2:383;4153:15;4170:66;4149:88;4140:98;;;;4240:4;4136:109;;3720:531;-1:-1:-1;;3720:531:383:o;4256:220::-;4405:2;4394:9;4387:21;4368:4;4425:45;4466:2;4455:9;4451:18;4443:6;4425:45;:::i;4761:180::-;4820:6;4873:2;4861:9;4852:7;4848:23;4844:32;4841:52;;;4889:1;4886;4879:12;4841:52;-1:-1:-1;4912:23:383;;4761:180;-1:-1:-1;4761:180:383:o;5431:154::-;5517:42;5510:5;5506:54;5499:5;5496:65;5486:93;;5575:1;5572;5565:12;5486:93;5431:154;:::o;5590:247::-;5649:6;5702:2;5690:9;5681:7;5677:23;5673:32;5670:52;;;5718:1;5715;5708:12;5670:52;5757:9;5744:23;5776:31;5801:5;5776:31;:::i;6079:160::-;6144:20;;6200:13;;6193:21;6183:32;;6173:60;;6229:1;6226;6219:12;6173:60;6079:160;;;:::o;6244:441::-;6383:6;6391;6399;6407;6460:3;6448:9;6439:7;6435:23;6431:33;6428:53;;;6477:1;6474;6467:12;6428:53;6513:9;6500:23;6490:33;;6570:2;6559:9;6555:18;6542:32;6532:42;;6621:2;6610:9;6606:18;6593:32;6583:42;;6644:35;6675:2;6664:9;6660:18;6644:35;:::i;:::-;6634:45;;6244:441;;;;;;;:::o;7671:332::-;7761:6;7814:2;7802:9;7793:7;7789:23;7785:32;7782:52;;;7830:1;7827;7820:12;7782:52;7869:9;7856:23;7919:34;7912:5;7908:46;7901:5;7898:57;7888:85;;7969:1;7966;7959:12;8881:854;8986:6;8994;9002;9010;9018;9026;9079:3;9067:9;9058:7;9054:23;9050:33;9047:53;;;9096:1;9093;9086:12;9047:53;9132:9;9119:23;9109:33;;9161:35;9192:2;9181:9;9177:18;9161:35;:::i;:::-;9151:45;;9247:2;9236:9;9232:18;9219:32;9270:18;9311:2;9303:6;9300:14;9297:34;;;9327:1;9324;9317:12;9297:34;9366:58;9416:7;9407:6;9396:9;9392:22;9366:58;:::i;:::-;9443:8;;-1:-1:-1;9340:84:383;-1:-1:-1;9531:2:383;9516:18;;9503:32;;-1:-1:-1;9547:16:383;;;9544:36;;;9576:1;9573;9566:12;9544:36;;9615:60;9667:7;9656:8;9645:9;9641:24;9615:60;:::i;:::-;8881:854;;;;-1:-1:-1;8881:854:383;;-1:-1:-1;8881:854:383;;9694:8;;8881:854;-1:-1:-1;;;8881:854:383:o;10273:435::-;10546:10;10538:6;10534:23;10523:9;10516:42;10594:6;10589:2;10578:9;10574:18;10567:34;10637:2;10632;10621:9;10617:18;10610:30;10497:4;10657:45;10698:2;10687:9;10683:18;10675:6;10657:45;:::i;10713:184::-;10765:77;10762:1;10755:88;10862:4;10859:1;10852:15;10886:4;10883:1;10876:15;10902:802;10996:6;11049:3;11037:9;11028:7;11024:23;11020:33;11017:53;;;11066:1;11063;11056:12;11017:53;11099:2;11093:9;11141:3;11133:6;11129:16;11211:6;11199:10;11196:22;11175:18;11163:10;11160:34;11157:62;11154:242;;;11252:77;11249:1;11242:88;11353:4;11350:1;11343:15;11381:4;11378:1;11371:15;11154:242;11416:10;11412:2;11405:22;;11464:9;11451:23;11443:6;11436:39;11536:2;11525:9;11521:18;11508:32;11503:2;11495:6;11491:15;11484:57;11602:2;11591:9;11587:18;11574:32;11569:2;11561:6;11557:15;11550:57;11668:2;11657:9;11653:18;11640:32;11635:2;11627:6;11623:15;11616:57;11692:6;11682:16;;;10902:802;;;;:::o;11709:271::-;11892:6;11884;11879:3;11866:33;11848:3;11918:16;;11943:13;;;11918:16;11709:271;-1:-1:-1;11709:271:383:o;11985:184::-;12037:77;12034:1;12027:88;12134:4;12131:1;12124:15;12158:4;12155:1;12148:15;12174:184;12226:77;12223:1;12216:88;12323:4;12320:1;12313:15;12347:4;12344:1;12337:15;12363:128;12403:3;12434:1;12430:6;12427:1;12424:13;12421:39;;;12440:18;;:::i;:::-;-1:-1:-1;12476:9:383;;12363:128::o;12496:195::-;12535:3;12566:66;12559:5;12556:77;12553:103;;12636:18;;:::i;:::-;-1:-1:-1;12683:1:383;12672:13;;12496:195::o;12696:125::-;12736:4;12764:1;12761;12758:8;12755:34;;;12769:18;;:::i;:::-;-1:-1:-1;12806:9:383;;12696:125::o;13338:184::-;13390:77;13387:1;13380:88;13487:4;13484:1;13477:15;13511:4;13508:1;13501:15;13527:120;13567:1;13593;13583:35;;13598:18;;:::i;:::-;-1:-1:-1;13632:9:383;;13527:120::o;13652:228::-;13692:7;13818:1;13750:66;13746:74;13743:1;13740:81;13735:1;13728:9;13721:17;13717:105;13714:131;;;13825:18;;:::i;:::-;-1:-1:-1;13865:9:383;;13652:228::o;13885:276::-;13980:6;14033:2;14021:9;14012:7;14008:23;14004:32;14001:52;;;14049:1;14046;14039:12;14001:52;14081:9;14075:16;14100:31;14125:5;14100:31;:::i;14643:184::-;14713:6;14766:2;14754:9;14745:7;14741:23;14737:32;14734:52;;;14782:1;14779;14772:12;14734:52;-1:-1:-1;14805:16:383;;14643:184;-1:-1:-1;14643:184:383:o;15704:229::-;15743:4;15772:18;15840:10;;;;15810;;15862:12;;;15859:38;;;15877:18;;:::i;:::-;15914:13;;15704:229;-1:-1:-1;;;15704:229:383:o;15938:270::-;15977:7;16009:18;16054:2;16051:1;16047:10;16084:2;16081:1;16077:10;16140:3;16136:2;16132:12;16127:3;16124:21;16117:3;16110:11;16103:19;16099:47;16096:73;;;16149:18;;:::i;:::-;16189:13;;15938:270;-1:-1:-1;;;;15938:270:383:o;16213:272::-;16319:6;16327;16380:2;16368:9;16359:7;16355:23;16351:32;16348:52;;;16396:1;16393;16386:12;16348:52;-1:-1:-1;;16419:16:383;;16475:2;16460:18;;;16454:25;16419:16;;16454:25;;-1:-1:-1;16213:272:383:o;16490:655::-;16529:7;16561:66;16653:1;16650;16646:9;16681:1;16678;16674:9;16726:1;16722:2;16718:10;16715:1;16712:17;16707:2;16703;16699:11;16695:35;16692:61;;;16733:18;;:::i;:::-;16772:66;16864:1;16861;16857:9;16911:1;16907:2;16902:11;16899:1;16895:19;16890:2;16886;16882:11;16878:37;16875:63;;;16918:18;;:::i;:::-;16964:1;16961;16957:9;16947:19;;17011:1;17007:2;17002:11;16999:1;16995:19;16990:2;16986;16982:11;16978:37;16975:63;;;17018:18;;:::i;:::-;17083:1;17079:2;17074:11;17071:1;17067:19;17062:2;17058;17054:11;17050:37;17047:63;;;17090:18;;:::i;:::-;-1:-1:-1;;;17130:9:383;;;;;16490:655;-1:-1:-1;;;16490:655:383:o;17150:308::-;17189:1;17215;17205:35;;17220:18;;:::i;:::-;17337:66;17334:1;17331:73;17262:66;17259:1;17256:73;17252:153;17249:179;;;17408:18;;:::i;:::-;-1:-1:-1;17442:10:383;;17150:308::o;17463:112::-;17495:1;17521;17511:35;;17526:18;;:::i;:::-;-1:-1:-1;17560:9:383;;17463:112::o;17580:246::-;17620:4;17649:34;17733:10;;;;17703;;17755:12;;;17752:38;;;17770:18;;:::i;17831:253::-;17871:3;17899:34;17960:2;17957:1;17953:10;17990:2;17987:1;17983:10;18021:3;18017:2;18013:12;18008:3;18005:21;18002:47;;;18029:18;;:::i;:::-;18065:13;;17831:253;-1:-1:-1;;;;17831:253:383:o;18089:325::-;18177:6;18172:3;18165:19;18229:6;18222:5;18215:4;18210:3;18206:14;18193:43;;18281:1;18274:4;18265:6;18260:3;18256:16;18252:27;18245:38;18147:3;18403:4;18333:66;18328:2;18320:6;18316:15;18312:88;18307:3;18303:98;18299:109;18292:116;;18089:325;;;;:::o;18419:502::-;18660:2;18649:9;18642:21;18623:4;18686:61;18743:2;18732:9;18728:18;18720:6;18712;18686:61;:::i;:::-;18795:9;18787:6;18783:22;18778:2;18767:9;18763:18;18756:50;18823:49;18865:6;18857;18849;18823:49;:::i;:::-;18815:57;;;18908:6;18903:2;18892:9;18888:18;18881:34;18419:502;;;;;;;;:::o;18926:195::-;18964:4;19001;18998:1;18994:12;19033:4;19030:1;19026:12;19058:3;19053;19050:12;19047:38;;;19065:18;;:::i;:::-;19102:13;;;18926:195;-1:-1:-1;;;18926:195:383:o;19126:157::-;19156:1;19190:4;19187:1;19183:12;19214:3;19204:37;;19221:18;;:::i;:::-;19273:3;19266:4;19263:1;19259:12;19255:22;19250:27;;;19126:157;;;;:::o","linkReferences":{},"immutableReferences":{"100429":[{"start":1999,"length":32},{"start":16585,"length":32}],"100432":[{"start":3015,"length":32},{"start":7818,"length":32},{"start":7952,"length":32},{"start":11605,"length":32},{"start":16128,"length":32},{"start":16427,"length":32}],"100435":[{"start":2848,"length":32},{"start":9136,"length":32},{"start":11404,"length":32},{"start":11698,"length":32},{"start":12082,"length":32},{"start":16394,"length":32},{"start":17593,"length":32},{"start":17850,"length":32},{"start":18063,"length":32},{"start":20326,"length":32},{"start":20882,"length":32}],"100439":[{"start":2797,"length":32},{"start":4060,"length":32},{"start":7546,"length":32},{"start":7612,"length":32},{"start":11843,"length":32},{"start":11988,"length":32},{"start":12233,"length":32}],"100443":[{"start":1226,"length":32},{"start":8625,"length":32},{"start":16823,"length":32}],"100447":[{"start":2313,"length":32},{"start":9591,"length":32},{"start":13435,"length":32}],"100451":[{"start":1341,"length":32},{"start":6600,"length":32},{"start":10664,"length":32},{"start":13154,"length":32},{"start":14526,"length":32}],"100455":[{"start":1628,"length":32},{"start":6150,"length":32},{"start":13500,"length":32}],"100458":[{"start":2714,"length":32},{"start":9448,"length":32}],"100462":[{"start":1796,"length":32},{"start":11945,"length":32},{"start":12135,"length":32},{"start":12177,"length":32}],"102932":[{"start":2254,"length":32},{"start":6870,"length":32},{"start":7076,"length":32},{"start":8310,"length":32}],"102935":[{"start":1411,"length":32},{"start":6933,"length":32},{"start":8373,"length":32}]}},"methodIdentifiers":{"absolutePrestate()":"8d450a95","addLocalData(uint256,uint256,uint256)":"f8f43ff6","anchorStateRegistry()":"5c0cba33","attack(bytes32,uint256,bytes32)":"472777c6","challengeRootL2Block((bytes32,bytes32,bytes32,bytes32),bytes)":"01935130","challenger()":"534db0e2","claimCredit(address)":"60e27464","claimData(uint256)":"c6f0308c","claimDataLen()":"8980e0cc","claims(bytes32)":"eff0f592","clockExtension()":"6b6716c0","createdAt()":"cf09e0d0","credit(address)":"d5d44d80","defend(bytes32,uint256,bytes32)":"7b0f0adc","extraData()":"609d3334","gameCreator()":"37b1b229","gameData()":"fa24f743","gameType()":"bbdc02db","getChallengerDuration(uint256)":"bd8da956","getNumToResolve(uint256)":"5a5fa2d9","getRequiredBond(uint128)":"c395e1ca","initialize()":"8129fc1c","l1Head()":"6361506d","l2BlockNumber()":"8b85902b","l2BlockNumberChallenged()":"3e3ac912","l2BlockNumberChallenger()":"30dbe570","l2ChainId()":"d6ae3cd5","maxClockDuration()":"dabd396d","maxGameDepth()":"fa315aa9","move(bytes32,uint256,bytes32,bool)":"6f034409","proposer()":"a8e4fb90","resolutionCheckpoints(uint256)":"a445ece6","resolve()":"2810e1d6","resolveClaim(uint256,uint256)":"03c2924d","resolvedAt()":"19effeb4","resolvedSubgames(uint256)":"fe2bbeb2","rootClaim()":"bcef3b55","splitDepth()":"ec5e6308","startingBlockNumber()":"70872aa5","startingOutputRoot()":"57da950e","startingRootHash()":"25fc2ace","status()":"200d2ed2","step(uint256,bool,bytes,bytes)":"d8cc1a3c","subgames(uint256,uint256)":"2ad69aeb","version()":"54fd4d50","vm()":"3a768463","weth()":"3fc8cef3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"GameType\",\"name\":\"_gameType\",\"type\":\"uint32\"},{\"internalType\":\"Claim\",\"name\":\"_absolutePrestate\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_maxGameDepth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_splitDepth\",\"type\":\"uint256\"},{\"internalType\":\"Duration\",\"name\":\"_clockExtension\",\"type\":\"uint64\"},{\"internalType\":\"Duration\",\"name\":\"_maxClockDuration\",\"type\":\"uint64\"},{\"internalType\":\"contract IBigStepper\",\"name\":\"_vm\",\"type\":\"address\"},{\"internalType\":\"contract IDelayedWETH\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"contract IAnchorStateRegistry\",\"name\":\"_anchorStateRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_l2ChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_challenger\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AnchorRootNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadAuth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlockNumberMatches\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BondTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotDefendRootClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimAboveSplit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimAlreadyResolved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClockNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClockTimeExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContentLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicateStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyItem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameDepthExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameNotInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectBondAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClockExtension\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDataRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDisputedClaimIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidHeader\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidHeaderRLP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLocalIdent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOutputRootProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrestate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSplitDepth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2BlockNumberChallenged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxDepthTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCreditToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfOrderResolution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedList\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedRootClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidStep\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"parentIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"Claim\",\"name\":\"claim\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"name\":\"Move\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum GameStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"Resolved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"absolutePrestate\",\"outputs\":[{\"internalType\":\"Claim\",\"name\":\"absolutePrestate_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ident\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_execLeafIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_partOffset\",\"type\":\"uint256\"}],\"name\":\"addLocalData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"anchorStateRegistry\",\"outputs\":[{\"internalType\":\"contract IAnchorStateRegistry\",\"name\":\"registry_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Claim\",\"name\":\"_disputed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_parentIndex\",\"type\":\"uint256\"},{\"internalType\":\"Claim\",\"name\":\"_claim\",\"type\":\"bytes32\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"messagePasserStorageRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"latestBlockhash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Types.OutputRootProof\",\"name\":\"_outputRootProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_headerRLP\",\"type\":\"bytes\"}],\"name\":\"challengeRootL2Block\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"challenger_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"claimCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"parentIndex\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"counteredBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"bond\",\"type\":\"uint128\"},{\"internalType\":\"Claim\",\"name\":\"claim\",\"type\":\"bytes32\"},{\"internalType\":\"Position\",\"name\":\"position\",\"type\":\"uint128\"},{\"internalType\":\"Clock\",\"name\":\"clock\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimDataLen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Hash\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clockExtension\",\"outputs\":[{\"internalType\":\"Duration\",\"name\":\"clockExtension_\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createdAt\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"credit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Claim\",\"name\":\"_disputed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_parentIndex\",\"type\":\"uint256\"},{\"internalType\":\"Claim\",\"name\":\"_claim\",\"type\":\"bytes32\"}],\"name\":\"defend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameData\",\"outputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType_\",\"type\":\"uint32\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameType\",\"outputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType_\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimIndex\",\"type\":\"uint256\"}],\"name\":\"getChallengerDuration\",\"outputs\":[{\"internalType\":\"Duration\",\"name\":\"duration_\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimIndex\",\"type\":\"uint256\"}],\"name\":\"getNumToResolve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numRemainingChildren_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Position\",\"name\":\"_position\",\"type\":\"uint128\"}],\"name\":\"getRequiredBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requiredBond_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Head\",\"outputs\":[{\"internalType\":\"Hash\",\"name\":\"l1Head_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2BlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"l2BlockNumber_\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2BlockNumberChallenged\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2BlockNumberChallenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2ChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"l2ChainId_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxClockDuration\",\"outputs\":[{\"internalType\":\"Duration\",\"name\":\"maxClockDuration_\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGameDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxGameDepth_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Claim\",\"name\":\"_disputed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_challengeIndex\",\"type\":\"uint256\"},{\"internalType\":\"Claim\",\"name\":\"_claim\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_isAttack\",\"type\":\"bool\"}],\"name\":\"move\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"resolutionCheckpoints\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialCheckpointComplete\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"subgameIndex\",\"type\":\"uint32\"},{\"internalType\":\"Position\",\"name\":\"leftmostPosition\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"counteredBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"enum GameStatus\",\"name\":\"status_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numToResolve\",\"type\":\"uint256\"}],\"name\":\"resolveClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolvedAt\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"resolvedSubgames\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootClaim\",\"outputs\":[{\"internalType\":\"Claim\",\"name\":\"rootClaim_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"splitDepth_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startingBlockNumber_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingOutputRoot\",\"outputs\":[{\"internalType\":\"Hash\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"l2BlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingRootHash\",\"outputs\":[{\"internalType\":\"Hash\",\"name\":\"startingRootHash_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum GameStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isAttack\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_stateData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"step\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subgames\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract IBigStepper\",\"name\":\"vm_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IDelayedWETH\",\"name\":\"weth_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"UnexpectedRootClaim(bytes32)\":[{\"params\":{\"rootClaim\":\"is the claim that was unexpected.\"}}]},\"kind\":\"dev\",\"methods\":{\"addLocalData(uint256,uint256,uint256)\":{\"params\":{\"_execLeafIdx\":\"The index of the leaf claim in an execution subgame that requires the local data for a step.\",\"_ident\":\"The local identifier of the data to post.\",\"_partOffset\":\"The offset of the data to post.\"}},\"attack(bytes32,uint256,bytes32)\":{\"params\":{\"_claim\":\"The `Claim` at the relative attack position.\",\"_disputed\":\"The `Claim` being attacked.\",\"_parentIndex\":\"Index of the `Claim` to attack in the `claimData` array. This must match the `_disputed` claim.\"}},\"challengeRootL2Block((bytes32,bytes32,bytes32,bytes32),bytes)\":{\"params\":{\"_headerRLP\":\"The RLP-encoded L2 block header.\",\"_outputRootProof\":\"The output root proof.\"}},\"claimCredit(address)\":{\"params\":{\"_recipient\":\"The owner and recipient of the credit.\"}},\"constructor\":{\"params\":{\"_absolutePrestate\":\"The absolute prestate of the instruction trace.\",\"_anchorStateRegistry\":\"The contract that stores the anchor state for each game type.\",\"_challenger\":\"Address that is allowed to challenge instances of this contract.\",\"_clockExtension\":\"The clock extension to perform when the remaining duration is less than the extension.\",\"_gameType\":\"The type ID of the game.\",\"_l2ChainId\":\"Chain ID of the L2 network this contract argues about.\",\"_maxClockDuration\":\"The maximum amount of time that may accumulate on a team's chess clock.\",\"_maxGameDepth\":\"The maximum depth of bisection.\",\"_proposer\":\"Address that is allowed to create instances of this contract.\",\"_splitDepth\":\"The final depth of the output bisection portion of the game.\",\"_vm\":\"An onchain VM that performs single instruction steps on an FPP trace.\",\"_weth\":\"WETH contract for holding ETH.\"}},\"defend(bytes32,uint256,bytes32)\":{\"params\":{\"_claim\":\"The `Claim` at the relative defense position.\",\"_parentIndex\":\"Index of the claim to defend in the `claimData` array. This must match the `_disputed` claim.\"}},\"extraData()\":{\"details\":\"`clones-with-immutable-args` argument #4\",\"returns\":{\"extraData_\":\"Any extra data supplied to the dispute game contract by the creator.\"}},\"gameCreator()\":{\"details\":\"`clones-with-immutable-args` argument #1\",\"returns\":{\"creator_\":\"The creator of the dispute game.\"}},\"gameData()\":{\"returns\":{\"extraData_\":\"Any extra data supplied to the dispute game contract by the creator.\",\"gameType_\":\"The type of proof system being used.\",\"rootClaim_\":\"The root claim of the DisputeGame.\"}},\"gameType()\":{\"details\":\"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.\",\"returns\":{\"gameType_\":\"The type of proof system being used.\"}},\"getChallengerDuration(uint256)\":{\"params\":{\"_claimIndex\":\"The index of the subgame root claim.\"},\"returns\":{\"duration_\":\"The time elapsed on the potential challenger to `_claimIndex`'s chess clock.\"}},\"getNumToResolve(uint256)\":{\"params\":{\"_claimIndex\":\"The subgame root claim's index within `claimData`.\"},\"returns\":{\"numRemainingChildren_\":\"The number of children that still need to be checked to resolve the subgame.\"}},\"getRequiredBond(uint128)\":{\"params\":{\"_position\":\"The position of the bonded interaction.\"},\"returns\":{\"requiredBond_\":\"The required ETH bond for the given move, in wei.\"}},\"initialize()\":{\"details\":\"This function may only be called once.\"},\"l1Head()\":{\"details\":\"`clones-with-immutable-args` argument #3\",\"returns\":{\"l1Head_\":\"The parent hash of the L1 block when the dispute game was created.\"}},\"move(bytes32,uint256,bytes32,bool)\":{\"params\":{\"_challengeIndex\":\"The index of the claim being moved against. This must match the `_disputed` claim.\",\"_claim\":\"The claim at the next logical position in the game.\",\"_isAttack\":\"Whether or not the move is an attack or defense.\"}},\"resolve()\":{\"details\":\"May only be called if the `status` is `IN_PROGRESS`.\",\"returns\":{\"status_\":\"The status of the game after resolution.\"}},\"resolveClaim(uint256,uint256)\":{\"details\":\"This function must be called bottom-up in the DAG      A subgame is a tree of claims that has a maximum depth of 1.      A subgame root claims is valid if, and only if, all of its child claims are invalid.      At the deepest level in the DAG, a claim is invalid if there's a successful step against it.\",\"params\":{\"_claimIndex\":\"The index of the subgame root claim to resolve.\",\"_numToResolve\":\"The number of subgames to resolve in this call. If the input is `0`, and this is the first                      page, this function will attempt to check all of the subgame's children at once.\"}},\"rootClaim()\":{\"details\":\"`clones-with-immutable-args` argument #2\",\"returns\":{\"rootClaim_\":\"The root claim of the DisputeGame.\"}},\"step(uint256,bool,bytes,bytes)\":{\"details\":\"This function should point to a fault proof processor in order to execute      a step in the fault proof program on-chain. The interface of the fault proof      processor contract should adhere to the `IBigStepper` interface.\",\"params\":{\"_claimIndex\":\"The index of the challenged claim within `claimData`.\",\"_isAttack\":\"Whether or not the step is an attack or a defense.\",\"_proof\":\"Proof to access memory nodes in the VM's merkle state tree.\",\"_stateData\":\"The stateData of the step is the preimage of the claim at the given        prestate, which is at `_stateIndex` if the move is an attack and `_claimIndex` if        the move is a defense. If the step is an attack on the first instruction, it is        the absolute prestate of the fault proof VM.\"}}},\"title\":\"PermissionedDisputeGame\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"notice\":\"Thrown when a dispute game has already been initialized.\"}],\"AnchorRootNotFound()\":[{\"notice\":\"Thrown when an anchor root is not found for a given game type.\"}],\"BadAuth()\":[{\"notice\":\"Thrown when an unauthorized address attempts to interact with the game.\"}],\"BlockNumberMatches()\":[{\"notice\":\"Thrown when there is a match between the block number in the output root proof and the block number         claimed in the dispute game.\"}],\"BondTransferFailed()\":[{\"notice\":\"Thrown when the transfer of credit to a recipient account reverts.\"}],\"CannotDefendRootClaim()\":[{\"notice\":\"Thrown when a defense against the root claim is attempted.\"}],\"ClaimAboveSplit()\":[{\"notice\":\"Thrown when a parent output root is attempted to be found on a claim that is in         the output root portion of the tree.\"}],\"ClaimAlreadyExists()\":[{\"notice\":\"Thrown when a claim is attempting to be made that already exists.\"}],\"ClaimAlreadyResolved()\":[{\"notice\":\"Thrown when resolving a claim that has already been resolved.\"}],\"ClockNotExpired()\":[{\"notice\":\"Thrown when the game is attempted to be resolved too early.\"}],\"ClockTimeExceeded()\":[{\"notice\":\"Thrown when a move is attempted to be made after the clock has timed out.\"}],\"ContentLengthMismatch()\":[{\"notice\":\"The length of the content must be greater than the RLP item length\"}],\"DuplicateStep()\":[{\"notice\":\"Thrown when trying to step against a claim for a second time, after it has already been countered with         an instruction step.\"}],\"EmptyItem()\":[{\"notice\":\"The length of an RLP item must be greater than zero to be decodable\"}],\"GameDepthExceeded()\":[{\"notice\":\"Thrown when a move is attempted to be made at or greater than the max depth of the game.\"}],\"GameNotInProgress()\":[{\"notice\":\"Thrown when an action that requires the game to be `IN_PROGRESS` is invoked when         the game is not in progress.\"}],\"IncorrectBondAmount()\":[{\"notice\":\"Thrown when a supplied bond is not equal to the required bond amount to cover the cost of the interaction.\"}],\"InvalidClockExtension()\":[{\"notice\":\"Thrown on deployment if the max clock duration is less than or equal to the clock extension.\"}],\"InvalidDataRemainder()\":[{\"notice\":\"The RLP item has an invalid data remainder\"}],\"InvalidDisputedClaimIndex()\":[{\"notice\":\"Thrown when a disputed claim does not match its index in the game.\"}],\"InvalidHeader()\":[{\"notice\":\"Invalid RLP header for RLP item\"}],\"InvalidHeaderRLP()\":[{\"notice\":\"Thrown when header RLP is invalid with respect to the block hash in an output root proof.\"}],\"InvalidLocalIdent()\":[{\"notice\":\"Thrown when an invalid local identifier is passed to the `addLocalData` function.\"}],\"InvalidOutputRootProof()\":[{\"notice\":\"Thrown when an output root proof is invalid.\"}],\"InvalidParent()\":[{\"notice\":\"Thrown when a step is attempted above the maximum game depth.\"}],\"InvalidPrestate()\":[{\"notice\":\"Thrown when an invalid prestate is supplied to `step`.\"}],\"InvalidSplitDepth()\":[{\"notice\":\"Thrown on deployment if the split depth is greater than or equal to the max         depth of the game.\"}],\"L2BlockNumberChallenged()\":[{\"notice\":\"Thrown when the L2 block number claim has already been challenged.\"}],\"MaxDepthTooLarge()\":[{\"notice\":\"Thrown on deployment if the max depth is greater than `LibPosition.`\"}],\"NoCreditToClaim()\":[{\"notice\":\"Thrown when a credit claim is attempted for a value of 0.\"}],\"OutOfOrderResolution()\":[{\"notice\":\"Thrown when resolving claims out of order.\"}],\"UnexpectedList()\":[{\"notice\":\"Decoded item type for bytes is not a string item\"}],\"UnexpectedRootClaim(bytes32)\":[{\"notice\":\"Thrown when the root claim has an unexpected VM status.         Some games can only start with a root-claim with a specific status.\"}],\"UnexpectedString()\":[{\"notice\":\"The decoded item type for list is not a list item\"}],\"ValidStep()\":[{\"notice\":\"Thrown when a step is made that computes the expected post state correctly.\"}]},\"events\":{\"Move(uint256,bytes32,address)\":{\"notice\":\"Emitted when a new claim is added to the DAG by `claimant`\"},\"Resolved(uint8)\":{\"notice\":\"Emitted when the game is resolved.\"}},\"kind\":\"user\",\"methods\":{\"absolutePrestate()\":{\"notice\":\"Returns the absolute prestate of the instruction trace.\"},\"addLocalData(uint256,uint256,uint256)\":{\"notice\":\"Posts the requested local data to the VM's `PreimageOralce`.\"},\"anchorStateRegistry()\":{\"notice\":\"Returns the anchor state registry contract.\"},\"attack(bytes32,uint256,bytes32)\":{\"notice\":\"Attack a disagreed upon `Claim`.\"},\"challengeRootL2Block((bytes32,bytes32,bytes32,bytes32),bytes)\":{\"notice\":\"Challenges the root L2 block number by providing the preimage of the output root and the L2 block header         and showing that the committed L2 block number is incorrect relative to the claimed L2 block number.\"},\"challenger()\":{\"notice\":\"Returns the challenger address.\"},\"claimCredit(address)\":{\"notice\":\"Claim the credit belonging to the recipient address.\"},\"claimData(uint256)\":{\"notice\":\"An append-only array of all claims made during the dispute game.\"},\"claimDataLen()\":{\"notice\":\"Returns the length of the `claimData` array.\"},\"claims(bytes32)\":{\"notice\":\"A mapping to allow for constant-time lookups of existing claims.\"},\"clockExtension()\":{\"notice\":\"Returns the clock extension constant.\"},\"createdAt()\":{\"notice\":\"The starting timestamp of the game\"},\"credit(address)\":{\"notice\":\"Credited balances for winning participants.\"},\"defend(bytes32,uint256,bytes32)\":{\"notice\":\"Defend an agreed upon `Claim`._disputed The `Claim` being defended.\"},\"extraData()\":{\"notice\":\"Getter for the extra data.\"},\"gameCreator()\":{\"notice\":\"Getter for the creator of the dispute game.\"},\"gameData()\":{\"notice\":\"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation.\"},\"gameType()\":{\"notice\":\"Getter for the game type.\"},\"getChallengerDuration(uint256)\":{\"notice\":\"Returns the amount of time elapsed on the potential challenger to `_claimIndex`'s chess clock. Maxes         out at `MAX_CLOCK_DURATION`.\"},\"getNumToResolve(uint256)\":{\"notice\":\"Returns the number of children that still need to be resolved in order to fully resolve a subgame rooted         at `_claimIndex`.\"},\"getRequiredBond(uint128)\":{\"notice\":\"Returns the required bond for a given move kind.\"},\"initialize()\":{\"notice\":\"Initializes the contract.\"},\"l1Head()\":{\"notice\":\"Getter for the parent hash of the L1 block when the dispute game was created.\"},\"l2BlockNumber()\":{\"notice\":\"The l2BlockNumber of the disputed output root in the `L2OutputOracle`.\"},\"l2BlockNumberChallenged()\":{\"notice\":\"Flag for whether or not the L2 block number claim has been invalidated via `challengeRootL2Block`.\"},\"l2BlockNumberChallenger()\":{\"notice\":\"The challenger of the L2 block number claim. Should always be `address(0)` if `l2BlockNumberChallenged`         is `false`. Should be the address of the challenger if `l2BlockNumberChallenged` is `true`.\"},\"l2ChainId()\":{\"notice\":\"Returns the chain ID of the L2 network this contract argues about.\"},\"maxClockDuration()\":{\"notice\":\"Returns the max clock duration.\"},\"maxGameDepth()\":{\"notice\":\"Returns the max game depth.\"},\"move(bytes32,uint256,bytes32,bool)\":{\"notice\":\"Generic move function, used for both `attack` and `defend` moves._disputed The disputed `Claim`.\"},\"proposer()\":{\"notice\":\"Returns the proposer address.\"},\"resolutionCheckpoints(uint256)\":{\"notice\":\"A mapping of claim indices to resolution checkpoints.\"},\"resolve()\":{\"notice\":\"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties.\"},\"resolveClaim(uint256,uint256)\":{\"notice\":\"Resolves the subgame rooted at the given claim index. `_numToResolve` specifies how many children of         the subgame will be checked in this call. If `_numToResolve` is less than the number of children, an         internal cursor will be updated and this function may be called again to complete resolution of the         subgame.\"},\"resolvedAt()\":{\"notice\":\"The timestamp of the game's global resolution.\"},\"resolvedSubgames(uint256)\":{\"notice\":\"A mapping of resolved subgames rooted at a claim index.\"},\"rootClaim()\":{\"notice\":\"Getter for the root claim.\"},\"splitDepth()\":{\"notice\":\"Returns the split depth.\"},\"startingBlockNumber()\":{\"notice\":\"Only the starting block number of the game.\"},\"startingOutputRoot()\":{\"notice\":\"The latest finalized output root, serving as the anchor for output bisection.\"},\"startingRootHash()\":{\"notice\":\"Only the starting output root of the game.\"},\"status()\":{\"notice\":\"Returns the current status of the game.\"},\"step(uint256,bool,bytes,bytes)\":{\"notice\":\"Perform an instruction step via an on-chain fault proof processor.\"},\"subgames(uint256,uint256)\":{\"notice\":\"A mapping of subgames rooted at a claim index to other claim indices in the subgame.\"},\"version()\":{\"notice\":\"Semantic version.\"},\"vm()\":{\"notice\":\"Returns the address of the VM.\"},\"weth()\":{\"notice\":\"Returns the WETH contract for holding ETH.\"}},\"notice\":\"PermissionedDisputeGame is a contract that inherits from `FaultDisputeGame`, and contains two roles:         - The `challenger` role, which is allowed to challenge a dispute.         - The `proposer` role, which is allowed to create proposals and participate in their game.         This contract exists as a way for networks to support the fault proof iteration of the OptimismPortal         contract without needing to support a fully permissionless system. Permissionless systems can introduce         costs that certain networks may not wish to support. This contract can also be used as a fallback mechanism         in case of a failure in the permissionless fault proof system in the stage one release.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dispute/PermissionedDisputeGame.sol\":\"PermissionedDisputeGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solady/src/utils/Clone.sol\":{\"keccak256\":\"0xb408dc90294bacd394e59c83619e7dc76f45c83ad6f8e923eb07d3a5bab89f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3abeb55ad062c4b29b5b5edab6167de36615c51621ef71ef3ddfd9f6735a93b\",\"dweb:/ipfs/Qmboh4zX6ZgFVhetUhZGJ14kKXiaGeB9bW3Vseg2MLMGHW\"]},\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260\",\"dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u\"]},\"src/cannon/interfaces/IPreimageOracle.sol\":{\"keccak256\":\"0x7bda0156571b468cf0e22321945655f2dacd7082f440f742aa4612b36b388a9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ba53777c65987bc20faa7731476c779e7794a58bafb40191a25275a05e3f8af\",\"dweb:/ipfs/QmbxQwE2BC9aabTruDqkd2CLojwq7G9i2rkWKv46Wucae1\"]},\"src/dispute/FaultDisputeGame.sol\":{\"keccak256\":\"0x6d6f33a58945bce35acef616ca7818eecc4c209b7bb6a4467d132f391dd9c243\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63028aa02ba4a0bca6241f3fb88c4fca1a43a497394e9c5473f3ca7634c4f1a7\",\"dweb:/ipfs/QmRqPjz7mGekYujbuTqZumT2gCz4VBGuzdqKooS1vAamdY\"]},\"src/dispute/PermissionedDisputeGame.sol\":{\"keccak256\":\"0x25816eacfe346264a7636be1c798265918c7639accbcd15ce511390a63237be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcc8b98dd6abb3574dcd8b1558b880fd1402c4cf51c68fac9cb541345f703afa\",\"dweb:/ipfs/QmTUfrgFA3vNpCfXbyTPswLhw6h2TWuVEqW7QyxqYmZAyF\"]},\"src/dispute/interfaces/IAnchorStateRegistry.sol\":{\"keccak256\":\"0x1408733471ae00d5f1328e0138084d31eb8e1f2606d526567f2a5fd82c18425b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e854df5ba5142b181c0d9f5e86c0176a41ee6201eb9e96c22a523926dd0d76f8\",\"dweb:/ipfs/QmcSP8M3SgVMAxkWF18ybbg1TdGRL8cooTSeA41Amvs9BD\"]},\"src/dispute/interfaces/IBigStepper.sol\":{\"keccak256\":\"0xc92ee3069677b903826c83d5b4e46e3be462f9ccf1d95e72a12b1052e3451f0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f93692bd3c8d9533ab8024ce2df6d880328826d1a92fdb9cf45301e2d0c65884\",\"dweb:/ipfs/QmUcmbjTw9gnCUNasgmQjVbSgcCPKZ1FQyA31dH4k5Nc75\"]},\"src/dispute/interfaces/IDelayedWETH.sol\":{\"keccak256\":\"0x0bb035e9bbb411696841ea292eeed6d4463c3c3eee7d6c5d8e38a101e8a4ff04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0477cf2c137392d35081f23bfd7f3565881767dcb1489a62e7e80b3c178cfce8\",\"dweb:/ipfs/QmTjALjrHg5rvhjfCKPmXLTgkMNneECWaqoarunSoVS37G\"]},\"src/dispute/interfaces/IDisputeGame.sol\":{\"keccak256\":\"0xa4d3617892dfee02890ea135e778ed0207aa8545c97cb2a421bae7c1a659baa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e31653e3463dbc3f3b572ca4a1198d9aadc7d8606a2b690a58e2c082a0d0090\",\"dweb:/ipfs/QmdbxJK4T5Hu652cSkxpAjYPxrK1i5ZM62oyopzmAzRn6M\"]},\"src/dispute/interfaces/IDisputeGameFactory.sol\":{\"keccak256\":\"0xcab52326762c570297a6f62addde4e4f9296bba85f2f1470f52a3c64f57c5b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40decdf2e72938f55434d300ae5d2a607f1186c8595ff1cc3ce6c3f6d312b701\",\"dweb:/ipfs/QmaQEHn1FPjvinQTNth9vEx84iDEwtg2cVk9bLpnwLyzot\"]},\"src/dispute/interfaces/IFaultDisputeGame.sol\":{\"keccak256\":\"0x9655abdda7d33496f012e5a8bf492c7733573024cc7779dc79fb4553f11e9f0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f8f0acce831c36385a4b06a5142ddfc2dbe2e7c403193df2585293ef2821c03\",\"dweb:/ipfs/QmR4XJ8rG1aiR7NgyTNbQ4swe8CFWkytudbWiKKMaqiCMH\"]},\"src/dispute/interfaces/IInitializable.sol\":{\"keccak256\":\"0xbc553af6501a972850a98fc6284943f8e95a5183a7b4f64198c16fca2338c9dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1f1c422ce4a9e72f0bbdec36434206da4af3a32d38f922acab957942e994ce5\",\"dweb:/ipfs/QmNQGWBceLxx1CKSMLfwTM584q8UCgUpF4rrFe8pdbWYtj\"]},\"src/dispute/interfaces/IWETH.sol\":{\"keccak256\":\"0x3858f6c0ce3ec7978b1ea1772484c25aec7c8c480ceaf18239f726fdd06fdd1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b72cf3bc31324409480e9ae6eb3e2654da8dff3cbf9f2136b19fe714293b3766\",\"dweb:/ipfs/QmTW3JiFUo8pYhDbthPH8ZSp5f1nmdga4CSzo4YdEzppnM\"]},\"src/dispute/lib/Errors.sol\":{\"keccak256\":\"0xb4359bd2d8b254656a69d9c236475c7e17f8547a2f72611bbac6607668cf2028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://130d50f81556fac590987c96c45c067b8ea17eb95149ab4c4ba554bb1ecb9401\",\"dweb:/ipfs/QmfSDVNskw4e9LEZzrab7TiReUgmP8kBxVnukRekwuprjQ\"]},\"src/dispute/lib/LibPosition.sol\":{\"keccak256\":\"0x7c5f19f8f54f06de2ce1c6cdcc5c7af65ac405130a4066cdaf146ca315818241\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06905e5ede94784e32748ad60557cb0b0829089d65430518e7042b80d2f64e2d\",\"dweb:/ipfs/QmeGKMmnFnow2VrRvTSPavCrToqQ3qDpEaR1tVoK6Hzg8K\"]},\"src/dispute/lib/LibUDT.sol\":{\"keccak256\":\"0x02eef648a47889c21c8261101c99a491e8497f9f7d088b66dffa4ded6afd7855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88001eed40a7dbbc5193d9671e1c05273dce1ab2a95bb866543421d2863ed04e\",\"dweb:/ipfs/QmSNU8mFUFxhVdLBToL8r3v7tpugyvPDbDU4vkc3Xd4omX\"]},\"src/dispute/lib/Types.sol\":{\"keccak256\":\"0x5d6a2b87e0358d54bc22a8fdcfcd17e347bcfa69b774d9c75694e3f843c2c2a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0ea07c78675e3fbfacdf92026ed77cd2b6596b358c09a7f29148b6aa80a6bd\",\"dweb:/ipfs/QmaNVv9NQg1Ea6AoHvv1oZCVX2ZAuwoW5vBMf7cVMvayqC\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0x5586d9715d8fbdd48245220f13a96573555fd847a333869e862ae186802e0311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f34dbd5a0a8918120e226f549a8337bd6fc7176653159a85929ce6fe3d66e11\",\"dweb:/ipfs/QmQKnhRPMnhKBRLmV2C1BqAsPpQg8xVFXi7ZLuHU9XQ1BE\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x89c07a0ca102cbe57b4e082543f2dd6dae0e1fd4a87908a334bd076fc914e7b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69c83489c9544ab442dc244c2feb2c6811b726a5eb5a509b97fc5ccb90b98c12\",\"dweb:/ipfs/QmPGGJeLasc1HWHzd6odvWcNvFPQrbYtDubZcv8yp1HLtF\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPErrors.sol\":{\"keccak256\":\"0xd4fab17f06221b85604e22ae7c34b9fc79394c7a8250f6506e9c8ad642acd25f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f4c283b19f9b1187823550e305cf9a57d564f6d41c42b371501fc150f1476b8\",\"dweb:/ipfs/Qmaj7MM9RV8v5wxeZVRf5EPrXPkDtXUyZQdbxVRmgfsDuh\"]},\"src/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0x27cbbc74d603b301e0e4bc4d33bbbeb88e369f1a91191a33d89ea52360e003db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba58dfd78089a51f06638fa6c0d2287c6254907ad89c4ad58b6fbb331d5d5a96\",\"dweb:/ipfs/QmUjC5Pm2MxPgYm9DfW1MasHj5jz7xXvej88778QuUoNgp\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"GameType","name":"_gameType","type":"uint32"},{"internalType":"Claim","name":"_absolutePrestate","type":"bytes32"},{"internalType":"uint256","name":"_maxGameDepth","type":"uint256"},{"internalType":"uint256","name":"_splitDepth","type":"uint256"},{"internalType":"Duration","name":"_clockExtension","type":"uint64"},{"internalType":"Duration","name":"_maxClockDuration","type":"uint64"},{"internalType":"contract IBigStepper","name":"_vm","type":"address"},{"internalType":"contract IDelayedWETH","name":"_weth","type":"address"},{"internalType":"contract IAnchorStateRegistry","name":"_anchorStateRegistry","type":"address"},{"internalType":"uint256","name":"_l2ChainId","type":"uint256"},{"internalType":"address","name":"_proposer","type":"address"},{"internalType":"address","name":"_challenger","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"AlreadyInitialized"},{"inputs":[],"type":"error","name":"AnchorRootNotFound"},{"inputs":[],"type":"error","name":"BadAuth"},{"inputs":[],"type":"error","name":"BlockNumberMatches"},{"inputs":[],"type":"error","name":"BondTransferFailed"},{"inputs":[],"type":"error","name":"CannotDefendRootClaim"},{"inputs":[],"type":"error","name":"ClaimAboveSplit"},{"inputs":[],"type":"error","name":"ClaimAlreadyExists"},{"inputs":[],"type":"error","name":"ClaimAlreadyResolved"},{"inputs":[],"type":"error","name":"ClockNotExpired"},{"inputs":[],"type":"error","name":"ClockTimeExceeded"},{"inputs":[],"type":"error","name":"ContentLengthMismatch"},{"inputs":[],"type":"error","name":"DuplicateStep"},{"inputs":[],"type":"error","name":"EmptyItem"},{"inputs":[],"type":"error","name":"GameDepthExceeded"},{"inputs":[],"type":"error","name":"GameNotInProgress"},{"inputs":[],"type":"error","name":"IncorrectBondAmount"},{"inputs":[],"type":"error","name":"InvalidClockExtension"},{"inputs":[],"type":"error","name":"InvalidDataRemainder"},{"inputs":[],"type":"error","name":"InvalidDisputedClaimIndex"},{"inputs":[],"type":"error","name":"InvalidHeader"},{"inputs":[],"type":"error","name":"InvalidHeaderRLP"},{"inputs":[],"type":"error","name":"InvalidLocalIdent"},{"inputs":[],"type":"error","name":"InvalidOutputRootProof"},{"inputs":[],"type":"error","name":"InvalidParent"},{"inputs":[],"type":"error","name":"InvalidPrestate"},{"inputs":[],"type":"error","name":"InvalidSplitDepth"},{"inputs":[],"type":"error","name":"L2BlockNumberChallenged"},{"inputs":[],"type":"error","name":"MaxDepthTooLarge"},{"inputs":[],"type":"error","name":"NoCreditToClaim"},{"inputs":[],"type":"error","name":"OutOfOrderResolution"},{"inputs":[],"type":"error","name":"UnexpectedList"},{"inputs":[{"internalType":"Claim","name":"rootClaim","type":"bytes32"}],"type":"error","name":"UnexpectedRootClaim"},{"inputs":[],"type":"error","name":"UnexpectedString"},{"inputs":[],"type":"error","name":"ValidStep"},{"inputs":[{"internalType":"uint256","name":"parentIndex","type":"uint256","indexed":true},{"internalType":"Claim","name":"claim","type":"bytes32","indexed":true},{"internalType":"address","name":"claimant","type":"address","indexed":true}],"type":"event","name":"Move","anonymous":false},{"inputs":[{"internalType":"enum GameStatus","name":"status","type":"uint8","indexed":true}],"type":"event","name":"Resolved","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"absolutePrestate","outputs":[{"internalType":"Claim","name":"absolutePrestate_","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"_ident","type":"uint256"},{"internalType":"uint256","name":"_execLeafIdx","type":"uint256"},{"internalType":"uint256","name":"_partOffset","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addLocalData"},{"inputs":[],"stateMutability":"view","type":"function","name":"anchorStateRegistry","outputs":[{"internalType":"contract IAnchorStateRegistry","name":"registry_","type":"address"}]},{"inputs":[{"internalType":"Claim","name":"_disputed","type":"bytes32"},{"internalType":"uint256","name":"_parentIndex","type":"uint256"},{"internalType":"Claim","name":"_claim","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"attack"},{"inputs":[{"internalType":"struct Types.OutputRootProof","name":"_outputRootProof","type":"tuple","components":[{"internalType":"bytes32","name":"version","type":"bytes32"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"},{"internalType":"bytes32","name":"messagePasserStorageRoot","type":"bytes32"},{"internalType":"bytes32","name":"latestBlockhash","type":"bytes32"}]},{"internalType":"bytes","name":"_headerRLP","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"challengeRootL2Block"},{"inputs":[],"stateMutability":"view","type":"function","name":"challenger","outputs":[{"internalType":"address","name":"challenger_","type":"address"}]},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"claimCredit"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"claimData","outputs":[{"internalType":"uint32","name":"parentIndex","type":"uint32"},{"internalType":"address","name":"counteredBy","type":"address"},{"internalType":"address","name":"claimant","type":"address"},{"internalType":"uint128","name":"bond","type":"uint128"},{"internalType":"Claim","name":"claim","type":"bytes32"},{"internalType":"Position","name":"position","type":"uint128"},{"internalType":"Clock","name":"clock","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"claimDataLen","outputs":[{"internalType":"uint256","name":"len_","type":"uint256"}]},{"inputs":[{"internalType":"Hash","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"claims","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"clockExtension","outputs":[{"internalType":"Duration","name":"clockExtension_","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"createdAt","outputs":[{"internalType":"Timestamp","name":"","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"credit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"Claim","name":"_disputed","type":"bytes32"},{"internalType":"uint256","name":"_parentIndex","type":"uint256"},{"internalType":"Claim","name":"_claim","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"defend"},{"inputs":[],"stateMutability":"pure","type":"function","name":"extraData","outputs":[{"internalType":"bytes","name":"extraData_","type":"bytes"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"gameCreator","outputs":[{"internalType":"address","name":"creator_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameData","outputs":[{"internalType":"GameType","name":"gameType_","type":"uint32"},{"internalType":"Claim","name":"rootClaim_","type":"bytes32"},{"internalType":"bytes","name":"extraData_","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameType","outputs":[{"internalType":"GameType","name":"gameType_","type":"uint32"}]},{"inputs":[{"internalType":"uint256","name":"_claimIndex","type":"uint256"}],"stateMutability":"view","type":"function","name":"getChallengerDuration","outputs":[{"internalType":"Duration","name":"duration_","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"_claimIndex","type":"uint256"}],"stateMutability":"view","type":"function","name":"getNumToResolve","outputs":[{"internalType":"uint256","name":"numRemainingChildren_","type":"uint256"}]},{"inputs":[{"internalType":"Position","name":"_position","type":"uint128"}],"stateMutability":"view","type":"function","name":"getRequiredBond","outputs":[{"internalType":"uint256","name":"requiredBond_","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"pure","type":"function","name":"l1Head","outputs":[{"internalType":"Hash","name":"l1Head_","type":"bytes32"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"l2BlockNumber","outputs":[{"internalType":"uint256","name":"l2BlockNumber_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"l2BlockNumberChallenged","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"l2BlockNumberChallenger","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"l2ChainId","outputs":[{"internalType":"uint256","name":"l2ChainId_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxClockDuration","outputs":[{"internalType":"Duration","name":"maxClockDuration_","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxGameDepth","outputs":[{"internalType":"uint256","name":"maxGameDepth_","type":"uint256"}]},{"inputs":[{"internalType":"Claim","name":"_disputed","type":"bytes32"},{"internalType":"uint256","name":"_challengeIndex","type":"uint256"},{"internalType":"Claim","name":"_claim","type":"bytes32"},{"internalType":"bool","name":"_isAttack","type":"bool"}],"stateMutability":"payable","type":"function","name":"move"},{"inputs":[],"stateMutability":"view","type":"function","name":"proposer","outputs":[{"internalType":"address","name":"proposer_","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"resolutionCheckpoints","outputs":[{"internalType":"bool","name":"initialCheckpointComplete","type":"bool"},{"internalType":"uint32","name":"subgameIndex","type":"uint32"},{"internalType":"Position","name":"leftmostPosition","type":"uint128"},{"internalType":"address","name":"counteredBy","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resolve","outputs":[{"internalType":"enum GameStatus","name":"status_","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"_claimIndex","type":"uint256"},{"internalType":"uint256","name":"_numToResolve","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"resolveClaim"},{"inputs":[],"stateMutability":"view","type":"function","name":"resolvedAt","outputs":[{"internalType":"Timestamp","name":"","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"resolvedSubgames","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"rootClaim","outputs":[{"internalType":"Claim","name":"rootClaim_","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"splitDepth","outputs":[{"internalType":"uint256","name":"splitDepth_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"startingBlockNumber","outputs":[{"internalType":"uint256","name":"startingBlockNumber_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"startingOutputRoot","outputs":[{"internalType":"Hash","name":"root","type":"bytes32"},{"internalType":"uint256","name":"l2BlockNumber","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"startingRootHash","outputs":[{"internalType":"Hash","name":"startingRootHash_","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"status","outputs":[{"internalType":"enum GameStatus","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"_claimIndex","type":"uint256"},{"internalType":"bool","name":"_isAttack","type":"bool"},{"internalType":"bytes","name":"_stateData","type":"bytes"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"step"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"subgames","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"vm","outputs":[{"internalType":"contract IBigStepper","name":"vm_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"weth","outputs":[{"internalType":"contract IDelayedWETH","name":"weth_","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"addLocalData(uint256,uint256,uint256)":{"params":{"_execLeafIdx":"The index of the leaf claim in an execution subgame that requires the local data for a step.","_ident":"The local identifier of the data to post.","_partOffset":"The offset of the data to post."}},"attack(bytes32,uint256,bytes32)":{"params":{"_claim":"The `Claim` at the relative attack position.","_disputed":"The `Claim` being attacked.","_parentIndex":"Index of the `Claim` to attack in the `claimData` array. This must match the `_disputed` claim."}},"challengeRootL2Block((bytes32,bytes32,bytes32,bytes32),bytes)":{"params":{"_headerRLP":"The RLP-encoded L2 block header.","_outputRootProof":"The output root proof."}},"claimCredit(address)":{"params":{"_recipient":"The owner and recipient of the credit."}},"constructor":{"params":{"_absolutePrestate":"The absolute prestate of the instruction trace.","_anchorStateRegistry":"The contract that stores the anchor state for each game type.","_challenger":"Address that is allowed to challenge instances of this contract.","_clockExtension":"The clock extension to perform when the remaining duration is less than the extension.","_gameType":"The type ID of the game.","_l2ChainId":"Chain ID of the L2 network this contract argues about.","_maxClockDuration":"The maximum amount of time that may accumulate on a team's chess clock.","_maxGameDepth":"The maximum depth of bisection.","_proposer":"Address that is allowed to create instances of this contract.","_splitDepth":"The final depth of the output bisection portion of the game.","_vm":"An onchain VM that performs single instruction steps on an FPP trace.","_weth":"WETH contract for holding ETH."}},"defend(bytes32,uint256,bytes32)":{"params":{"_claim":"The `Claim` at the relative defense position.","_parentIndex":"Index of the claim to defend in the `claimData` array. This must match the `_disputed` claim."}},"extraData()":{"details":"`clones-with-immutable-args` argument #4","returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator."}},"gameCreator()":{"details":"`clones-with-immutable-args` argument #1","returns":{"creator_":"The creator of the dispute game."}},"gameData()":{"returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator.","gameType_":"The type of proof system being used.","rootClaim_":"The root claim of the DisputeGame."}},"gameType()":{"details":"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.","returns":{"gameType_":"The type of proof system being used."}},"getChallengerDuration(uint256)":{"params":{"_claimIndex":"The index of the subgame root claim."},"returns":{"duration_":"The time elapsed on the potential challenger to `_claimIndex`'s chess clock."}},"getNumToResolve(uint256)":{"params":{"_claimIndex":"The subgame root claim's index within `claimData`."},"returns":{"numRemainingChildren_":"The number of children that still need to be checked to resolve the subgame."}},"getRequiredBond(uint128)":{"params":{"_position":"The position of the bonded interaction."},"returns":{"requiredBond_":"The required ETH bond for the given move, in wei."}},"initialize()":{"details":"This function may only be called once."},"l1Head()":{"details":"`clones-with-immutable-args` argument #3","returns":{"l1Head_":"The parent hash of the L1 block when the dispute game was created."}},"move(bytes32,uint256,bytes32,bool)":{"params":{"_challengeIndex":"The index of the claim being moved against. This must match the `_disputed` claim.","_claim":"The claim at the next logical position in the game.","_isAttack":"Whether or not the move is an attack or defense."}},"resolve()":{"details":"May only be called if the `status` is `IN_PROGRESS`.","returns":{"status_":"The status of the game after resolution."}},"resolveClaim(uint256,uint256)":{"details":"This function must be called bottom-up in the DAG      A subgame is a tree of claims that has a maximum depth of 1.      A subgame root claims is valid if, and only if, all of its child claims are invalid.      At the deepest level in the DAG, a claim is invalid if there's a successful step against it.","params":{"_claimIndex":"The index of the subgame root claim to resolve.","_numToResolve":"The number of subgames to resolve in this call. If the input is `0`, and this is the first                      page, this function will attempt to check all of the subgame's children at once."}},"rootClaim()":{"details":"`clones-with-immutable-args` argument #2","returns":{"rootClaim_":"The root claim of the DisputeGame."}},"step(uint256,bool,bytes,bytes)":{"details":"This function should point to a fault proof processor in order to execute      a step in the fault proof program on-chain. The interface of the fault proof      processor contract should adhere to the `IBigStepper` interface.","params":{"_claimIndex":"The index of the challenged claim within `claimData`.","_isAttack":"Whether or not the step is an attack or a defense.","_proof":"Proof to access memory nodes in the VM's merkle state tree.","_stateData":"The stateData of the step is the preimage of the claim at the given        prestate, which is at `_stateIndex` if the move is an attack and `_claimIndex` if        the move is a defense. If the step is an attack on the first instruction, it is        the absolute prestate of the fault proof VM."}}},"version":1},"userdoc":{"kind":"user","methods":{"absolutePrestate()":{"notice":"Returns the absolute prestate of the instruction trace."},"addLocalData(uint256,uint256,uint256)":{"notice":"Posts the requested local data to the VM's `PreimageOralce`."},"anchorStateRegistry()":{"notice":"Returns the anchor state registry contract."},"attack(bytes32,uint256,bytes32)":{"notice":"Attack a disagreed upon `Claim`."},"challengeRootL2Block((bytes32,bytes32,bytes32,bytes32),bytes)":{"notice":"Challenges the root L2 block number by providing the preimage of the output root and the L2 block header         and showing that the committed L2 block number is incorrect relative to the claimed L2 block number."},"challenger()":{"notice":"Returns the challenger address."},"claimCredit(address)":{"notice":"Claim the credit belonging to the recipient address."},"claimData(uint256)":{"notice":"An append-only array of all claims made during the dispute game."},"claimDataLen()":{"notice":"Returns the length of the `claimData` array."},"claims(bytes32)":{"notice":"A mapping to allow for constant-time lookups of existing claims."},"clockExtension()":{"notice":"Returns the clock extension constant."},"createdAt()":{"notice":"The starting timestamp of the game"},"credit(address)":{"notice":"Credited balances for winning participants."},"defend(bytes32,uint256,bytes32)":{"notice":"Defend an agreed upon `Claim`._disputed The `Claim` being defended."},"extraData()":{"notice":"Getter for the extra data."},"gameCreator()":{"notice":"Getter for the creator of the dispute game."},"gameData()":{"notice":"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation."},"gameType()":{"notice":"Getter for the game type."},"getChallengerDuration(uint256)":{"notice":"Returns the amount of time elapsed on the potential challenger to `_claimIndex`'s chess clock. Maxes         out at `MAX_CLOCK_DURATION`."},"getNumToResolve(uint256)":{"notice":"Returns the number of children that still need to be resolved in order to fully resolve a subgame rooted         at `_claimIndex`."},"getRequiredBond(uint128)":{"notice":"Returns the required bond for a given move kind."},"initialize()":{"notice":"Initializes the contract."},"l1Head()":{"notice":"Getter for the parent hash of the L1 block when the dispute game was created."},"l2BlockNumber()":{"notice":"The l2BlockNumber of the disputed output root in the `L2OutputOracle`."},"l2BlockNumberChallenged()":{"notice":"Flag for whether or not the L2 block number claim has been invalidated via `challengeRootL2Block`."},"l2BlockNumberChallenger()":{"notice":"The challenger of the L2 block number claim. Should always be `address(0)` if `l2BlockNumberChallenged`         is `false`. Should be the address of the challenger if `l2BlockNumberChallenged` is `true`."},"l2ChainId()":{"notice":"Returns the chain ID of the L2 network this contract argues about."},"maxClockDuration()":{"notice":"Returns the max clock duration."},"maxGameDepth()":{"notice":"Returns the max game depth."},"move(bytes32,uint256,bytes32,bool)":{"notice":"Generic move function, used for both `attack` and `defend` moves._disputed The disputed `Claim`."},"proposer()":{"notice":"Returns the proposer address."},"resolutionCheckpoints(uint256)":{"notice":"A mapping of claim indices to resolution checkpoints."},"resolve()":{"notice":"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties."},"resolveClaim(uint256,uint256)":{"notice":"Resolves the subgame rooted at the given claim index. `_numToResolve` specifies how many children of         the subgame will be checked in this call. If `_numToResolve` is less than the number of children, an         internal cursor will be updated and this function may be called again to complete resolution of the         subgame."},"resolvedAt()":{"notice":"The timestamp of the game's global resolution."},"resolvedSubgames(uint256)":{"notice":"A mapping of resolved subgames rooted at a claim index."},"rootClaim()":{"notice":"Getter for the root claim."},"splitDepth()":{"notice":"Returns the split depth."},"startingBlockNumber()":{"notice":"Only the starting block number of the game."},"startingOutputRoot()":{"notice":"The latest finalized output root, serving as the anchor for output bisection."},"startingRootHash()":{"notice":"Only the starting output root of the game."},"status()":{"notice":"Returns the current status of the game."},"step(uint256,bool,bytes,bytes)":{"notice":"Perform an instruction step via an on-chain fault proof processor."},"subgames(uint256,uint256)":{"notice":"A mapping of subgames rooted at a claim index to other claim indices in the subgame."},"version()":{"notice":"Semantic version."},"vm()":{"notice":"Returns the address of the VM."},"weth()":{"notice":"Returns the WETH contract for holding ETH."}},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/dispute/PermissionedDisputeGame.sol":"PermissionedDisputeGame"},"evmVersion":"london","libraries":{}},"sources":{"lib/solady/src/utils/Clone.sol":{"keccak256":"0xb408dc90294bacd394e59c83619e7dc76f45c83ad6f8e923eb07d3a5bab89f22","urls":["bzz-raw://c3abeb55ad062c4b29b5b5edab6167de36615c51621ef71ef3ddfd9f6735a93b","dweb:/ipfs/Qmboh4zX6ZgFVhetUhZGJ14kKXiaGeB9bW3Vseg2MLMGHW"],"license":"MIT"},"lib/solady/src/utils/FixedPointMathLib.sol":{"keccak256":"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160","urls":["bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260","dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u"],"license":"MIT"},"src/cannon/interfaces/IPreimageOracle.sol":{"keccak256":"0x7bda0156571b468cf0e22321945655f2dacd7082f440f742aa4612b36b388a9f","urls":["bzz-raw://5ba53777c65987bc20faa7731476c779e7794a58bafb40191a25275a05e3f8af","dweb:/ipfs/QmbxQwE2BC9aabTruDqkd2CLojwq7G9i2rkWKv46Wucae1"],"license":"MIT"},"src/dispute/FaultDisputeGame.sol":{"keccak256":"0x6d6f33a58945bce35acef616ca7818eecc4c209b7bb6a4467d132f391dd9c243","urls":["bzz-raw://63028aa02ba4a0bca6241f3fb88c4fca1a43a497394e9c5473f3ca7634c4f1a7","dweb:/ipfs/QmRqPjz7mGekYujbuTqZumT2gCz4VBGuzdqKooS1vAamdY"],"license":"MIT"},"src/dispute/PermissionedDisputeGame.sol":{"keccak256":"0x25816eacfe346264a7636be1c798265918c7639accbcd15ce511390a63237be9","urls":["bzz-raw://bcc8b98dd6abb3574dcd8b1558b880fd1402c4cf51c68fac9cb541345f703afa","dweb:/ipfs/QmTUfrgFA3vNpCfXbyTPswLhw6h2TWuVEqW7QyxqYmZAyF"],"license":"MIT"},"src/dispute/interfaces/IAnchorStateRegistry.sol":{"keccak256":"0x1408733471ae00d5f1328e0138084d31eb8e1f2606d526567f2a5fd82c18425b","urls":["bzz-raw://e854df5ba5142b181c0d9f5e86c0176a41ee6201eb9e96c22a523926dd0d76f8","dweb:/ipfs/QmcSP8M3SgVMAxkWF18ybbg1TdGRL8cooTSeA41Amvs9BD"],"license":"MIT"},"src/dispute/interfaces/IBigStepper.sol":{"keccak256":"0xc92ee3069677b903826c83d5b4e46e3be462f9ccf1d95e72a12b1052e3451f0a","urls":["bzz-raw://f93692bd3c8d9533ab8024ce2df6d880328826d1a92fdb9cf45301e2d0c65884","dweb:/ipfs/QmUcmbjTw9gnCUNasgmQjVbSgcCPKZ1FQyA31dH4k5Nc75"],"license":"MIT"},"src/dispute/interfaces/IDelayedWETH.sol":{"keccak256":"0x0bb035e9bbb411696841ea292eeed6d4463c3c3eee7d6c5d8e38a101e8a4ff04","urls":["bzz-raw://0477cf2c137392d35081f23bfd7f3565881767dcb1489a62e7e80b3c178cfce8","dweb:/ipfs/QmTjALjrHg5rvhjfCKPmXLTgkMNneECWaqoarunSoVS37G"],"license":"MIT"},"src/dispute/interfaces/IDisputeGame.sol":{"keccak256":"0xa4d3617892dfee02890ea135e778ed0207aa8545c97cb2a421bae7c1a659baa0","urls":["bzz-raw://0e31653e3463dbc3f3b572ca4a1198d9aadc7d8606a2b690a58e2c082a0d0090","dweb:/ipfs/QmdbxJK4T5Hu652cSkxpAjYPxrK1i5ZM62oyopzmAzRn6M"],"license":"MIT"},"src/dispute/interfaces/IDisputeGameFactory.sol":{"keccak256":"0xcab52326762c570297a6f62addde4e4f9296bba85f2f1470f52a3c64f57c5b41","urls":["bzz-raw://40decdf2e72938f55434d300ae5d2a607f1186c8595ff1cc3ce6c3f6d312b701","dweb:/ipfs/QmaQEHn1FPjvinQTNth9vEx84iDEwtg2cVk9bLpnwLyzot"],"license":"MIT"},"src/dispute/interfaces/IFaultDisputeGame.sol":{"keccak256":"0x9655abdda7d33496f012e5a8bf492c7733573024cc7779dc79fb4553f11e9f0a","urls":["bzz-raw://4f8f0acce831c36385a4b06a5142ddfc2dbe2e7c403193df2585293ef2821c03","dweb:/ipfs/QmR4XJ8rG1aiR7NgyTNbQ4swe8CFWkytudbWiKKMaqiCMH"],"license":"MIT"},"src/dispute/interfaces/IInitializable.sol":{"keccak256":"0xbc553af6501a972850a98fc6284943f8e95a5183a7b4f64198c16fca2338c9dc","urls":["bzz-raw://b1f1c422ce4a9e72f0bbdec36434206da4af3a32d38f922acab957942e994ce5","dweb:/ipfs/QmNQGWBceLxx1CKSMLfwTM584q8UCgUpF4rrFe8pdbWYtj"],"license":"MIT"},"src/dispute/interfaces/IWETH.sol":{"keccak256":"0x3858f6c0ce3ec7978b1ea1772484c25aec7c8c480ceaf18239f726fdd06fdd1f","urls":["bzz-raw://b72cf3bc31324409480e9ae6eb3e2654da8dff3cbf9f2136b19fe714293b3766","dweb:/ipfs/QmTW3JiFUo8pYhDbthPH8ZSp5f1nmdga4CSzo4YdEzppnM"],"license":"MIT"},"src/dispute/lib/Errors.sol":{"keccak256":"0xb4359bd2d8b254656a69d9c236475c7e17f8547a2f72611bbac6607668cf2028","urls":["bzz-raw://130d50f81556fac590987c96c45c067b8ea17eb95149ab4c4ba554bb1ecb9401","dweb:/ipfs/QmfSDVNskw4e9LEZzrab7TiReUgmP8kBxVnukRekwuprjQ"],"license":"MIT"},"src/dispute/lib/LibPosition.sol":{"keccak256":"0x7c5f19f8f54f06de2ce1c6cdcc5c7af65ac405130a4066cdaf146ca315818241","urls":["bzz-raw://06905e5ede94784e32748ad60557cb0b0829089d65430518e7042b80d2f64e2d","dweb:/ipfs/QmeGKMmnFnow2VrRvTSPavCrToqQ3qDpEaR1tVoK6Hzg8K"],"license":"MIT"},"src/dispute/lib/LibUDT.sol":{"keccak256":"0x02eef648a47889c21c8261101c99a491e8497f9f7d088b66dffa4ded6afd7855","urls":["bzz-raw://88001eed40a7dbbc5193d9671e1c05273dce1ab2a95bb866543421d2863ed04e","dweb:/ipfs/QmSNU8mFUFxhVdLBToL8r3v7tpugyvPDbDU4vkc3Xd4omX"],"license":"MIT"},"src/dispute/lib/Types.sol":{"keccak256":"0x5d6a2b87e0358d54bc22a8fdcfcd17e347bcfa69b774d9c75694e3f843c2c2a8","urls":["bzz-raw://df0ea07c78675e3fbfacdf92026ed77cd2b6596b358c09a7f29148b6aa80a6bd","dweb:/ipfs/QmaNVv9NQg1Ea6AoHvv1oZCVX2ZAuwoW5vBMf7cVMvayqC"],"license":"MIT"},"src/libraries/Encoding.sol":{"keccak256":"0x5586d9715d8fbdd48245220f13a96573555fd847a333869e862ae186802e0311","urls":["bzz-raw://3f34dbd5a0a8918120e226f549a8337bd6fc7176653159a85929ce6fe3d66e11","dweb:/ipfs/QmQKnhRPMnhKBRLmV2C1BqAsPpQg8xVFXi7ZLuHU9XQ1BE"],"license":"MIT"},"src/libraries/Hashing.sol":{"keccak256":"0x89c07a0ca102cbe57b4e082543f2dd6dae0e1fd4a87908a334bd076fc914e7b8","urls":["bzz-raw://69c83489c9544ab442dc244c2feb2c6811b726a5eb5a509b97fc5ccb90b98c12","dweb:/ipfs/QmPGGJeLasc1HWHzd6odvWcNvFPQrbYtDubZcv8yp1HLtF"],"license":"MIT"},"src/libraries/Types.sol":{"keccak256":"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4","urls":["bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e","dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"],"license":"MIT"},"src/libraries/rlp/RLPErrors.sol":{"keccak256":"0xd4fab17f06221b85604e22ae7c34b9fc79394c7a8250f6506e9c8ad642acd25f","urls":["bzz-raw://5f4c283b19f9b1187823550e305cf9a57d564f6d41c42b371501fc150f1476b8","dweb:/ipfs/Qmaj7MM9RV8v5wxeZVRf5EPrXPkDtXUyZQdbxVRmgfsDuh"],"license":"MIT"},"src/libraries/rlp/RLPReader.sol":{"keccak256":"0x27cbbc74d603b301e0e4bc4d33bbbeb88e369f1a91191a33d89ea52360e003db","urls":["bzz-raw://ba58dfd78089a51f06638fa6c0d2287c6254907ad89c4ad58b6fbb331d5d5a96","dweb:/ipfs/QmUjC5Pm2MxPgYm9DfW1MasHj5jz7xXvej88778QuUoNgp"],"license":"MIT"},"src/libraries/rlp/RLPWriter.sol":{"keccak256":"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6","urls":["bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b","dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"],"license":"MIT"},"src/universal/ISemver.sol":{"keccak256":"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44","urls":["bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a","dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":100482,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"createdAt","offset":0,"slot":"0","type":"t_userDefinedValueType(Timestamp)104275"},{"astId":100486,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"resolvedAt","offset":8,"slot":"0","type":"t_userDefinedValueType(Timestamp)104275"},{"astId":100490,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"status","offset":16,"slot":"0","type":"t_enum(GameStatus)104325"},{"astId":100493,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"initialized","offset":17,"slot":"0","type":"t_bool"},{"astId":100496,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"l2BlockNumberChallenged","offset":18,"slot":"0","type":"t_bool"},{"astId":100499,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"l2BlockNumberChallenger","offset":0,"slot":"1","type":"t_address"},{"astId":100504,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"claimData","offset":0,"slot":"2","type":"t_array(t_struct(ClaimData)103513_storage)dyn_storage"},{"astId":100509,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"credit","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":100515,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"claims","offset":0,"slot":"4","type":"t_mapping(t_userDefinedValueType(Hash)104260,t_bool)"},{"astId":100521,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"subgames","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"},{"astId":100526,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"resolvedSubgames","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_bool)"},{"astId":100532,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"resolutionCheckpoints","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_struct(ResolutionCheckpoint)103523_storage)"},{"astId":100536,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"startingOutputRoot","offset":0,"slot":"8","type":"t_struct(OutputRoot)104331_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(ClaimData)103513_storage)dyn_storage":{"encoding":"dynamic_array","label":"struct IFaultDisputeGame.ClaimData[]","numberOfBytes":"32","base":"t_struct(ClaimData)103513_storage"},"t_array(t_uint256)dyn_storage":{"encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(GameStatus)104325":{"encoding":"inplace","label":"enum GameStatus","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_struct(ResolutionCheckpoint)103523_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct IFaultDisputeGame.ResolutionCheckpoint)","numberOfBytes":"32","value":"t_struct(ResolutionCheckpoint)103523_storage"},"t_mapping(t_userDefinedValueType(Hash)104260,t_bool)":{"encoding":"mapping","key":"t_userDefinedValueType(Hash)104260","label":"mapping(Hash => bool)","numberOfBytes":"32","value":"t_bool"},"t_struct(ClaimData)103513_storage":{"encoding":"inplace","label":"struct IFaultDisputeGame.ClaimData","numberOfBytes":"160","members":[{"astId":103497,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"parentIndex","offset":0,"slot":"0","type":"t_uint32"},{"astId":103499,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"counteredBy","offset":4,"slot":"0","type":"t_address"},{"astId":103501,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"claimant","offset":0,"slot":"1","type":"t_address"},{"astId":103503,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"bond","offset":0,"slot":"2","type":"t_uint128"},{"astId":103506,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"claim","offset":0,"slot":"3","type":"t_userDefinedValueType(Claim)104213"},{"astId":103509,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"position","offset":0,"slot":"4","type":"t_userDefinedValueType(Position)103871"},{"astId":103512,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"clock","offset":16,"slot":"4","type":"t_userDefinedValueType(Clock)104121"}]},"t_struct(OutputRoot)104331_storage":{"encoding":"inplace","label":"struct OutputRoot","numberOfBytes":"64","members":[{"astId":104328,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"root","offset":0,"slot":"0","type":"t_userDefinedValueType(Hash)104260"},{"astId":104330,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"l2BlockNumber","offset":0,"slot":"1","type":"t_uint256"}]},"t_struct(ResolutionCheckpoint)103523_storage":{"encoding":"inplace","label":"struct IFaultDisputeGame.ResolutionCheckpoint","numberOfBytes":"64","members":[{"astId":103515,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"initialCheckpointComplete","offset":0,"slot":"0","type":"t_bool"},{"astId":103517,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"subgameIndex","offset":1,"slot":"0","type":"t_uint32"},{"astId":103520,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"leftmostPosition","offset":5,"slot":"0","type":"t_userDefinedValueType(Position)103871"},{"astId":103522,"contract":"src/dispute/PermissionedDisputeGame.sol:PermissionedDisputeGame","label":"counteredBy","offset":0,"slot":"1","type":"t_address"}]},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_userDefinedValueType(Claim)104213":{"encoding":"inplace","label":"Claim","numberOfBytes":"32"},"t_userDefinedValueType(Clock)104121":{"encoding":"inplace","label":"Clock","numberOfBytes":"16"},"t_userDefinedValueType(Hash)104260":{"encoding":"inplace","label":"Hash","numberOfBytes":"32"},"t_userDefinedValueType(Position)103871":{"encoding":"inplace","label":"Position","numberOfBytes":"16"},"t_userDefinedValueType(Timestamp)104275":{"encoding":"inplace","label":"Timestamp","numberOfBytes":"8"}}},"userdoc":{"version":1,"kind":"user","methods":{"absolutePrestate()":{"notice":"Returns the absolute prestate of the instruction trace."},"addLocalData(uint256,uint256,uint256)":{"notice":"Posts the requested local data to the VM's `PreimageOralce`."},"anchorStateRegistry()":{"notice":"Returns the anchor state registry contract."},"attack(bytes32,uint256,bytes32)":{"notice":"Attack a disagreed upon `Claim`."},"challengeRootL2Block((bytes32,bytes32,bytes32,bytes32),bytes)":{"notice":"Challenges the root L2 block number by providing the preimage of the output root and the L2 block header         and showing that the committed L2 block number is incorrect relative to the claimed L2 block number."},"challenger()":{"notice":"Returns the challenger address."},"claimCredit(address)":{"notice":"Claim the credit belonging to the recipient address."},"claimData(uint256)":{"notice":"An append-only array of all claims made during the dispute game."},"claimDataLen()":{"notice":"Returns the length of the `claimData` array."},"claims(bytes32)":{"notice":"A mapping to allow for constant-time lookups of existing claims."},"clockExtension()":{"notice":"Returns the clock extension constant."},"createdAt()":{"notice":"The starting timestamp of the game"},"credit(address)":{"notice":"Credited balances for winning participants."},"defend(bytes32,uint256,bytes32)":{"notice":"Defend an agreed upon `Claim`._disputed The `Claim` being defended."},"extraData()":{"notice":"Getter for the extra data."},"gameCreator()":{"notice":"Getter for the creator of the dispute game."},"gameData()":{"notice":"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation."},"gameType()":{"notice":"Getter for the game type."},"getChallengerDuration(uint256)":{"notice":"Returns the amount of time elapsed on the potential challenger to `_claimIndex`'s chess clock. Maxes         out at `MAX_CLOCK_DURATION`."},"getNumToResolve(uint256)":{"notice":"Returns the number of children that still need to be resolved in order to fully resolve a subgame rooted         at `_claimIndex`."},"getRequiredBond(uint128)":{"notice":"Returns the required bond for a given move kind."},"initialize()":{"notice":"Initializes the contract."},"l1Head()":{"notice":"Getter for the parent hash of the L1 block when the dispute game was created."},"l2BlockNumber()":{"notice":"The l2BlockNumber of the disputed output root in the `L2OutputOracle`."},"l2BlockNumberChallenged()":{"notice":"Flag for whether or not the L2 block number claim has been invalidated via `challengeRootL2Block`."},"l2BlockNumberChallenger()":{"notice":"The challenger of the L2 block number claim. Should always be `address(0)` if `l2BlockNumberChallenged`         is `false`. Should be the address of the challenger if `l2BlockNumberChallenged` is `true`."},"l2ChainId()":{"notice":"Returns the chain ID of the L2 network this contract argues about."},"maxClockDuration()":{"notice":"Returns the max clock duration."},"maxGameDepth()":{"notice":"Returns the max game depth."},"move(bytes32,uint256,bytes32,bool)":{"notice":"Generic move function, used for both `attack` and `defend` moves._disputed The disputed `Claim`."},"proposer()":{"notice":"Returns the proposer address."},"resolutionCheckpoints(uint256)":{"notice":"A mapping of claim indices to resolution checkpoints."},"resolve()":{"notice":"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties."},"resolveClaim(uint256,uint256)":{"notice":"Resolves the subgame rooted at the given claim index. `_numToResolve` specifies how many children of         the subgame will be checked in this call. If `_numToResolve` is less than the number of children, an         internal cursor will be updated and this function may be called again to complete resolution of the         subgame."},"resolvedAt()":{"notice":"The timestamp of the game's global resolution."},"resolvedSubgames(uint256)":{"notice":"A mapping of resolved subgames rooted at a claim index."},"rootClaim()":{"notice":"Getter for the root claim."},"splitDepth()":{"notice":"Returns the split depth."},"startingBlockNumber()":{"notice":"Only the starting block number of the game."},"startingOutputRoot()":{"notice":"The latest finalized output root, serving as the anchor for output bisection."},"startingRootHash()":{"notice":"Only the starting output root of the game."},"status()":{"notice":"Returns the current status of the game."},"step(uint256,bool,bytes,bytes)":{"notice":"Perform an instruction step via an on-chain fault proof processor."},"subgames(uint256,uint256)":{"notice":"A mapping of subgames rooted at a claim index to other claim indices in the subgame."},"version()":{"notice":"Semantic version."},"vm()":{"notice":"Returns the address of the VM."},"weth()":{"notice":"Returns the WETH contract for holding ETH."}},"events":{"Move(uint256,bytes32,address)":{"notice":"Emitted when a new claim is added to the DAG by `claimant`"},"Resolved(uint8)":{"notice":"Emitted when the game is resolved."}},"errors":{"AlreadyInitialized()":[{"notice":"Thrown when a dispute game has already been initialized."}],"AnchorRootNotFound()":[{"notice":"Thrown when an anchor root is not found for a given game type."}],"BadAuth()":[{"notice":"Thrown when an unauthorized address attempts to interact with the game."}],"BlockNumberMatches()":[{"notice":"Thrown when there is a match between the block number in the output root proof and the block number         claimed in the dispute game."}],"BondTransferFailed()":[{"notice":"Thrown when the transfer of credit to a recipient account reverts."}],"CannotDefendRootClaim()":[{"notice":"Thrown when a defense against the root claim is attempted."}],"ClaimAboveSplit()":[{"notice":"Thrown when a parent output root is attempted to be found on a claim that is in         the output root portion of the tree."}],"ClaimAlreadyExists()":[{"notice":"Thrown when a claim is attempting to be made that already exists."}],"ClaimAlreadyResolved()":[{"notice":"Thrown when resolving a claim that has already been resolved."}],"ClockNotExpired()":[{"notice":"Thrown when the game is attempted to be resolved too early."}],"ClockTimeExceeded()":[{"notice":"Thrown when a move is attempted to be made after the clock has timed out."}],"ContentLengthMismatch()":[{"notice":"The length of the content must be greater than the RLP item length"}],"DuplicateStep()":[{"notice":"Thrown when trying to step against a claim for a second time, after it has already been countered with         an instruction step."}],"EmptyItem()":[{"notice":"The length of an RLP item must be greater than zero to be decodable"}],"GameDepthExceeded()":[{"notice":"Thrown when a move is attempted to be made at or greater than the max depth of the game."}],"GameNotInProgress()":[{"notice":"Thrown when an action that requires the game to be `IN_PROGRESS` is invoked when         the game is not in progress."}],"IncorrectBondAmount()":[{"notice":"Thrown when a supplied bond is not equal to the required bond amount to cover the cost of the interaction."}],"InvalidClockExtension()":[{"notice":"Thrown on deployment if the max clock duration is less than or equal to the clock extension."}],"InvalidDataRemainder()":[{"notice":"The RLP item has an invalid data remainder"}],"InvalidDisputedClaimIndex()":[{"notice":"Thrown when a disputed claim does not match its index in the game."}],"InvalidHeader()":[{"notice":"Invalid RLP header for RLP item"}],"InvalidHeaderRLP()":[{"notice":"Thrown when header RLP is invalid with respect to the block hash in an output root proof."}],"InvalidLocalIdent()":[{"notice":"Thrown when an invalid local identifier is passed to the `addLocalData` function."}],"InvalidOutputRootProof()":[{"notice":"Thrown when an output root proof is invalid."}],"InvalidParent()":[{"notice":"Thrown when a step is attempted above the maximum game depth."}],"InvalidPrestate()":[{"notice":"Thrown when an invalid prestate is supplied to `step`."}],"InvalidSplitDepth()":[{"notice":"Thrown on deployment if the split depth is greater than or equal to the max         depth of the game."}],"L2BlockNumberChallenged()":[{"notice":"Thrown when the L2 block number claim has already been challenged."}],"MaxDepthTooLarge()":[{"notice":"Thrown on deployment if the max depth is greater than `LibPosition.`"}],"NoCreditToClaim()":[{"notice":"Thrown when a credit claim is attempted for a value of 0."}],"OutOfOrderResolution()":[{"notice":"Thrown when resolving claims out of order."}],"UnexpectedList()":[{"notice":"Decoded item type for bytes is not a string item"}],"UnexpectedRootClaim(bytes32)":[{"notice":"Thrown when the root claim has an unexpected VM status.         Some games can only start with a root-claim with a specific status."}],"UnexpectedString()":[{"notice":"The decoded item type for list is not a list item"}],"ValidStep()":[{"notice":"Thrown when a step is made that computes the expected post state correctly."}]},"notice":"PermissionedDisputeGame is a contract that inherits from `FaultDisputeGame`, and contains two roles:         - The `challenger` role, which is allowed to challenge a dispute.         - The `proposer` role, which is allowed to create proposals and participate in their game.         This contract exists as a way for networks to support the fault proof iteration of the OptimismPortal         contract without needing to support a fully permissionless system. Permissionless systems can introduce         costs that certain networks may not wish to support. This contract can also be used as a fallback mechanism         in case of a failure in the permissionless fault proof system in the stage one release."},"devdoc":{"version":1,"kind":"dev","methods":{"addLocalData(uint256,uint256,uint256)":{"params":{"_execLeafIdx":"The index of the leaf claim in an execution subgame that requires the local data for a step.","_ident":"The local identifier of the data to post.","_partOffset":"The offset of the data to post."}},"attack(bytes32,uint256,bytes32)":{"params":{"_claim":"The `Claim` at the relative attack position.","_disputed":"The `Claim` being attacked.","_parentIndex":"Index of the `Claim` to attack in the `claimData` array. This must match the `_disputed` claim."}},"challengeRootL2Block((bytes32,bytes32,bytes32,bytes32),bytes)":{"params":{"_headerRLP":"The RLP-encoded L2 block header.","_outputRootProof":"The output root proof."}},"claimCredit(address)":{"params":{"_recipient":"The owner and recipient of the credit."}},"constructor":{"params":{"_absolutePrestate":"The absolute prestate of the instruction trace.","_anchorStateRegistry":"The contract that stores the anchor state for each game type.","_challenger":"Address that is allowed to challenge instances of this contract.","_clockExtension":"The clock extension to perform when the remaining duration is less than the extension.","_gameType":"The type ID of the game.","_l2ChainId":"Chain ID of the L2 network this contract argues about.","_maxClockDuration":"The maximum amount of time that may accumulate on a team's chess clock.","_maxGameDepth":"The maximum depth of bisection.","_proposer":"Address that is allowed to create instances of this contract.","_splitDepth":"The final depth of the output bisection portion of the game.","_vm":"An onchain VM that performs single instruction steps on an FPP trace.","_weth":"WETH contract for holding ETH."}},"defend(bytes32,uint256,bytes32)":{"params":{"_claim":"The `Claim` at the relative defense position.","_parentIndex":"Index of the claim to defend in the `claimData` array. This must match the `_disputed` claim."}},"extraData()":{"details":"`clones-with-immutable-args` argument #4","returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator."}},"gameCreator()":{"details":"`clones-with-immutable-args` argument #1","returns":{"creator_":"The creator of the dispute game."}},"gameData()":{"returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator.","gameType_":"The type of proof system being used.","rootClaim_":"The root claim of the DisputeGame."}},"gameType()":{"details":"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.","returns":{"gameType_":"The type of proof system being used."}},"getChallengerDuration(uint256)":{"params":{"_claimIndex":"The index of the subgame root claim."},"returns":{"duration_":"The time elapsed on the potential challenger to `_claimIndex`'s chess clock."}},"getNumToResolve(uint256)":{"params":{"_claimIndex":"The subgame root claim's index within `claimData`."},"returns":{"numRemainingChildren_":"The number of children that still need to be checked to resolve the subgame."}},"getRequiredBond(uint128)":{"params":{"_position":"The position of the bonded interaction."},"returns":{"requiredBond_":"The required ETH bond for the given move, in wei."}},"initialize()":{"details":"This function may only be called once."},"l1Head()":{"details":"`clones-with-immutable-args` argument #3","returns":{"l1Head_":"The parent hash of the L1 block when the dispute game was created."}},"move(bytes32,uint256,bytes32,bool)":{"params":{"_challengeIndex":"The index of the claim being moved against. This must match the `_disputed` claim.","_claim":"The claim at the next logical position in the game.","_isAttack":"Whether or not the move is an attack or defense."}},"resolve()":{"details":"May only be called if the `status` is `IN_PROGRESS`.","returns":{"status_":"The status of the game after resolution."}},"resolveClaim(uint256,uint256)":{"details":"This function must be called bottom-up in the DAG      A subgame is a tree of claims that has a maximum depth of 1.      A subgame root claims is valid if, and only if, all of its child claims are invalid.      At the deepest level in the DAG, a claim is invalid if there's a successful step against it.","params":{"_claimIndex":"The index of the subgame root claim to resolve.","_numToResolve":"The number of subgames to resolve in this call. If the input is `0`, and this is the first                      page, this function will attempt to check all of the subgame's children at once."}},"rootClaim()":{"details":"`clones-with-immutable-args` argument #2","returns":{"rootClaim_":"The root claim of the DisputeGame."}},"step(uint256,bool,bytes,bytes)":{"details":"This function should point to a fault proof processor in order to execute      a step in the fault proof program on-chain. The interface of the fault proof      processor contract should adhere to the `IBigStepper` interface.","params":{"_claimIndex":"The index of the challenged claim within `claimData`.","_isAttack":"Whether or not the step is an attack or a defense.","_proof":"Proof to access memory nodes in the VM's merkle state tree.","_stateData":"The stateData of the step is the preimage of the claim at the given        prestate, which is at `_stateIndex` if the move is an attack and `_claimIndex` if        the move is a defense. If the step is an attack on the first instruction, it is        the absolute prestate of the fault proof VM."}}},"errors":{"UnexpectedRootClaim(bytes32)":[{"params":{"rootClaim":"is the claim that was unexpected."}}]},"title":"PermissionedDisputeGame"},"ast":{"absolutePath":"src/dispute/PermissionedDisputeGame.sol","id":103107,"exportedSymbols":{"AlreadyInitialized":[103776],"AnchorRootNotFound":[103848],"BadAuth":[103863],"BadExtraData":[103788],"BlockNumberMatches":[103857],"BondTransferFailed":[103785],"CannotDefendRootClaim":[103791],"Claim":[104213],"ClaimAboveSplit":[103833],"ClaimAlreadyExists":[103794],"ClaimAlreadyResolved":[103830],"Clock":[104121],"ClockNotExpired":[103806],"ClockTimeExceeded":[103803],"DuplicateStep":[103845],"Duration":[104245],"FaultDisputeGame":[102913],"GameAlreadyExists":[103767],"GameDepthExceeded":[103809],"GameId":[104175],"GameNotInProgress":[103800],"GameStatus":[104325],"GameType":[104305],"GameTypes":[104365],"Hash":[104260],"IAnchorStateRegistry":[103136],"IBigStepper":[103161],"IDelayedWETH":[103229],"IFaultDisputeGame":[103624],"IInitializable":[103632],"IncorrectBondAmount":[103779],"InvalidClockExtension":[103839],"InvalidDisputedClaimIndex":[103797],"InvalidHeaderRLP":[103854],"InvalidLocalIdent":[103824],"InvalidOutputRootProof":[103851],"InvalidParent":[103812],"InvalidPrestate":[103815],"InvalidSplitDepth":[103836],"L1HeadTooOld":[103821],"L2BlockNumberChallenged":[103860],"LibClaim":[104243],"LibClock":[104173],"LibDuration":[104258],"LibGameId":[104211],"LibGameType":[104318],"LibHash":[104273],"LibPosition":[104084],"LibTimestamp":[104288],"LibVMStatus":[104303],"LocalPreimageKey":[104421],"MaxDepthTooLarge":[103842],"NoCreditToClaim":[103782],"NoImplementation":[103761],"OutOfOrderResolution":[103827],"OutputRoot":[104331],"PermissionedDisputeGame":[103106],"Position":[103871],"Timestamp":[104275],"UnexpectedRootClaim":[103773],"VMStatus":[104290],"VMStatuses":[104399],"ValidStep":[103818]},"nodeType":"SourceUnit","src":"32:5289:173","nodes":[{"id":102915,"nodeType":"PragmaDirective","src":"32:23:173","nodes":[],"literals":["solidity","0.8",".15"]},{"id":102917,"nodeType":"ImportDirective","src":"57:71:173","nodes":[],"absolutePath":"src/dispute/interfaces/IDelayedWETH.sol","file":"src/dispute/interfaces/IDelayedWETH.sol","nameLocation":"-1:-1:-1","scope":103107,"sourceUnit":103230,"symbolAliases":[{"foreign":{"id":102916,"name":"IDelayedWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103229,"src":"66:12:173","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":102919,"nodeType":"ImportDirective","src":"129:87:173","nodes":[],"absolutePath":"src/dispute/interfaces/IAnchorStateRegistry.sol","file":"src/dispute/interfaces/IAnchorStateRegistry.sol","nameLocation":"-1:-1:-1","scope":103107,"sourceUnit":103137,"symbolAliases":[{"foreign":{"id":102918,"name":"IAnchorStateRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103136,"src":"138:20:173","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":102924,"nodeType":"ImportDirective","src":"217:116:173","nodes":[],"absolutePath":"src/dispute/FaultDisputeGame.sol","file":"src/dispute/FaultDisputeGame.sol","nameLocation":"-1:-1:-1","scope":103107,"sourceUnit":102914,"symbolAliases":[{"foreign":{"id":102920,"name":"FaultDisputeGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102913,"src":"226:16:173","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":102921,"name":"IFaultDisputeGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103624,"src":"244:17:173","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":102922,"name":"IBigStepper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103161,"src":"263:11:173","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":102923,"name":"IInitializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103632,"src":"276:14:173","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":102925,"nodeType":"ImportDirective","src":"334:35:173","nodes":[],"absolutePath":"src/dispute/lib/Types.sol","file":"src/dispute/lib/Types.sol","nameLocation":"-1:-1:-1","scope":103107,"sourceUnit":104422,"symbolAliases":[],"unitAlias":""},{"id":102926,"nodeType":"ImportDirective","src":"370:36:173","nodes":[],"absolutePath":"src/dispute/lib/Errors.sol","file":"src/dispute/lib/Errors.sol","nameLocation":"-1:-1:-1","scope":103107,"sourceUnit":103864,"symbolAliases":[],"unitAlias":""},{"id":103106,"nodeType":"ContractDefinition","src":"1187:4133:173","nodes":[{"id":102932,"nodeType":"VariableDeclaration","src":"1348:35:173","nodes":[],"constant":false,"documentation":{"id":102930,"nodeType":"StructuredDocumentation","src":"1246:97:173","text":"@notice The proposer role is allowed to create proposals and participate in the dispute game."},"mutability":"immutable","name":"PROPOSER","nameLocation":"1375:8:173","scope":103106,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102931,"name":"address","nodeType":"ElementaryTypeName","src":"1348:7:173","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"id":102935,"nodeType":"VariableDeclaration","src":"1473:37:173","nodes":[],"constant":false,"documentation":{"id":102933,"nodeType":"StructuredDocumentation","src":"1390:78:173","text":"@notice The challenger role is allowed to participate in the dispute game."},"mutability":"immutable","name":"CHALLENGER","nameLocation":"1500:10:173","scope":103106,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102934,"name":"address","nodeType":"ElementaryTypeName","src":"1473:7:173","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"id":102956,"nodeType":"ModifierDefinition","src":"1602:153:173","nodes":[],"body":{"id":102955,"nodeType":"Block","src":"1628:127:173","nodes":[],"statements":[{"condition":{"id":102948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1642:53:173","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":102946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":102941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":102938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1644:3:173","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":102939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1644:10:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":102940,"name":"PROPOSER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102932,"src":"1658:8:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1644:22:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":102945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":102942,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1670:3:173","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":102943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1670:10:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":102944,"name":"CHALLENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102935,"src":"1684:10:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1670:24:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1644:50:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":102947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:52:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102953,"nodeType":"IfStatement","src":"1638:100:173","trueBody":{"id":102952,"nodeType":"Block","src":"1697:41:173","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":102949,"name":"BadAuth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103863,"src":"1718:7:173","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":102950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1718:9:173","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":102951,"nodeType":"RevertStatement","src":"1711:16:173"}]}},{"id":102954,"nodeType":"PlaceholderStatement","src":"1747:1:173"}]},"documentation":{"id":102936,"nodeType":"StructuredDocumentation","src":"1517:80:173","text":"@notice Modifier that gates access to the `challenger` and `proposer` roles."},"name":"onlyAuthorized","nameLocation":"1611:14:173","parameters":{"id":102937,"nodeType":"ParameterList","parameters":[],"src":"1625:2:173"},"virtual":false,"visibility":"internal"},{"id":103012,"nodeType":"FunctionDefinition","src":"2763:767:173","nodes":[],"body":{"id":103011,"nodeType":"Block","src":"3459:71:173","nodes":[],"statements":[{"expression":{"id":103005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103003,"name":"PROPOSER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102932,"src":"3469:8:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":103004,"name":"_proposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102986,"src":"3480:9:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3469:20:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":103006,"nodeType":"ExpressionStatement","src":"3469:20:173"},{"expression":{"id":103009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103007,"name":"CHALLENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102935,"src":"3499:10:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":103008,"name":"_challenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102988,"src":"3512:11:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3499:24:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":103010,"nodeType":"ExpressionStatement","src":"3499:24:173"}]},"documentation":{"id":102957,"nodeType":"StructuredDocumentation","src":"1761:997:173","text":"@param _gameType The type ID of the game.\n @param _absolutePrestate The absolute prestate of the instruction trace.\n @param _maxGameDepth The maximum depth of bisection.\n @param _splitDepth The final depth of the output bisection portion of the game.\n @param _clockExtension The clock extension to perform when the remaining duration is less than the extension.\n @param _maxClockDuration The maximum amount of time that may accumulate on a team's chess clock.\n @param _vm An onchain VM that performs single instruction steps on an FPP trace.\n @param _weth WETH contract for holding ETH.\n @param _anchorStateRegistry The contract that stores the anchor state for each game type.\n @param _l2ChainId Chain ID of the L2 network this contract argues about.\n @param _proposer Address that is allowed to create instances of this contract.\n @param _challenger Address that is allowed to challenge instances of this contract."},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":102991,"name":"_gameType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102960,"src":"3198:9:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$104305","typeString":"GameType"}},{"id":102992,"name":"_absolutePrestate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102963,"src":"3221:17:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"}},{"id":102993,"name":"_maxGameDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102965,"src":"3252:13:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":102994,"name":"_splitDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102967,"src":"3279:11:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":102995,"name":"_clockExtension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102970,"src":"3304:15:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Duration_$104245","typeString":"Duration"}},{"id":102996,"name":"_maxClockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102973,"src":"3333:17:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Duration_$104245","typeString":"Duration"}},{"id":102997,"name":"_vm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102976,"src":"3364:3:173","typeDescriptions":{"typeIdentifier":"t_contract$_IBigStepper_$103161","typeString":"contract IBigStepper"}},{"id":102998,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102979,"src":"3381:5:173","typeDescriptions":{"typeIdentifier":"t_contract$_IDelayedWETH_$103229","typeString":"contract IDelayedWETH"}},{"id":102999,"name":"_anchorStateRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102982,"src":"3400:20:173","typeDescriptions":{"typeIdentifier":"t_contract$_IAnchorStateRegistry_$103136","typeString":"contract IAnchorStateRegistry"}},{"id":103000,"name":"_l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102984,"src":"3434:10:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":103001,"kind":"baseConstructorSpecifier","modifierName":{"id":102990,"name":"FaultDisputeGame","nodeType":"IdentifierPath","referencedDeclaration":102913,"src":"3168:16:173"},"nodeType":"ModifierInvocation","src":"3168:286:173"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":102989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102960,"mutability":"mutable","name":"_gameType","nameLocation":"2793:9:173","nodeType":"VariableDeclaration","scope":103012,"src":"2784:18:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$104305","typeString":"GameType"},"typeName":{"id":102959,"nodeType":"UserDefinedTypeName","pathNode":{"id":102958,"name":"GameType","nodeType":"IdentifierPath","referencedDeclaration":104305,"src":"2784:8:173"},"referencedDeclaration":104305,"src":"2784:8:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$104305","typeString":"GameType"}},"visibility":"internal"},{"constant":false,"id":102963,"mutability":"mutable","name":"_absolutePrestate","nameLocation":"2818:17:173","nodeType":"VariableDeclaration","scope":103012,"src":"2812:23:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"},"typeName":{"id":102962,"nodeType":"UserDefinedTypeName","pathNode":{"id":102961,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":104213,"src":"2812:5:173"},"referencedDeclaration":104213,"src":"2812:5:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"}},"visibility":"internal"},{"constant":false,"id":102965,"mutability":"mutable","name":"_maxGameDepth","nameLocation":"2853:13:173","nodeType":"VariableDeclaration","scope":103012,"src":"2845:21:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102964,"name":"uint256","nodeType":"ElementaryTypeName","src":"2845:7:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102967,"mutability":"mutable","name":"_splitDepth","nameLocation":"2884:11:173","nodeType":"VariableDeclaration","scope":103012,"src":"2876:19:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2876:7:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102970,"mutability":"mutable","name":"_clockExtension","nameLocation":"2914:15:173","nodeType":"VariableDeclaration","scope":103012,"src":"2905:24:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Duration_$104245","typeString":"Duration"},"typeName":{"id":102969,"nodeType":"UserDefinedTypeName","pathNode":{"id":102968,"name":"Duration","nodeType":"IdentifierPath","referencedDeclaration":104245,"src":"2905:8:173"},"referencedDeclaration":104245,"src":"2905:8:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Duration_$104245","typeString":"Duration"}},"visibility":"internal"},{"constant":false,"id":102973,"mutability":"mutable","name":"_maxClockDuration","nameLocation":"2948:17:173","nodeType":"VariableDeclaration","scope":103012,"src":"2939:26:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Duration_$104245","typeString":"Duration"},"typeName":{"id":102972,"nodeType":"UserDefinedTypeName","pathNode":{"id":102971,"name":"Duration","nodeType":"IdentifierPath","referencedDeclaration":104245,"src":"2939:8:173"},"referencedDeclaration":104245,"src":"2939:8:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Duration_$104245","typeString":"Duration"}},"visibility":"internal"},{"constant":false,"id":102976,"mutability":"mutable","name":"_vm","nameLocation":"2987:3:173","nodeType":"VariableDeclaration","scope":103012,"src":"2975:15:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBigStepper_$103161","typeString":"contract IBigStepper"},"typeName":{"id":102975,"nodeType":"UserDefinedTypeName","pathNode":{"id":102974,"name":"IBigStepper","nodeType":"IdentifierPath","referencedDeclaration":103161,"src":"2975:11:173"},"referencedDeclaration":103161,"src":"2975:11:173","typeDescriptions":{"typeIdentifier":"t_contract$_IBigStepper_$103161","typeString":"contract IBigStepper"}},"visibility":"internal"},{"constant":false,"id":102979,"mutability":"mutable","name":"_weth","nameLocation":"3013:5:173","nodeType":"VariableDeclaration","scope":103012,"src":"3000:18:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDelayedWETH_$103229","typeString":"contract IDelayedWETH"},"typeName":{"id":102978,"nodeType":"UserDefinedTypeName","pathNode":{"id":102977,"name":"IDelayedWETH","nodeType":"IdentifierPath","referencedDeclaration":103229,"src":"3000:12:173"},"referencedDeclaration":103229,"src":"3000:12:173","typeDescriptions":{"typeIdentifier":"t_contract$_IDelayedWETH_$103229","typeString":"contract IDelayedWETH"}},"visibility":"internal"},{"constant":false,"id":102982,"mutability":"mutable","name":"_anchorStateRegistry","nameLocation":"3049:20:173","nodeType":"VariableDeclaration","scope":103012,"src":"3028:41:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAnchorStateRegistry_$103136","typeString":"contract IAnchorStateRegistry"},"typeName":{"id":102981,"nodeType":"UserDefinedTypeName","pathNode":{"id":102980,"name":"IAnchorStateRegistry","nodeType":"IdentifierPath","referencedDeclaration":103136,"src":"3028:20:173"},"referencedDeclaration":103136,"src":"3028:20:173","typeDescriptions":{"typeIdentifier":"t_contract$_IAnchorStateRegistry_$103136","typeString":"contract IAnchorStateRegistry"}},"visibility":"internal"},{"constant":false,"id":102984,"mutability":"mutable","name":"_l2ChainId","nameLocation":"3087:10:173","nodeType":"VariableDeclaration","scope":103012,"src":"3079:18:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3079:7:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102986,"mutability":"mutable","name":"_proposer","nameLocation":"3115:9:173","nodeType":"VariableDeclaration","scope":103012,"src":"3107:17:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102985,"name":"address","nodeType":"ElementaryTypeName","src":"3107:7:173","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102988,"mutability":"mutable","name":"_challenger","nameLocation":"3142:11:173","nodeType":"VariableDeclaration","scope":103012,"src":"3134:19:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102987,"name":"address","nodeType":"ElementaryTypeName","src":"3134:7:173","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2774:385:173"},"returnParameters":{"id":103002,"nodeType":"ParameterList","parameters":[],"src":"3459:0:173"},"scope":103106,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":103037,"nodeType":"FunctionDefinition","src":"3574:269:173","nodes":[],"body":{"id":103036,"nodeType":"Block","src":"3772:71:173","nodes":[],"statements":[{"expression":{"arguments":[{"id":103030,"name":"_claimIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103015,"src":"3793:11:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":103031,"name":"_isAttack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103017,"src":"3806:9:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":103032,"name":"_stateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103019,"src":"3817:10:173","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":103033,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103021,"src":"3829:6:173","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":103027,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3782:5:173","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PermissionedDisputeGame_$103106_$","typeString":"type(contract super PermissionedDisputeGame)"}},"id":103029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"step","nodeType":"MemberAccess","referencedDeclaration":100952,"src":"3782:10:173","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (uint256,bool,bytes calldata,bytes calldata)"}},"id":103034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3782:54:173","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103035,"nodeType":"ExpressionStatement","src":"3782:54:173"}]},"baseFunctions":[100952],"documentation":{"id":103013,"nodeType":"StructuredDocumentation","src":"3536:33:173","text":"@inheritdoc IFaultDisputeGame"},"functionSelector":"d8cc1a3c","implemented":true,"kind":"function","modifiers":[{"id":103025,"kind":"modifierInvocation","modifierName":{"id":103024,"name":"onlyAuthorized","nodeType":"IdentifierPath","referencedDeclaration":102956,"src":"3753:14:173"},"nodeType":"ModifierInvocation","src":"3753:14:173"}],"name":"step","nameLocation":"3583:4:173","overrides":{"id":103023,"nodeType":"OverrideSpecifier","overrides":[],"src":"3736:8:173"},"parameters":{"id":103022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103015,"mutability":"mutable","name":"_claimIndex","nameLocation":"3605:11:173","nodeType":"VariableDeclaration","scope":103037,"src":"3597:19:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103014,"name":"uint256","nodeType":"ElementaryTypeName","src":"3597:7:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103017,"mutability":"mutable","name":"_isAttack","nameLocation":"3631:9:173","nodeType":"VariableDeclaration","scope":103037,"src":"3626:14:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103016,"name":"bool","nodeType":"ElementaryTypeName","src":"3626:4:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":103019,"mutability":"mutable","name":"_stateData","nameLocation":"3665:10:173","nodeType":"VariableDeclaration","scope":103037,"src":"3650:25:173","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103018,"name":"bytes","nodeType":"ElementaryTypeName","src":"3650:5:173","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":103021,"mutability":"mutable","name":"_proof","nameLocation":"3700:6:173","nodeType":"VariableDeclaration","scope":103037,"src":"3685:21:173","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103020,"name":"bytes","nodeType":"ElementaryTypeName","src":"3685:5:173","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3587:125:173"},"returnParameters":{"id":103026,"nodeType":"ParameterList","parameters":[],"src":"3772:0:173"},"scope":103106,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":103064,"nodeType":"FunctionDefinition","src":"4241:273:173","nodes":[],"body":{"id":103063,"nodeType":"Block","src":"4440:74:173","nodes":[],"statements":[{"expression":{"arguments":[{"id":103057,"name":"_disputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103041,"src":"4461:9:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"}},{"id":103058,"name":"_challengeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103043,"src":"4472:15:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":103059,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103046,"src":"4489:6:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"}},{"id":103060,"name":"_isAttack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103048,"src":"4497:9:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":103054,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4450:5:173","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PermissionedDisputeGame_$103106_$","typeString":"type(contract super PermissionedDisputeGame)"}},"id":103056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"move","nodeType":"MemberAccess","referencedDeclaration":101221,"src":"4450:10:173","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Claim_$104213_$_t_uint256_$_t_userDefinedValueType$_Claim_$104213_$_t_bool_$returns$__$","typeString":"function (Claim,uint256,Claim,bool)"}},"id":103061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4450:57:173","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103062,"nodeType":"ExpressionStatement","src":"4450:57:173"}]},"baseFunctions":[101221],"documentation":{"id":103038,"nodeType":"StructuredDocumentation","src":"3849:387:173","text":"@notice Generic move function, used for both `attack` and `defend` moves.\n @notice _disputed The disputed `Claim`.\n @param _challengeIndex The index of the claim being moved against. This must match the `_disputed` claim.\n @param _claim The claim at the next logical position in the game.\n @param _isAttack Whether or not the move is an attack or defense."},"functionSelector":"6f034409","implemented":true,"kind":"function","modifiers":[{"id":103052,"kind":"modifierInvocation","modifierName":{"id":103051,"name":"onlyAuthorized","nodeType":"IdentifierPath","referencedDeclaration":102956,"src":"4421:14:173"},"nodeType":"ModifierInvocation","src":"4421:14:173"}],"name":"move","nameLocation":"4250:4:173","overrides":{"id":103050,"nodeType":"OverrideSpecifier","overrides":[],"src":"4404:8:173"},"parameters":{"id":103049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103041,"mutability":"mutable","name":"_disputed","nameLocation":"4270:9:173","nodeType":"VariableDeclaration","scope":103064,"src":"4264:15:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"},"typeName":{"id":103040,"nodeType":"UserDefinedTypeName","pathNode":{"id":103039,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":104213,"src":"4264:5:173"},"referencedDeclaration":104213,"src":"4264:5:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"}},"visibility":"internal"},{"constant":false,"id":103043,"mutability":"mutable","name":"_challengeIndex","nameLocation":"4297:15:173","nodeType":"VariableDeclaration","scope":103064,"src":"4289:23:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103042,"name":"uint256","nodeType":"ElementaryTypeName","src":"4289:7:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103046,"mutability":"mutable","name":"_claim","nameLocation":"4328:6:173","nodeType":"VariableDeclaration","scope":103064,"src":"4322:12:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"},"typeName":{"id":103045,"nodeType":"UserDefinedTypeName","pathNode":{"id":103044,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":104213,"src":"4322:5:173"},"referencedDeclaration":104213,"src":"4322:5:173","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$104213","typeString":"Claim"}},"visibility":"internal"},{"constant":false,"id":103048,"mutability":"mutable","name":"_isAttack","nameLocation":"4349:9:173","nodeType":"VariableDeclaration","scope":103064,"src":"4344:14:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103047,"name":"bool","nodeType":"ElementaryTypeName","src":"4344:4:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4254:110:173"},"returnParameters":{"id":103053,"nodeType":"ParameterList","parameters":[],"src":"4440:0:173"},"scope":103106,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":103083,"nodeType":"FunctionDefinition","src":"4555:243:173","nodes":[],"body":{"id":103082,"nodeType":"Block","src":"4601:197:173","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":103072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":103069,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"4684:2:173","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":103070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"4684:9:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":103071,"name":"PROPOSER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102932,"src":"4697:8:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4684:21:173","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":103076,"nodeType":"IfStatement","src":"4680:43:173","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":103073,"name":"BadAuth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103863,"src":"4714:7:173","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":103074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4714:9:173","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103075,"nodeType":"RevertStatement","src":"4707:16:173"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":103077,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4773:5:173","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PermissionedDisputeGame_$103106_$","typeString":"type(contract super PermissionedDisputeGame)"}},"id":103079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":100750,"src":"4773:16:173","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":103080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4773:18:173","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103081,"nodeType":"ExpressionStatement","src":"4773:18:173"}]},"baseFunctions":[100750],"documentation":{"id":103065,"nodeType":"StructuredDocumentation","src":"4520:30:173","text":"@inheritdoc IInitializable"},"functionSelector":"8129fc1c","implemented":true,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"4564:10:173","overrides":{"id":103067,"nodeType":"OverrideSpecifier","overrides":[],"src":"4592:8:173"},"parameters":{"id":103066,"nodeType":"ParameterList","parameters":[],"src":"4574:2:173"},"returnParameters":{"id":103068,"nodeType":"ParameterList","parameters":[],"src":"4601:0:173"},"scope":103106,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":103094,"nodeType":"FunctionDefinition","src":"5058:99:173","nodes":[],"body":{"id":103093,"nodeType":"Block","src":"5120:37:173","nodes":[],"statements":[{"expression":{"id":103091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103089,"name":"proposer_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103087,"src":"5130:9:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":103090,"name":"PROPOSER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102932,"src":"5142:8:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5130:20:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":103092,"nodeType":"ExpressionStatement","src":"5130:20:173"}]},"documentation":{"id":103084,"nodeType":"StructuredDocumentation","src":"5012:41:173","text":"@notice Returns the proposer address."},"functionSelector":"a8e4fb90","implemented":true,"kind":"function","modifiers":[],"name":"proposer","nameLocation":"5067:8:173","parameters":{"id":103085,"nodeType":"ParameterList","parameters":[],"src":"5075:2:173"},"returnParameters":{"id":103088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103087,"mutability":"mutable","name":"proposer_","nameLocation":"5109:9:173","nodeType":"VariableDeclaration","scope":103094,"src":"5101:17:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103086,"name":"address","nodeType":"ElementaryTypeName","src":"5101:7:173","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5100:19:173"},"scope":103106,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103105,"nodeType":"FunctionDefinition","src":"5211:107:173","nodes":[],"body":{"id":103104,"nodeType":"Block","src":"5277:41:173","nodes":[],"statements":[{"expression":{"id":103102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103100,"name":"challenger_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103098,"src":"5287:11:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":103101,"name":"CHALLENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102935,"src":"5301:10:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5287:24:173","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":103103,"nodeType":"ExpressionStatement","src":"5287:24:173"}]},"documentation":{"id":103095,"nodeType":"StructuredDocumentation","src":"5163:43:173","text":"@notice Returns the challenger address."},"functionSelector":"534db0e2","implemented":true,"kind":"function","modifiers":[],"name":"challenger","nameLocation":"5220:10:173","parameters":{"id":103096,"nodeType":"ParameterList","parameters":[],"src":"5230:2:173"},"returnParameters":{"id":103099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103098,"mutability":"mutable","name":"challenger_","nameLocation":"5264:11:173","nodeType":"VariableDeclaration","scope":103105,"src":"5256:19:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103097,"name":"address","nodeType":"ElementaryTypeName","src":"5256:7:173","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5255:21:173"},"scope":103106,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":102928,"name":"FaultDisputeGame","nodeType":"IdentifierPath","referencedDeclaration":102913,"src":"1223:16:173"},"id":102929,"nodeType":"InheritanceSpecifier","src":"1223:16:173"}],"canonicalName":"PermissionedDisputeGame","contractDependencies":[],"contractKind":"contract","documentation":{"id":102927,"nodeType":"StructuredDocumentation","src":"408:779:173","text":"@title PermissionedDisputeGame\n @notice PermissionedDisputeGame is a contract that inherits from `FaultDisputeGame`, and contains two roles:\n         - The `challenger` role, which is allowed to challenge a dispute.\n         - The `proposer` role, which is allowed to create proposals and participate in their game.\n         This contract exists as a way for networks to support the fault proof iteration of the OptimismPortal\n         contract without needing to support a fully permissionless system. Permissionless systems can introduce\n         costs that certain networks may not wish to support. This contract can also be used as a fallback mechanism\n         in case of a failure in the permissionless fault proof system in the stage one release."},"fullyImplemented":true,"linearizedBaseContracts":[103106,102913,113738,61016,103624,103317,103632],"name":"PermissionedDisputeGame","nameLocation":"1196:23:173","scope":103107,"usedErrors":[103773,103776,103779,103782,103785,103791,103794,103797,103800,103803,103806,103809,103812,103815,103818,103824,103827,103830,103833,103836,103839,103842,103845,103848,103851,103854,103857,103860,103863,108483,108486,108489,108492,108495,108498]}],"license":"MIT"},"id":173}