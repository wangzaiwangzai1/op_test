{"abi":[{"type":"function","name":"getStorageAt","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"length","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"simulateAndRevert","inputs":[{"name":"targetContract","type":"address","internalType":"address"},{"name":"calldataPayload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50610392806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635624b25b1461003b578063b4faba0914610064575b600080fd5b61004e610049366004610122565b610079565b60405161005b9190610144565b60405180910390f35b6100776100723660046101e6565b6100ff565b005b60606000610088836020610310565b67ffffffffffffffff8111156100a0576100a06101b7565b6040519080825280601f01601f1916602001820160405280156100ca576020820181803683370190505b50905060005b838110156100f75784810154602080830284010152806100ef8161034d565b9150506100d0565b509392505050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b6000806040838503121561013557600080fd5b50508035926020909101359150565b600060208083528351808285015260005b8181101561017157858101830151858201604001528201610155565b81811115610183576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156101f957600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461021d57600080fd5b9150602083013567ffffffffffffffff8082111561023a57600080fd5b818501915085601f83011261024e57600080fd5b813581811115610260576102606101b7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156102a6576102a66101b7565b816040528281528860208487010111156102bf57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610348576103486102e1565b500290565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361037e5761037e6102e1565b506001019056fea164736f6c634300080f000a","sourceMap":"315:1913:85:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c80635624b25b1461003b578063b4faba0914610064575b600080fd5b61004e610049366004610122565b610079565b60405161005b9190610144565b60405180910390f35b6100776100723660046101e6565b6100ff565b005b60606000610088836020610310565b67ffffffffffffffff8111156100a0576100a06101b7565b6040519080825280601f01601f1916602001820160405280156100ca576020820181803683370190505b50905060005b838110156100f75784810154602080830284010152806100ef8161034d565b9150506100d0565b509392505050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b6000806040838503121561013557600080fd5b50508035926020909101359150565b600060208083528351808285015260005b8181101561017157858101830151858201604001528201610155565b81811115610183576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156101f957600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461021d57600080fd5b9150602083013567ffffffffffffffff8082111561023a57600080fd5b818501915085601f83011261024e57600080fd5b813581811115610260576102606101b7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156102a6576102a66101b7565b816040528281528860208487010111156102bf57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610348576103486102e1565b500290565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361037e5761037e6102e1565b506001019056fea164736f6c634300080f000a","sourceMap":"315:1913:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:464;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1740:486;;;;;;:::i;:::-;;:::i;:::-;;643:464;718:12;742:19;774:11;:6;783:2;774:11;:::i;:::-;764:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:22:85;;742:44;;801:13;796:282;828:6;820:5;:14;796:282;;;964:18;;;958:25;1041:4;1030:16;;;1007:40;;;1000:54;976:5;836:7;976:5;836:7;:::i;:::-;;;;796:282;;;-1:-1:-1;1094:6:85;643:464;-1:-1:-1;;;643:464:85:o;1740:486::-;2025:1;2022;2004:15;1998:22;1991:4;1974:15;1970:26;1954:14;1947:5;1934:93;2054:7;2048:4;2041:21;;2088:16;2082:4;2075:30;2142:16;2139:1;2133:4;2118:41;2204:4;2186:16;2182:27;2179:1;2172:38;14:248:383;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:383;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:383:o;267:654::-;377:4;406:2;435;424:9;417:21;467:6;461:13;510:6;505:2;494:9;490:18;483:34;535:1;545:140;559:6;556:1;553:13;545:140;;;654:14;;;650:23;;644:30;620:17;;;639:2;616:26;609:66;574:10;;545:140;;;703:6;700:1;697:13;694:91;;;773:1;768:2;759:6;748:9;744:22;740:31;733:42;694:91;-1:-1:-1;837:2:383;825:15;842:66;821:88;806:104;;;;912:2;802:113;;267:654;-1:-1:-1;;;267:654:383:o;926:184::-;978:77;975:1;968:88;1075:4;1072:1;1065:15;1099:4;1096:1;1089:15;1115:1177;1192:6;1200;1253:2;1241:9;1232:7;1228:23;1224:32;1221:52;;;1269:1;1266;1259:12;1221:52;1308:9;1295:23;1358:42;1351:5;1347:54;1340:5;1337:65;1327:93;;1416:1;1413;1406:12;1327:93;1439:5;-1:-1:-1;1495:2:383;1480:18;;1467:32;1518:18;1548:14;;;1545:34;;;1575:1;1572;1565:12;1545:34;1613:6;1602:9;1598:22;1588:32;;1658:7;1651:4;1647:2;1643:13;1639:27;1629:55;;1680:1;1677;1670:12;1629:55;1716:2;1703:16;1738:2;1734;1731:10;1728:36;;;1744:18;;:::i;:::-;1878:2;1872:9;1940:4;1932:13;;1783:66;1928:22;;;1952:2;1924:31;1920:40;1908:53;;;1976:18;;;1996:22;;;1973:46;1970:72;;;2022:18;;:::i;:::-;2062:10;2058:2;2051:22;2097:2;2089:6;2082:18;2137:7;2132:2;2127;2123;2119:11;2115:20;2112:33;2109:53;;;2158:1;2155;2148:12;2109:53;2214:2;2209;2205;2201:11;2196:2;2188:6;2184:15;2171:46;2259:1;2254:2;2249;2241:6;2237:15;2233:24;2226:35;2280:6;2270:16;;;;;;;1115:1177;;;;;:::o;2297:184::-;2349:77;2346:1;2339:88;2446:4;2443:1;2436:15;2470:4;2467:1;2460:15;2486:228;2526:7;2652:1;2584:66;2580:74;2577:1;2574:81;2569:1;2562:9;2555:17;2551:105;2548:131;;;2659:18;;:::i;:::-;-1:-1:-1;2699:9:383;;2486:228::o;2719:195::-;2758:3;2789:66;2782:5;2779:77;2776:103;;2859:18;;:::i;:::-;-1:-1:-1;2906:1:383;2895:13;;2719:195::o","linkReferences":{}},"methodIdentifiers":{"getStorageAt(uint256,uint256)":"5624b25b","simulateAndRevert(address,bytes)":"b4faba09"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"details\":\"Reads `length` bytes of storage in the currents contract\",\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegetecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}}},\"title\":\"StorageAccessible - generic base contract that allows callers to access all internal storage.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":\"StorageAccessible\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x36853adb266c2ab7d3c612aca799441a86bd15d9e1d24fc6c70d63f5c2df3aaf\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3f210f47e032444049040d2929b32e02089aac1d05b07dcd77ee34bb63505dfa\",\"dweb:/ipfs/QmbE8GXFAbthieTL51S2XPF5URyPaj1tDubVuhztkSoiPo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStorageAt","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"targetContract","type":"address"},{"internalType":"bytes","name":"calldataPayload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"simulateAndRevert"}],"devdoc":{"kind":"dev","methods":{"getStorageAt(uint256,uint256)":{"details":"Reads `length` bytes of storage in the currents contract","params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegetecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/safe-contracts/contracts/common/StorageAccessible.sol":"StorageAccessible"},"evmVersion":"london","libraries":{}},"sources":{"lib/safe-contracts/contracts/common/StorageAccessible.sol":{"keccak256":"0x36853adb266c2ab7d3c612aca799441a86bd15d9e1d24fc6c70d63f5c2df3aaf","urls":["bzz-raw://3f210f47e032444049040d2929b32e02089aac1d05b07dcd77ee34bb63505dfa","dweb:/ipfs/QmbE8GXFAbthieTL51S2XPF5URyPaj1tDubVuhztkSoiPo"],"license":"LGPL-3.0-only"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","notice":"See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol"},"devdoc":{"version":1,"kind":"dev","methods":{"getStorageAt(uint256,uint256)":{"details":"Reads `length` bytes of storage in the currents contract","params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegetecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}}},"title":"StorageAccessible - generic base contract that allows callers to access all internal storage."},"ast":{"absolutePath":"lib/safe-contracts/contracts/common/StorageAccessible.sol","id":59798,"exportedSymbols":{"StorageAccessible":[59797]},"nodeType":"SourceUnit","src":"42:2187:85","nodes":[{"id":59750,"nodeType":"PragmaDirective","src":"42:31:85","nodes":[],"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},{"id":59797,"nodeType":"ContractDefinition","src":"315:1913:85","nodes":[{"id":59786,"nodeType":"FunctionDefinition","src":"643:464:85","nodes":[],"body":{"id":59785,"nodeType":"Block","src":"732:375:85","nodes":[],"statements":[{"assignments":[59762],"declarations":[{"constant":false,"id":59762,"mutability":"mutable","name":"result","nameLocation":"755:6:85","nodeType":"VariableDeclaration","scope":59785,"src":"742:19:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59761,"name":"bytes","nodeType":"ElementaryTypeName","src":"742:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":59769,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":59765,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59756,"src":"774:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":59766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"783:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"774:11:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":59764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"764:9:85","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":59763,"name":"bytes","nodeType":"ElementaryTypeName","src":"768:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":59768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"764:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"742:44:85"},{"body":{"id":59781,"nodeType":"Block","src":"845:233:85","statements":[{"AST":{"nodeType":"YulBlock","src":"928:140:85","statements":[{"nodeType":"YulVariableDeclaration","src":"946:37:85","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"968:6:85"},{"name":"index","nodeType":"YulIdentifier","src":"976:5:85"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"964:3:85"},"nodeType":"YulFunctionCall","src":"964:18:85"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"958:5:85"},"nodeType":"YulFunctionCall","src":"958:25:85"},"variables":[{"name":"word","nodeType":"YulTypedName","src":"950:4:85","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1015:6:85"},{"kind":"number","nodeType":"YulLiteral","src":"1023:4:85","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1011:3:85"},"nodeType":"YulFunctionCall","src":"1011:17:85"},{"arguments":[{"name":"index","nodeType":"YulIdentifier","src":"1034:5:85"},{"kind":"number","nodeType":"YulLiteral","src":"1041:4:85","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1030:3:85"},"nodeType":"YulFunctionCall","src":"1030:16:85"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1007:3:85"},"nodeType":"YulFunctionCall","src":"1007:40:85"},{"name":"word","nodeType":"YulIdentifier","src":"1049:4:85"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1000:6:85"},"nodeType":"YulFunctionCall","src":"1000:54:85"},"nodeType":"YulExpressionStatement","src":"1000:54:85"}]},"evmVersion":"london","externalReferences":[{"declaration":59771,"isOffset":false,"isSlot":false,"src":"1034:5:85","valueSize":1},{"declaration":59771,"isOffset":false,"isSlot":false,"src":"976:5:85","valueSize":1},{"declaration":59754,"isOffset":false,"isSlot":false,"src":"968:6:85","valueSize":1},{"declaration":59762,"isOffset":false,"isSlot":false,"src":"1015:6:85","valueSize":1}],"id":59780,"nodeType":"InlineAssembly","src":"919:149:85"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":59774,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59771,"src":"820:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":59775,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59756,"src":"828:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"820:14:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":59782,"initializationExpression":{"assignments":[59771],"declarations":[{"constant":false,"id":59771,"mutability":"mutable","name":"index","nameLocation":"809:5:85","nodeType":"VariableDeclaration","scope":59782,"src":"801:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59770,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":59773,"initialValue":{"hexValue":"30","id":59772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"817:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"801:17:85"},"loopExpression":{"expression":{"id":59778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"836:7:85","subExpression":{"id":59777,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59771,"src":"836:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59779,"nodeType":"ExpressionStatement","src":"836:7:85"},"nodeType":"ForStatement","src":"796:282:85"},{"expression":{"id":59783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59762,"src":"1094:6:85","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":59760,"id":59784,"nodeType":"Return","src":"1087:13:85"}]},"documentation":{"id":59752,"nodeType":"StructuredDocumentation","src":"348:290:85","text":" @dev Reads `length` bytes of storage in the currents contract\n @param offset - the offset in the current contract's storage in words to start reading from\n @param length - the number of words (32 bytes) of data to read\n @return the bytes that were read."},"functionSelector":"5624b25b","implemented":true,"kind":"function","modifiers":[],"name":"getStorageAt","nameLocation":"652:12:85","parameters":{"id":59757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59754,"mutability":"mutable","name":"offset","nameLocation":"673:6:85","nodeType":"VariableDeclaration","scope":59786,"src":"665:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59753,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59756,"mutability":"mutable","name":"length","nameLocation":"689:6:85","nodeType":"VariableDeclaration","scope":59786,"src":"681:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59755,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"664:32:85"},"returnParameters":{"id":59760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":59786,"src":"718:12:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59758,"name":"bytes","nodeType":"ElementaryTypeName","src":"718:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"717:14:85"},"scope":59797,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":59796,"nodeType":"FunctionDefinition","src":"1740:486:85","nodes":[],"body":{"id":59795,"nodeType":"Block","src":"1830:396:85","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1905:315:85","statements":[{"nodeType":"YulVariableDeclaration","src":"1919:108:85","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1947:3:85"},"nodeType":"YulFunctionCall","src":"1947:5:85"},{"name":"targetContract","nodeType":"YulIdentifier","src":"1954:14:85"},{"arguments":[{"name":"calldataPayload","nodeType":"YulIdentifier","src":"1974:15:85"},{"kind":"number","nodeType":"YulLiteral","src":"1991:4:85","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:85"},"nodeType":"YulFunctionCall","src":"1970:26:85"},{"arguments":[{"name":"calldataPayload","nodeType":"YulIdentifier","src":"2004:15:85"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1998:5:85"},"nodeType":"YulFunctionCall","src":"1998:22:85"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:85","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2025:1:85","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1934:12:85"},"nodeType":"YulFunctionCall","src":"1934:93:85"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"1923:7:85","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2048:4:85","type":"","value":"0x00"},{"name":"success","nodeType":"YulIdentifier","src":"2054:7:85"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2041:6:85"},"nodeType":"YulFunctionCall","src":"2041:21:85"},"nodeType":"YulExpressionStatement","src":"2041:21:85"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2082:4:85","type":"","value":"0x20"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2088:14:85"},"nodeType":"YulFunctionCall","src":"2088:16:85"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2075:6:85"},"nodeType":"YulFunctionCall","src":"2075:30:85"},"nodeType":"YulExpressionStatement","src":"2075:30:85"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2133:4:85","type":"","value":"0x40"},{"kind":"number","nodeType":"YulLiteral","src":"2139:1:85","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2142:14:85"},"nodeType":"YulFunctionCall","src":"2142:16:85"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2118:14:85"},"nodeType":"YulFunctionCall","src":"2118:41:85"},"nodeType":"YulExpressionStatement","src":"2118:41:85"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2179:1:85","type":"","value":"0"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2186:14:85"},"nodeType":"YulFunctionCall","src":"2186:16:85"},{"kind":"number","nodeType":"YulLiteral","src":"2204:4:85","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2182:3:85"},"nodeType":"YulFunctionCall","src":"2182:27:85"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2172:6:85"},"nodeType":"YulFunctionCall","src":"2172:38:85"},"nodeType":"YulExpressionStatement","src":"2172:38:85"}]},"evmVersion":"london","externalReferences":[{"declaration":59791,"isOffset":false,"isSlot":false,"src":"1974:15:85","valueSize":1},{"declaration":59791,"isOffset":false,"isSlot":false,"src":"2004:15:85","valueSize":1},{"declaration":59789,"isOffset":false,"isSlot":false,"src":"1954:14:85","valueSize":1}],"id":59794,"nodeType":"InlineAssembly","src":"1896:324:85"}]},"documentation":{"id":59787,"nodeType":"StructuredDocumentation","src":"1113:622:85","text":" @dev Performs a delegetecall on a targetContract in the context of self.\n Internally reverts execution to avoid side effects (making it static).\n This method reverts with data equal to `abi.encode(bool(success), bytes(response))`.\n Specifically, the `returndata` after a call to this method will be:\n `success:bool || response.length:uint256 || response:bytes`.\n @param targetContract Address of the contract containing the code to execute.\n @param calldataPayload Calldata that should be sent to the target contract (encoded method name and arguments)."},"functionSelector":"b4faba09","implemented":true,"kind":"function","modifiers":[],"name":"simulateAndRevert","nameLocation":"1749:17:85","parameters":{"id":59792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59789,"mutability":"mutable","name":"targetContract","nameLocation":"1775:14:85","nodeType":"VariableDeclaration","scope":59796,"src":"1767:22:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59788,"name":"address","nodeType":"ElementaryTypeName","src":"1767:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59791,"mutability":"mutable","name":"calldataPayload","nameLocation":"1804:15:85","nodeType":"VariableDeclaration","scope":59796,"src":"1791:28:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59790,"name":"bytes","nodeType":"ElementaryTypeName","src":"1791:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1766:54:85"},"returnParameters":{"id":59793,"nodeType":"ParameterList","parameters":[],"src":"1830:0:85"},"scope":59797,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"StorageAccessible","contractDependencies":[],"contractKind":"contract","documentation":{"id":59751,"nodeType":"StructuredDocumentation","src":"75:240:85","text":"@title StorageAccessible - generic base contract that allows callers to access all internal storage.\n @notice See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol"},"fullyImplemented":true,"linearizedBaseContracts":[59797],"name":"StorageAccessible","nameLocation":"324:17:85","scope":59798,"usedErrors":[]}],"license":"LGPL-3.0-only"},"id":85}