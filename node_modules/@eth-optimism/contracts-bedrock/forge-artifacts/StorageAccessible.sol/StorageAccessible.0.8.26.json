{"abi":[{"type":"function","name":"getStorageAt","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"length","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"simulateAndRevert","inputs":[{"name":"targetContract","type":"address","internalType":"address"},{"name":"calldataPayload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x6080604052348015600e575f80fd5b506103158061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80635624b25b14610038578063b4faba0914610061575b5f80fd5b61004b610046366004610111565b610076565b6040516100589190610131565b60405180910390f35b61007461006f3660046101b1565b6100f2565b005b60605f6100848360206102cc565b67ffffffffffffffff81111561009c5761009c610184565b6040519080825280601f01601f1916602001820160405280156100c6576020820181803683370190505b5090505f5b838110156100e857848101546020808302840101526001016100cb565b5090505b92915050565b5f80825160208401855af4805f52503d6020523d5f60403e60403d015ffd5b5f8060408385031215610122575f80fd5b50508035926020909101359150565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f80604083850312156101c2575f80fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146101e5575f80fd5b9150602083013567ffffffffffffffff811115610200575f80fd5b8301601f81018513610210575f80fd5b803567ffffffffffffffff81111561022a5761022a610184565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff8211171561029657610296610184565b6040528181528282016020018710156102ad575f80fd5b816020840160208301375f602083830101528093505050509250929050565b80820281158282048414176100ec577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffdfea164736f6c634300081a000a","sourceMap":"315:1913:45:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b5060043610610034575f3560e01c80635624b25b14610038578063b4faba0914610061575b5f80fd5b61004b610046366004610111565b610076565b6040516100589190610131565b60405180910390f35b61007461006f3660046101b1565b6100f2565b005b60605f6100848360206102cc565b67ffffffffffffffff81111561009c5761009c610184565b6040519080825280601f01601f1916602001820160405280156100c6576020820181803683370190505b5090505f5b838110156100e857848101546020808302840101526001016100cb565b5090505b92915050565b5f80825160208401855af4805f52503d6020523d5f60403e60403d015ffd5b5f8060408385031215610122575f80fd5b50508035926020909101359150565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f80604083850312156101c2575f80fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146101e5575f80fd5b9150602083013567ffffffffffffffff811115610200575f80fd5b8301601f81018513610210575f80fd5b803567ffffffffffffffff81111561022a5761022a610184565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff8211171561029657610296610184565b6040528181528282016020018710156102ad575f80fd5b816020840160208301375f602083830101528093505050509250929050565b80820281158282048414176100ec577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffdfea164736f6c634300081a000a","sourceMap":"315:1913:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:464;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1740:486;;;;;;:::i;:::-;;:::i;:::-;;643:464;718:12;742:19;774:11;:6;783:2;774:11;:::i;:::-;764:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:22:45;;742:44;;801:13;796:282;828:6;820:5;:14;796:282;;;964:18;;;958:25;1041:4;1030:16;;;1007:40;;;1000:54;836:7;;796:282;;;-1:-1:-1;1094:6:45;-1:-1:-1;643:464:45;;;;;:::o;1740:486::-;2025:1;2022;2004:15;1998:22;1991:4;1974:15;1970:26;1954:14;1947:5;1934:93;2054:7;2048:4;2041:21;;2088:16;2082:4;2075:30;2142:16;2139:1;2133:4;2118:41;2204:4;2186:16;2182:27;2179:1;2172:38;14:346:129;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;204:23:129;;;324:2;309:18;;;296:32;;-1:-1:-1;14:346:129:o;365:475::-;512:2;501:9;494:21;475:4;544:6;538:13;587:6;582:2;571:9;567:18;560:34;646:6;641:2;633:6;629:15;624:2;613:9;609:18;603:50;702:1;697:2;688:6;677:9;673:22;669:31;662:42;831:2;761:66;756:2;748:6;744:15;740:88;729:9;725:104;721:113;713:121;;;365:475;;;;:::o;845:184::-;897:77;894:1;887:88;994:4;991:1;984:15;1018:4;1015:1;1008:15;1034:1259;1111:6;1119;1172:2;1160:9;1151:7;1147:23;1143:32;1140:52;;;1188:1;1185;1178:12;1140:52;1227:9;1214:23;1277:42;1270:5;1266:54;1259:5;1256:65;1246:93;;1335:1;1332;1325:12;1246:93;1358:5;-1:-1:-1;1414:2:129;1399:18;;1386:32;1441:18;1430:30;;1427:50;;;1473:1;1470;1463:12;1427:50;1496:22;;1549:4;1541:13;;1537:27;-1:-1:-1;1527:55:129;;1578:1;1575;1568:12;1527:55;1618:2;1605:16;1644:18;1636:6;1633:30;1630:56;;;1666:18;;:::i;:::-;1715:2;1709:9;1862:66;1857:2;1788:66;1781:4;1773:6;1769:17;1765:90;1761:99;1757:172;1749:6;1745:185;1996:6;1984:10;1981:22;1960:18;1948:10;1945:34;1942:62;1939:88;;;2007:18;;:::i;:::-;2043:2;2036:22;2067;;;2108:15;;;2125:2;2104:24;2101:37;-1:-1:-1;2098:57:129;;;2151:1;2148;2141:12;2098:57;2207:6;2202:2;2198;2194:11;2189:2;2181:6;2177:15;2164:50;2260:1;2255:2;2246:6;2238;2234:19;2230:28;2223:39;2281:6;2271:16;;;;;1034:1259;;;;;:::o;2298:322::-;2371:9;;;2402;;2419:15;;;2413:22;;2399:37;2389:225;;2470:77;2467:1;2460:88;2571:4;2568:1;2561:15;2599:4;2596:1;2589:15","linkReferences":{}},"methodIdentifiers":{"getStorageAt(uint256,uint256)":"5624b25b","simulateAndRevert(address,bytes)":"b4faba09"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"details\":\"Reads `length` bytes of storage in the currents contract\",\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegetecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}}},\"title\":\"StorageAccessible - generic base contract that allows callers to access all internal storage.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":\"StorageAccessible\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x36853adb266c2ab7d3c612aca799441a86bd15d9e1d24fc6c70d63f5c2df3aaf\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3f210f47e032444049040d2929b32e02089aac1d05b07dcd77ee34bb63505dfa\",\"dweb:/ipfs/QmbE8GXFAbthieTL51S2XPF5URyPaj1tDubVuhztkSoiPo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStorageAt","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"targetContract","type":"address"},{"internalType":"bytes","name":"calldataPayload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"simulateAndRevert"}],"devdoc":{"kind":"dev","methods":{"getStorageAt(uint256,uint256)":{"details":"Reads `length` bytes of storage in the currents contract","params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegetecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/safe-contracts/contracts/common/StorageAccessible.sol":"StorageAccessible"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/safe-contracts/contracts/common/StorageAccessible.sol":{"keccak256":"0x36853adb266c2ab7d3c612aca799441a86bd15d9e1d24fc6c70d63f5c2df3aaf","urls":["bzz-raw://3f210f47e032444049040d2929b32e02089aac1d05b07dcd77ee34bb63505dfa","dweb:/ipfs/QmbE8GXFAbthieTL51S2XPF5URyPaj1tDubVuhztkSoiPo"],"license":"LGPL-3.0-only"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","notice":"See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol"},"devdoc":{"version":1,"kind":"dev","methods":{"getStorageAt(uint256,uint256)":{"details":"Reads `length` bytes of storage in the currents contract","params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegetecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}}},"title":"StorageAccessible - generic base contract that allows callers to access all internal storage."},"ast":{"absolutePath":"lib/safe-contracts/contracts/common/StorageAccessible.sol","id":49948,"exportedSymbols":{"StorageAccessible":[49947]},"nodeType":"SourceUnit","src":"42:2187:45","nodes":[{"id":49900,"nodeType":"PragmaDirective","src":"42:31:45","nodes":[],"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},{"id":49947,"nodeType":"ContractDefinition","src":"315:1913:45","nodes":[{"id":49936,"nodeType":"FunctionDefinition","src":"643:464:45","nodes":[],"body":{"id":49935,"nodeType":"Block","src":"732:375:45","nodes":[],"statements":[{"assignments":[49912],"declarations":[{"constant":false,"id":49912,"mutability":"mutable","name":"result","nameLocation":"755:6:45","nodeType":"VariableDeclaration","scope":49935,"src":"742:19:45","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49911,"name":"bytes","nodeType":"ElementaryTypeName","src":"742:5:45","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":49919,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49915,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49906,"src":"774:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":49916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"783:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"774:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":49914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"764:9:45","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":49913,"name":"bytes","nodeType":"ElementaryTypeName","src":"768:5:45","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":49918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"764:22:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"742:44:45"},{"body":{"id":49931,"nodeType":"Block","src":"845:233:45","statements":[{"AST":{"nativeSrc":"928:140:45","nodeType":"YulBlock","src":"928:140:45","statements":[{"nativeSrc":"946:37:45","nodeType":"YulVariableDeclaration","src":"946:37:45","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"968:6:45","nodeType":"YulIdentifier","src":"968:6:45"},{"name":"index","nativeSrc":"976:5:45","nodeType":"YulIdentifier","src":"976:5:45"}],"functionName":{"name":"add","nativeSrc":"964:3:45","nodeType":"YulIdentifier","src":"964:3:45"},"nativeSrc":"964:18:45","nodeType":"YulFunctionCall","src":"964:18:45"}],"functionName":{"name":"sload","nativeSrc":"958:5:45","nodeType":"YulIdentifier","src":"958:5:45"},"nativeSrc":"958:25:45","nodeType":"YulFunctionCall","src":"958:25:45"},"variables":[{"name":"word","nativeSrc":"950:4:45","nodeType":"YulTypedName","src":"950:4:45","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"result","nativeSrc":"1015:6:45","nodeType":"YulIdentifier","src":"1015:6:45"},{"kind":"number","nativeSrc":"1023:4:45","nodeType":"YulLiteral","src":"1023:4:45","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1011:3:45","nodeType":"YulIdentifier","src":"1011:3:45"},"nativeSrc":"1011:17:45","nodeType":"YulFunctionCall","src":"1011:17:45"},{"arguments":[{"name":"index","nativeSrc":"1034:5:45","nodeType":"YulIdentifier","src":"1034:5:45"},{"kind":"number","nativeSrc":"1041:4:45","nodeType":"YulLiteral","src":"1041:4:45","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"1030:3:45","nodeType":"YulIdentifier","src":"1030:3:45"},"nativeSrc":"1030:16:45","nodeType":"YulFunctionCall","src":"1030:16:45"}],"functionName":{"name":"add","nativeSrc":"1007:3:45","nodeType":"YulIdentifier","src":"1007:3:45"},"nativeSrc":"1007:40:45","nodeType":"YulFunctionCall","src":"1007:40:45"},{"name":"word","nativeSrc":"1049:4:45","nodeType":"YulIdentifier","src":"1049:4:45"}],"functionName":{"name":"mstore","nativeSrc":"1000:6:45","nodeType":"YulIdentifier","src":"1000:6:45"},"nativeSrc":"1000:54:45","nodeType":"YulFunctionCall","src":"1000:54:45"},"nativeSrc":"1000:54:45","nodeType":"YulExpressionStatement","src":"1000:54:45"}]},"evmVersion":"cancun","externalReferences":[{"declaration":49921,"isOffset":false,"isSlot":false,"src":"1034:5:45","valueSize":1},{"declaration":49921,"isOffset":false,"isSlot":false,"src":"976:5:45","valueSize":1},{"declaration":49904,"isOffset":false,"isSlot":false,"src":"968:6:45","valueSize":1},{"declaration":49912,"isOffset":false,"isSlot":false,"src":"1015:6:45","valueSize":1}],"id":49930,"nodeType":"InlineAssembly","src":"919:149:45"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49924,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49921,"src":"820:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":49925,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49906,"src":"828:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"820:14:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49932,"initializationExpression":{"assignments":[49921],"declarations":[{"constant":false,"id":49921,"mutability":"mutable","name":"index","nameLocation":"809:5:45","nodeType":"VariableDeclaration","scope":49932,"src":"801:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49920,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":49923,"initialValue":{"hexValue":"30","id":49922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"817:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"801:17:45"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":49928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"836:7:45","subExpression":{"id":49927,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49921,"src":"836:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":49929,"nodeType":"ExpressionStatement","src":"836:7:45"},"nodeType":"ForStatement","src":"796:282:45"},{"expression":{"id":49933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49912,"src":"1094:6:45","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":49910,"id":49934,"nodeType":"Return","src":"1087:13:45"}]},"documentation":{"id":49902,"nodeType":"StructuredDocumentation","src":"348:290:45","text":" @dev Reads `length` bytes of storage in the currents contract\n @param offset - the offset in the current contract's storage in words to start reading from\n @param length - the number of words (32 bytes) of data to read\n @return the bytes that were read."},"functionSelector":"5624b25b","implemented":true,"kind":"function","modifiers":[],"name":"getStorageAt","nameLocation":"652:12:45","parameters":{"id":49907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49904,"mutability":"mutable","name":"offset","nameLocation":"673:6:45","nodeType":"VariableDeclaration","scope":49936,"src":"665:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49903,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":49906,"mutability":"mutable","name":"length","nameLocation":"689:6:45","nodeType":"VariableDeclaration","scope":49936,"src":"681:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49905,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"664:32:45"},"returnParameters":{"id":49910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49936,"src":"718:12:45","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49908,"name":"bytes","nodeType":"ElementaryTypeName","src":"718:5:45","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"717:14:45"},"scope":49947,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":49946,"nodeType":"FunctionDefinition","src":"1740:486:45","nodes":[],"body":{"id":49945,"nodeType":"Block","src":"1830:396:45","nodes":[],"statements":[{"AST":{"nativeSrc":"1905:315:45","nodeType":"YulBlock","src":"1905:315:45","statements":[{"nativeSrc":"1919:108:45","nodeType":"YulVariableDeclaration","src":"1919:108:45","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1947:3:45","nodeType":"YulIdentifier","src":"1947:3:45"},"nativeSrc":"1947:5:45","nodeType":"YulFunctionCall","src":"1947:5:45"},{"name":"targetContract","nativeSrc":"1954:14:45","nodeType":"YulIdentifier","src":"1954:14:45"},{"arguments":[{"name":"calldataPayload","nativeSrc":"1974:15:45","nodeType":"YulIdentifier","src":"1974:15:45"},{"kind":"number","nativeSrc":"1991:4:45","nodeType":"YulLiteral","src":"1991:4:45","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1970:3:45","nodeType":"YulIdentifier","src":"1970:3:45"},"nativeSrc":"1970:26:45","nodeType":"YulFunctionCall","src":"1970:26:45"},{"arguments":[{"name":"calldataPayload","nativeSrc":"2004:15:45","nodeType":"YulIdentifier","src":"2004:15:45"}],"functionName":{"name":"mload","nativeSrc":"1998:5:45","nodeType":"YulIdentifier","src":"1998:5:45"},"nativeSrc":"1998:22:45","nodeType":"YulFunctionCall","src":"1998:22:45"},{"kind":"number","nativeSrc":"2022:1:45","nodeType":"YulLiteral","src":"2022:1:45","type":"","value":"0"},{"kind":"number","nativeSrc":"2025:1:45","nodeType":"YulLiteral","src":"2025:1:45","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1934:12:45","nodeType":"YulIdentifier","src":"1934:12:45"},"nativeSrc":"1934:93:45","nodeType":"YulFunctionCall","src":"1934:93:45"},"variables":[{"name":"success","nativeSrc":"1923:7:45","nodeType":"YulTypedName","src":"1923:7:45","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2048:4:45","nodeType":"YulLiteral","src":"2048:4:45","type":"","value":"0x00"},{"name":"success","nativeSrc":"2054:7:45","nodeType":"YulIdentifier","src":"2054:7:45"}],"functionName":{"name":"mstore","nativeSrc":"2041:6:45","nodeType":"YulIdentifier","src":"2041:6:45"},"nativeSrc":"2041:21:45","nodeType":"YulFunctionCall","src":"2041:21:45"},"nativeSrc":"2041:21:45","nodeType":"YulExpressionStatement","src":"2041:21:45"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2082:4:45","nodeType":"YulLiteral","src":"2082:4:45","type":"","value":"0x20"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2088:14:45","nodeType":"YulIdentifier","src":"2088:14:45"},"nativeSrc":"2088:16:45","nodeType":"YulFunctionCall","src":"2088:16:45"}],"functionName":{"name":"mstore","nativeSrc":"2075:6:45","nodeType":"YulIdentifier","src":"2075:6:45"},"nativeSrc":"2075:30:45","nodeType":"YulFunctionCall","src":"2075:30:45"},"nativeSrc":"2075:30:45","nodeType":"YulExpressionStatement","src":"2075:30:45"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2133:4:45","nodeType":"YulLiteral","src":"2133:4:45","type":"","value":"0x40"},{"kind":"number","nativeSrc":"2139:1:45","nodeType":"YulLiteral","src":"2139:1:45","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2142:14:45","nodeType":"YulIdentifier","src":"2142:14:45"},"nativeSrc":"2142:16:45","nodeType":"YulFunctionCall","src":"2142:16:45"}],"functionName":{"name":"returndatacopy","nativeSrc":"2118:14:45","nodeType":"YulIdentifier","src":"2118:14:45"},"nativeSrc":"2118:41:45","nodeType":"YulFunctionCall","src":"2118:41:45"},"nativeSrc":"2118:41:45","nodeType":"YulExpressionStatement","src":"2118:41:45"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2179:1:45","nodeType":"YulLiteral","src":"2179:1:45","type":"","value":"0"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2186:14:45","nodeType":"YulIdentifier","src":"2186:14:45"},"nativeSrc":"2186:16:45","nodeType":"YulFunctionCall","src":"2186:16:45"},{"kind":"number","nativeSrc":"2204:4:45","nodeType":"YulLiteral","src":"2204:4:45","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2182:3:45","nodeType":"YulIdentifier","src":"2182:3:45"},"nativeSrc":"2182:27:45","nodeType":"YulFunctionCall","src":"2182:27:45"}],"functionName":{"name":"revert","nativeSrc":"2172:6:45","nodeType":"YulIdentifier","src":"2172:6:45"},"nativeSrc":"2172:38:45","nodeType":"YulFunctionCall","src":"2172:38:45"},"nativeSrc":"2172:38:45","nodeType":"YulExpressionStatement","src":"2172:38:45"}]},"evmVersion":"cancun","externalReferences":[{"declaration":49941,"isOffset":false,"isSlot":false,"src":"1974:15:45","valueSize":1},{"declaration":49941,"isOffset":false,"isSlot":false,"src":"2004:15:45","valueSize":1},{"declaration":49939,"isOffset":false,"isSlot":false,"src":"1954:14:45","valueSize":1}],"id":49944,"nodeType":"InlineAssembly","src":"1896:324:45"}]},"documentation":{"id":49937,"nodeType":"StructuredDocumentation","src":"1113:622:45","text":" @dev Performs a delegetecall on a targetContract in the context of self.\n Internally reverts execution to avoid side effects (making it static).\n This method reverts with data equal to `abi.encode(bool(success), bytes(response))`.\n Specifically, the `returndata` after a call to this method will be:\n `success:bool || response.length:uint256 || response:bytes`.\n @param targetContract Address of the contract containing the code to execute.\n @param calldataPayload Calldata that should be sent to the target contract (encoded method name and arguments)."},"functionSelector":"b4faba09","implemented":true,"kind":"function","modifiers":[],"name":"simulateAndRevert","nameLocation":"1749:17:45","parameters":{"id":49942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49939,"mutability":"mutable","name":"targetContract","nameLocation":"1775:14:45","nodeType":"VariableDeclaration","scope":49946,"src":"1767:22:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49938,"name":"address","nodeType":"ElementaryTypeName","src":"1767:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49941,"mutability":"mutable","name":"calldataPayload","nameLocation":"1804:15:45","nodeType":"VariableDeclaration","scope":49946,"src":"1791:28:45","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49940,"name":"bytes","nodeType":"ElementaryTypeName","src":"1791:5:45","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1766:54:45"},"returnParameters":{"id":49943,"nodeType":"ParameterList","parameters":[],"src":"1830:0:45"},"scope":49947,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"StorageAccessible","contractDependencies":[],"contractKind":"contract","documentation":{"id":49901,"nodeType":"StructuredDocumentation","src":"75:240:45","text":"@title StorageAccessible - generic base contract that allows callers to access all internal storage.\n @notice See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol"},"fullyImplemented":true,"linearizedBaseContracts":[49947],"name":"StorageAccessible","nameLocation":"324:17:45","scope":49948,"usedErrors":[],"usedEvents":[]}],"license":"LGPL-3.0-only"},"id":45}