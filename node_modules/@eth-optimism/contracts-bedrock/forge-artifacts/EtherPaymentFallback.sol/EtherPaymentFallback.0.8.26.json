{"abi":[{"type":"receive","stateMutability":"payable"},{"type":"event","name":"SafeReceived","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x6080604052348015600e575f80fd5b50605080601a5f395ff3fe608060405236603f5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b5f80fdfea164736f6c634300081a000a","sourceMap":"216:245:40:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405236603f5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b5f80fdfea164736f6c634300081a000a","sourceMap":"216:245:40:-:0;;;;;;417:35;;442:9;160:25:129;;430:10:40;;417:35;;148:2:129;133:18;417:35:40;;;;;;;216:245;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeReceived\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.pm>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EtherPaymentFallback - A contract that has a fallback to accept ether payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol\":\"EtherPaymentFallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://962fc098cfdd8a43cc7d294c1105718ea985cacf1172ea0426f7370e2096b830\",\"dweb:/ipfs/QmdZrxJ7dSWuTjbrN133YiRDLwYQr21zLr3CqWWtowY9Gu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"SafeReceived","anonymous":false},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol":"EtherPaymentFallback"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol":{"keccak256":"0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72","urls":["bzz-raw://962fc098cfdd8a43cc7d294c1105718ea985cacf1172ea0426f7370e2096b830","dweb:/ipfs/QmdZrxJ7dSWuTjbrN133YiRDLwYQr21zLr3CqWWtowY9Gu"],"license":"LGPL-3.0-only"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","author":"Richard Meissner - <richard@gnosis.pm>","title":"EtherPaymentFallback - A contract that has a fallback to accept ether payments"},"ast":{"absolutePath":"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol","id":49820,"exportedSymbols":{"EtherPaymentFallback":[49819]},"nodeType":"SourceUnit","src":"42:420:40","nodes":[{"id":49799,"nodeType":"PragmaDirective","src":"42:31:40","nodes":[],"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},{"id":49819,"nodeType":"ContractDefinition","src":"216:245:40","nodes":[{"id":49806,"nodeType":"EventDefinition","src":"252:58:40","nodes":[],"anonymous":false,"eventSelector":"3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d","name":"SafeReceived","nameLocation":"258:12:40","parameters":{"id":49805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49802,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"287:6:40","nodeType":"VariableDeclaration","scope":49806,"src":"271:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49801,"name":"address","nodeType":"ElementaryTypeName","src":"271:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49804,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"303:5:40","nodeType":"VariableDeclaration","scope":49806,"src":"295:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49803,"name":"uint256","nodeType":"ElementaryTypeName","src":"295:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"270:39:40"}},{"id":49818,"nodeType":"FunctionDefinition","src":"375:84:40","nodes":[],"body":{"id":49817,"nodeType":"Block","src":"402:57:40","nodes":[],"statements":[{"eventCall":{"arguments":[{"expression":{"id":49811,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"430:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":49812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"434:6:40","memberName":"sender","nodeType":"MemberAccess","src":"430:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":49813,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"442:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":49814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"446:5:40","memberName":"value","nodeType":"MemberAccess","src":"442:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":49810,"name":"SafeReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49806,"src":"417:12:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":49815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"417:35:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49816,"nodeType":"EmitStatement","src":"412:40:40"}]},"documentation":{"id":49807,"nodeType":"StructuredDocumentation","src":"316:54:40","text":"@dev Fallback function accepts Ether transactions."},"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":49808,"nodeType":"ParameterList","parameters":[],"src":"382:2:40"},"returnParameters":{"id":49809,"nodeType":"ParameterList","parameters":[],"src":"402:0:40"},"scope":49819,"stateMutability":"payable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"EtherPaymentFallback","contractDependencies":[],"contractKind":"contract","documentation":{"id":49800,"nodeType":"StructuredDocumentation","src":"75:141:40","text":"@title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n @author Richard Meissner - <richard@gnosis.pm>"},"fullyImplemented":true,"linearizedBaseContracts":[49819],"name":"EtherPaymentFallback","nameLocation":"225:20:40","scope":49820,"usedErrors":[],"usedEvents":[49806]}],"license":"LGPL-3.0-only"},"id":40}