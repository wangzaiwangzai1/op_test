{"abi":[],"bytecode":{"object":"0x602c6032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea164736f6c634300081a000a","sourceMap":"154:3315:102:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;154:3315:102;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea164736f6c634300081a000a","sourceMap":"154:3315:102:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Storage handles reading and writing to arbitary storage locations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Storage.sol\":\"Storage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/libraries/Storage.sol\":{\"keccak256\":\"0x7ce27a05552aa69afa6b2ab6684dfe99f27366cf8ef2046baeb1fb62fff0022f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a24f3ed56681720707a5ab0372fd67fcb1a4f6fb072c7140cda28bdb70f269\",\"dweb:/ipfs/QmW9uTpUULV4xmP7A7MoBDeDhVfQgmJG5qVUFGtXxWpWWK\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/solady/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/libraries/Storage.sol":"Storage"},"evmVersion":"cancun","libraries":{}},"sources":{"src/libraries/Storage.sol":{"keccak256":"0x7ce27a05552aa69afa6b2ab6684dfe99f27366cf8ef2046baeb1fb62fff0022f","urls":["bzz-raw://a6a24f3ed56681720707a5ab0372fd67fcb1a4f6fb072c7140cda28bdb70f269","dweb:/ipfs/QmW9uTpUULV4xmP7A7MoBDeDhVfQgmJG5qVUFGtXxWpWWK"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","notice":"Storage handles reading and writing to arbitary storage locations"},"devdoc":{"version":1,"kind":"dev","title":"Storage"},"ast":{"absolutePath":"src/libraries/Storage.sol","id":61057,"exportedSymbols":{"Storage":[61056]},"nodeType":"SourceUnit","src":"32:3438:102","nodes":[{"id":60974,"nodeType":"PragmaDirective","src":"32:23:102","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":61056,"nodeType":"ContractDefinition","src":"154:3315:102","nodes":[{"id":60985,"nodeType":"FunctionDefinition","src":"420:143:102","nodes":[],"body":{"id":60984,"nodeType":"Block","src":"493:70:102","nodes":[],"statements":[{"AST":{"nativeSrc":"512:45:102","nodeType":"YulBlock","src":"512:45:102","statements":[{"nativeSrc":"526:21:102","nodeType":"YulAssignment","src":"526:21:102","value":{"arguments":[{"name":"_slot","nativeSrc":"541:5:102","nodeType":"YulIdentifier","src":"541:5:102"}],"functionName":{"name":"sload","nativeSrc":"535:5:102","nodeType":"YulIdentifier","src":"535:5:102"},"nativeSrc":"535:12:102","nodeType":"YulFunctionCall","src":"535:12:102"},"variableNames":[{"name":"addr_","nativeSrc":"526:5:102","nodeType":"YulIdentifier","src":"526:5:102"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":60978,"isOffset":false,"isSlot":false,"src":"541:5:102","valueSize":1},{"declaration":60981,"isOffset":false,"isSlot":false,"src":"526:5:102","valueSize":1}],"id":60983,"nodeType":"InlineAssembly","src":"503:54:102"}]},"documentation":{"id":60976,"nodeType":"StructuredDocumentation","src":"176:239:102","text":"@notice Returns an address stored in an arbitrary storage slot.\n         These storage slots decouple the storage layout from\n         solc's automation.\n @param _slot The storage slot to retrieve the address from."},"implemented":true,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"429:10:102","parameters":{"id":60979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60978,"mutability":"mutable","name":"_slot","nameLocation":"448:5:102","nodeType":"VariableDeclaration","scope":60985,"src":"440:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"440:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"439:15:102"},"returnParameters":{"id":60982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60981,"mutability":"mutable","name":"addr_","nameLocation":"486:5:102","nodeType":"VariableDeclaration","scope":60985,"src":"478:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60980,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:102","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:15:102"},"scope":61056,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":60995,"nodeType":"FunctionDefinition","src":"900:134:102","nodes":[],"body":{"id":60994,"nodeType":"Block","src":"962:72:102","nodes":[],"statements":[{"AST":{"nativeSrc":"981:47:102","nodeType":"YulBlock","src":"981:47:102","statements":[{"expression":{"arguments":[{"name":"_slot","nativeSrc":"1002:5:102","nodeType":"YulIdentifier","src":"1002:5:102"},{"name":"_address","nativeSrc":"1009:8:102","nodeType":"YulIdentifier","src":"1009:8:102"}],"functionName":{"name":"sstore","nativeSrc":"995:6:102","nodeType":"YulIdentifier","src":"995:6:102"},"nativeSrc":"995:23:102","nodeType":"YulFunctionCall","src":"995:23:102"},"nativeSrc":"995:23:102","nodeType":"YulExpressionStatement","src":"995:23:102"}]},"evmVersion":"cancun","externalReferences":[{"declaration":60990,"isOffset":false,"isSlot":false,"src":"1009:8:102","valueSize":1},{"declaration":60988,"isOffset":false,"isSlot":false,"src":"1002:5:102","valueSize":1}],"id":60993,"nodeType":"InlineAssembly","src":"972:56:102"}]},"documentation":{"id":60986,"nodeType":"StructuredDocumentation","src":"569:326:102","text":"@notice Stores an address in an arbitrary storage slot, `_slot`.\n @param _slot The storage slot to store the address in.\n @param _address The protocol version to store\n @dev WARNING! This function must be used cautiously, as it allows for overwriting addresses\n      in arbitrary storage slots."},"implemented":true,"kind":"function","modifiers":[],"name":"setAddress","nameLocation":"909:10:102","parameters":{"id":60991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60988,"mutability":"mutable","name":"_slot","nameLocation":"928:5:102","nodeType":"VariableDeclaration","scope":60995,"src":"920:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"920:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60990,"mutability":"mutable","name":"_address","nameLocation":"943:8:102","nodeType":"VariableDeclaration","scope":60995,"src":"935:16:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60989,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:102","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"919:33:102"},"returnParameters":{"id":60992,"nodeType":"ParameterList","parameters":[],"src":"962:0:102"},"scope":61056,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":61005,"nodeType":"FunctionDefinition","src":"1283:142:102","nodes":[],"body":{"id":61004,"nodeType":"Block","src":"1354:71:102","nodes":[],"statements":[{"AST":{"nativeSrc":"1373:46:102","nodeType":"YulBlock","src":"1373:46:102","statements":[{"nativeSrc":"1387:22:102","nodeType":"YulAssignment","src":"1387:22:102","value":{"arguments":[{"name":"_slot","nativeSrc":"1403:5:102","nodeType":"YulIdentifier","src":"1403:5:102"}],"functionName":{"name":"sload","nativeSrc":"1397:5:102","nodeType":"YulIdentifier","src":"1397:5:102"},"nativeSrc":"1397:12:102","nodeType":"YulFunctionCall","src":"1397:12:102"},"variableNames":[{"name":"value_","nativeSrc":"1387:6:102","nodeType":"YulIdentifier","src":"1387:6:102"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":60998,"isOffset":false,"isSlot":false,"src":"1403:5:102","valueSize":1},{"declaration":61001,"isOffset":false,"isSlot":false,"src":"1387:6:102","valueSize":1}],"id":61003,"nodeType":"InlineAssembly","src":"1364:55:102"}]},"documentation":{"id":60996,"nodeType":"StructuredDocumentation","src":"1040:238:102","text":"@notice Returns a uint256 stored in an arbitrary storage slot.\n         These storage slots decouple the storage layout from\n         solc's automation.\n @param _slot The storage slot to retrieve the address from."},"implemented":true,"kind":"function","modifiers":[],"name":"getUint","nameLocation":"1292:7:102","parameters":{"id":60999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60998,"mutability":"mutable","name":"_slot","nameLocation":"1308:5:102","nodeType":"VariableDeclaration","scope":61005,"src":"1300:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1300:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1299:15:102"},"returnParameters":{"id":61002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61001,"mutability":"mutable","name":"value_","nameLocation":"1346:6:102","nodeType":"VariableDeclaration","scope":61005,"src":"1338:14:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61000,"name":"uint256","nodeType":"ElementaryTypeName","src":"1338:7:102","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1337:16:102"},"scope":61056,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":61015,"nodeType":"FunctionDefinition","src":"1754:127:102","nodes":[],"body":{"id":61014,"nodeType":"Block","src":"1811:70:102","nodes":[],"statements":[{"AST":{"nativeSrc":"1830:45:102","nodeType":"YulBlock","src":"1830:45:102","statements":[{"expression":{"arguments":[{"name":"_slot","nativeSrc":"1851:5:102","nodeType":"YulIdentifier","src":"1851:5:102"},{"name":"_value","nativeSrc":"1858:6:102","nodeType":"YulIdentifier","src":"1858:6:102"}],"functionName":{"name":"sstore","nativeSrc":"1844:6:102","nodeType":"YulIdentifier","src":"1844:6:102"},"nativeSrc":"1844:21:102","nodeType":"YulFunctionCall","src":"1844:21:102"},"nativeSrc":"1844:21:102","nodeType":"YulExpressionStatement","src":"1844:21:102"}]},"evmVersion":"cancun","externalReferences":[{"declaration":61008,"isOffset":false,"isSlot":false,"src":"1851:5:102","valueSize":1},{"declaration":61010,"isOffset":false,"isSlot":false,"src":"1858:6:102","valueSize":1}],"id":61013,"nodeType":"InlineAssembly","src":"1821:54:102"}]},"documentation":{"id":61006,"nodeType":"StructuredDocumentation","src":"1431:318:102","text":"@notice Stores a value in an arbitrary storage slot, `_slot`.\n @param _slot The storage slot to store the address in.\n @param _value The protocol version to store\n @dev WARNING! This function must be used cautiously, as it allows for overwriting values\n      in arbitrary storage slots."},"implemented":true,"kind":"function","modifiers":[],"name":"setUint","nameLocation":"1763:7:102","parameters":{"id":61011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61008,"mutability":"mutable","name":"_slot","nameLocation":"1779:5:102","nodeType":"VariableDeclaration","scope":61015,"src":"1771:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1771:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":61010,"mutability":"mutable","name":"_value","nameLocation":"1794:6:102","nodeType":"VariableDeclaration","scope":61015,"src":"1786:14:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61009,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:102","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1770:31:102"},"returnParameters":{"id":61012,"nodeType":"ParameterList","parameters":[],"src":"1811:0:102"},"scope":61056,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":61025,"nodeType":"FunctionDefinition","src":"2130:145:102","nodes":[],"body":{"id":61024,"nodeType":"Block","src":"2204:71:102","nodes":[],"statements":[{"AST":{"nativeSrc":"2223:46:102","nodeType":"YulBlock","src":"2223:46:102","statements":[{"nativeSrc":"2237:22:102","nodeType":"YulAssignment","src":"2237:22:102","value":{"arguments":[{"name":"_slot","nativeSrc":"2253:5:102","nodeType":"YulIdentifier","src":"2253:5:102"}],"functionName":{"name":"sload","nativeSrc":"2247:5:102","nodeType":"YulIdentifier","src":"2247:5:102"},"nativeSrc":"2247:12:102","nodeType":"YulFunctionCall","src":"2247:12:102"},"variableNames":[{"name":"value_","nativeSrc":"2237:6:102","nodeType":"YulIdentifier","src":"2237:6:102"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":61018,"isOffset":false,"isSlot":false,"src":"2253:5:102","valueSize":1},{"declaration":61021,"isOffset":false,"isSlot":false,"src":"2237:6:102","valueSize":1}],"id":61023,"nodeType":"InlineAssembly","src":"2214:55:102"}]},"documentation":{"id":61016,"nodeType":"StructuredDocumentation","src":"1887:238:102","text":"@notice Returns a bytes32 stored in an arbitrary storage slot.\n         These storage slots decouple the storage layout from\n         solc's automation.\n @param _slot The storage slot to retrieve the address from."},"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32","nameLocation":"2139:10:102","parameters":{"id":61019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61018,"mutability":"mutable","name":"_slot","nameLocation":"2158:5:102","nodeType":"VariableDeclaration","scope":61025,"src":"2150:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2150:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2149:15:102"},"returnParameters":{"id":61022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61021,"mutability":"mutable","name":"value_","nameLocation":"2196:6:102","nodeType":"VariableDeclaration","scope":61025,"src":"2188:14:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2188:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2187:16:102"},"scope":61056,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":61035,"nodeType":"FunctionDefinition","src":"2610:130:102","nodes":[],"body":{"id":61034,"nodeType":"Block","src":"2670:70:102","nodes":[],"statements":[{"AST":{"nativeSrc":"2689:45:102","nodeType":"YulBlock","src":"2689:45:102","statements":[{"expression":{"arguments":[{"name":"_slot","nativeSrc":"2710:5:102","nodeType":"YulIdentifier","src":"2710:5:102"},{"name":"_value","nativeSrc":"2717:6:102","nodeType":"YulIdentifier","src":"2717:6:102"}],"functionName":{"name":"sstore","nativeSrc":"2703:6:102","nodeType":"YulIdentifier","src":"2703:6:102"},"nativeSrc":"2703:21:102","nodeType":"YulFunctionCall","src":"2703:21:102"},"nativeSrc":"2703:21:102","nodeType":"YulExpressionStatement","src":"2703:21:102"}]},"evmVersion":"cancun","externalReferences":[{"declaration":61028,"isOffset":false,"isSlot":false,"src":"2710:5:102","valueSize":1},{"declaration":61030,"isOffset":false,"isSlot":false,"src":"2717:6:102","valueSize":1}],"id":61033,"nodeType":"InlineAssembly","src":"2680:54:102"}]},"documentation":{"id":61026,"nodeType":"StructuredDocumentation","src":"2281:324:102","text":"@notice Stores a bytes32 value in an arbitrary storage slot, `_slot`.\n @param _slot The storage slot to store the address in.\n @param _value The bytes32 value to store.\n @dev WARNING! This function must be used cautiously, as it allows for overwriting values\n      in arbitrary storage slots."},"implemented":true,"kind":"function","modifiers":[],"name":"setBytes32","nameLocation":"2619:10:102","parameters":{"id":61031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61028,"mutability":"mutable","name":"_slot","nameLocation":"2638:5:102","nodeType":"VariableDeclaration","scope":61035,"src":"2630:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2630:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":61030,"mutability":"mutable","name":"_value","nameLocation":"2653:6:102","nodeType":"VariableDeclaration","scope":61035,"src":"2645:14:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2645:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2629:31:102"},"returnParameters":{"id":61032,"nodeType":"ParameterList","parameters":[],"src":"2670:0:102"},"scope":61056,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":61045,"nodeType":"FunctionDefinition","src":"3065:124:102","nodes":[],"body":{"id":61044,"nodeType":"Block","src":"3119:70:102","nodes":[],"statements":[{"AST":{"nativeSrc":"3138:45:102","nodeType":"YulBlock","src":"3138:45:102","statements":[{"expression":{"arguments":[{"name":"_slot","nativeSrc":"3159:5:102","nodeType":"YulIdentifier","src":"3159:5:102"},{"name":"_value","nativeSrc":"3166:6:102","nodeType":"YulIdentifier","src":"3166:6:102"}],"functionName":{"name":"sstore","nativeSrc":"3152:6:102","nodeType":"YulIdentifier","src":"3152:6:102"},"nativeSrc":"3152:21:102","nodeType":"YulFunctionCall","src":"3152:21:102"},"nativeSrc":"3152:21:102","nodeType":"YulExpressionStatement","src":"3152:21:102"}]},"evmVersion":"cancun","externalReferences":[{"declaration":61038,"isOffset":false,"isSlot":false,"src":"3159:5:102","valueSize":1},{"declaration":61040,"isOffset":false,"isSlot":false,"src":"3166:6:102","valueSize":1}],"id":61043,"nodeType":"InlineAssembly","src":"3129:54:102"}]},"documentation":{"id":61036,"nodeType":"StructuredDocumentation","src":"2746:314:102","text":"@notice Stores a bool value in an arbitrary storage slot, `_slot`.\n @param _slot The storage slot to store the bool in.\n @param _value The bool value to store\n @dev WARNING! This function must be used cautiously, as it allows for overwriting values\n      in arbitrary storage slots."},"implemented":true,"kind":"function","modifiers":[],"name":"setBool","nameLocation":"3074:7:102","parameters":{"id":61041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61038,"mutability":"mutable","name":"_slot","nameLocation":"3090:5:102","nodeType":"VariableDeclaration","scope":61045,"src":"3082:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":61040,"mutability":"mutable","name":"_value","nameLocation":"3102:6:102","nodeType":"VariableDeclaration","scope":61045,"src":"3097:11:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61039,"name":"bool","nodeType":"ElementaryTypeName","src":"3097:4:102","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3081:28:102"},"returnParameters":{"id":61042,"nodeType":"ParameterList","parameters":[],"src":"3119:0:102"},"scope":61056,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":61055,"nodeType":"FunctionDefinition","src":"3328:139:102","nodes":[],"body":{"id":61054,"nodeType":"Block","src":"3396:71:102","nodes":[],"statements":[{"AST":{"nativeSrc":"3415:46:102","nodeType":"YulBlock","src":"3415:46:102","statements":[{"nativeSrc":"3429:22:102","nodeType":"YulAssignment","src":"3429:22:102","value":{"arguments":[{"name":"_slot","nativeSrc":"3445:5:102","nodeType":"YulIdentifier","src":"3445:5:102"}],"functionName":{"name":"sload","nativeSrc":"3439:5:102","nodeType":"YulIdentifier","src":"3439:5:102"},"nativeSrc":"3439:12:102","nodeType":"YulFunctionCall","src":"3439:12:102"},"variableNames":[{"name":"value_","nativeSrc":"3429:6:102","nodeType":"YulIdentifier","src":"3429:6:102"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":61048,"isOffset":false,"isSlot":false,"src":"3445:5:102","valueSize":1},{"declaration":61051,"isOffset":false,"isSlot":false,"src":"3429:6:102","valueSize":1}],"id":61053,"nodeType":"InlineAssembly","src":"3406:55:102"}]},"documentation":{"id":61046,"nodeType":"StructuredDocumentation","src":"3195:128:102","text":"@notice Returns a bool stored in an arbitrary storage slot.\n @param _slot The storage slot to retrieve the bool from."},"implemented":true,"kind":"function","modifiers":[],"name":"getBool","nameLocation":"3337:7:102","parameters":{"id":61049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61048,"mutability":"mutable","name":"_slot","nameLocation":"3353:5:102","nodeType":"VariableDeclaration","scope":61055,"src":"3345:13:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3345:7:102","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3344:15:102"},"returnParameters":{"id":61052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61051,"mutability":"mutable","name":"value_","nameLocation":"3388:6:102","nodeType":"VariableDeclaration","scope":61055,"src":"3383:11:102","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61050,"name":"bool","nodeType":"ElementaryTypeName","src":"3383:4:102","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3382:13:102"},"scope":61056,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Storage","contractDependencies":[],"contractKind":"library","documentation":{"id":60975,"nodeType":"StructuredDocumentation","src":"57:97:102","text":"@title Storage\n @notice Storage handles reading and writing to arbitary storage locations"},"fullyImplemented":true,"linearizedBaseContracts":[61056],"name":"Storage","nameLocation":"162:7:102","scope":61057,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":102}